%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: histogram_gray.pdf
%%Creator: Adobe Acrobat 11.0.16
%%For: mtrawick
%%CreationDate: 5/19/2016, 7:59:13 AM
%%BoundingBox: 0 0 340 242
%%HiResBoundingBox: 0 0 339.2775 241.4090
%%CropBox: 0 0 339.2775 241.4090
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1098 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2016-05-19T07:55:12-04:00"
   xmp:ModifyDate="2016-05-19T07:58:56-04:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:MetadataDate="2016-05-19T07:58:56-04:00"
   pdf:Producer="Acrobat Distiller 11.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:872ec5c8-e855-4446-a2df-939538b0f43b"
   xmpMM:InstanceID="uuid:826a29b7-6924-4eaf-9181-9c88e8c2b1aa">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>mtrawick</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">measurement_uncertainty_plots2.nb</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -241.409 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
7.62939e-6 0 mo
7.62939e-6 241.409 li
339.277 241.409 li
339.277 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.58631 sep
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (WGJAAA+CIDFont+F1)
%%Title: (WGJAAA+CIDFont+F1 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /WGJAAA+CIDFont+F1 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-665 -325 2000 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4237 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 9 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A93
6AA182F5809A9> |
44 <001C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |
81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A28
5C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCD
ADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5
203A8015DD09B7CE> |
62 <001C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA
37FE8A> |
23 <001C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE0
23151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |
22 <001C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE
548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C
10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698
FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14
A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C
0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF
6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |
64 <001C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C11
15332A> |
29 <001C60D8A8C9B854D0F461D1A979903F917C33CF6EDB0A437B4DDC715015
0B60E1> |
32 <001C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F7
468DA1474C45> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /WGJAAA+CIDFont+F1-Identity-H /Identity-H 0 [/WGJAAA+CIDFont+F1] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YPTUYY+CIDFont+F1 /WGJAAA+CIDFont+F1-Identity-H findfont ct_VMDictPut
YPTUYY+CIDFont+F1 [5.7491 0 0 -5.7491 0 0 ]msf
-24.8264 -96.4601 mo
(\000,\000Q\000>\000\027\000\026\000@\000\035\000 )
[1.43842 3.1965 1.59825 3.1965 3.27641 1.55342 1.55342 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 Initial
ct_T42Dict begin
-0.191 -0.707 0.699 1.219
 256 array 0 1 255 {1 index exch /.notdef put} for  /ONKBAA+CIDFont+F2
Type42DictBegin
[<00010000000c000c000c000c4f532f3214ae6104000000cc000000606376
7420a46b88430000012c0000080e6670676d3cdc9b0c0000093c00000812
676c79669c9164e1000068a400004e8068656164e02a82bb000011500000
0036686865610ac0019a0000118800000024686d7478af349082000011ac
00001cfa6c6f63614bdf377200002ea800001cf66d61787017a0158b0000
4ba0000000206e616d65ac233dc400004bc0000007cf70726570dda09e48
000053900000151267646972000000000000000000000000000304cd02bc
00050008059a05330000011d059a05330000036100660212050502070609
020205020404e0002effc00078430000000900000000544d432000200022
037e0511fe54000006a90267400001ffffff0000038c04bc000000200015
04e700000492001b04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e
000004e70015fefd000002d7000000cd000000cd00000000000000000066
00cd012700cd00cd00cd009600aa00cd005900cd008700870186011900cd
00cd009300a900cd007a008400940001000f007f0003002f015800ac0029
00cd00d9002b00560097009700f900cd001200c6007f00cdfff1004200d3
00540001000f002800c60097004200c4017d021d021f000200cd042500d3
01ff04eb011203a50076017f01f3035f0084009700cd00fe02bfff490052
0085009c082cffae00260040006d007c0091009d010f0122ff6effd90006
001600290045ffa5ffc80061006d00b100b801ad0350047dff9f00520053
006e009200b4012e046004c9fde3fe83ff6fffd2000c008900a6010b0121
02000200052aff57001c0038003f005c00cb00cd00cd00cd01200429fdff
feddffb10006002b00410052007f0091009100c200d000f1014401d30426
0500fe01ff1fffcbffda0007003e005c00950103010301100122014601ab
021703cf03fa0005001800470052005c00650067006f007200a700a700ac
00b100ef0134013501440244025d0288029502c30393047d047efefd007f
00bb01000104012a0140014b015301ab01d201d2021d0279037dfe000006
0020002900430045004c005d006d008f009600c800cd00cd00d900fd0101
01030166016f017d019b01a001cd01e102c40354044804ebff66ff840002
00020012001600210027003d00450054005900ae00b300b900cd00e10104
011901220133013f01440182024c027603340350035b037c039003a503d4
045704aefe34feeeff85ffa1ffbcffd6ffdbffed000200110022002d004b
005300540058007b0084009100a200ae00c100d700f201230142016e0182
019401a201ad01ae01bc01d601fe020d02ab0336039303b6040104400495
04c6fe11fea3feb8feefff45ff59fffc0029006200830088009300a300a6
00a900b400c100df0147014c0151015a0160016e0186018901a701c301ec
0204025c02b503260371037a037b039503f50425047a04d50576fe5dfe93
feb9ff30ff73ff85ff88ffea0002000f00190037004a0054005e0069006e
007000760078007b007c007f00820084008500850085008d009100ad00b4
00b700bb00cd00e000ec00f50109010d010e011d013001300138013e0142
01580174018c019901a401e201e701f702010204022b0236024e02670288
02a102c402d302e1035403ac03bc03d303d30416044d0455046004a704ae
05000511063d08ccfbd9fcaffd98fd9afe02fe29fe5dff07ff1bff1cff47
ffafffc3ffd9ffee001e0020002c0038004e0056007c009000ac00b800b9
00cb00d000d000d900e500e700ef01050110011101240126014d015c0181
018201860194019c01a301a301a901ab01af01b801b801bc01bc01c001c5
01d001d601d701e001e501fb01fe01ff0226022f0236025c0266027b02a8
02bd02c302fe030b031b03230326033c03650371037d038703a603ac03d2
03f103f7040e04130426043b0465049204ab04c104d904fb0547054d0577
0611068c068f00cd00cd00cd00cd00000000000000000000000001450234
0266020201590001000c007000b502c6022d005200cd00cd00cd00cd00cd
00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd
00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd00cd
00cd00cd00cd00cd00cd00cd00cd008901f700c8014200e501fd00160089
0089008100e8012a0157024301e600a600a20137019201a1020302650089
01c000a000a103ac01d60283008c003f002e00eb003f00010268012e0188
021c0066009102b300e3008200cd002700f1024700e300cd01f7021800cd
03cd017000f801f2018d00ef005200600215006701d2003801880144006c
02290023007401cd006e0000000005400401055b00000267000004e70495
02ea029501ef0047029f00cd00cd008c016100a0012900b400cd015b00af
02df043604bd003700460021001a04950252020601790084009c020400a7
02c6005400b10058004e00a90097005900a000830041003f002800740043
0151000101f70109001101890002005e00220089014400ab00ab01fd03fe
00cd0046ffba0046ffba00e80230008500950098000000b9002400aaff8e
00be0162002d00b4010a009c00e1004c03f404150000fff0041d0545ff02
fe6200d8ff5100ca0135011003de004800db018b00b3004800da0116009b
ff6cff3400e700cdff5900840084006800550541051e00610061026c00c1
07a006de063c06310601057a05640552054b054305370531052905210519
050f050a04ef04dd04d004be04a40482047a042e0415040c03de03cf03b1
0399038b036f034d033f032e0326031d030402f902ee02e902dc02d802c0
02a9027f01b00000ffdbffc8ff99ff50ff3dff37ff13fefefef5fec3feae
fe9bfe95fe8efe80fe70fe60fdc4fcddfcd3fcb1fca501f6fdd8ffa1ffc1
01cafefb00a60175ff5aff4cfff6ffd9ff14ff93ff3dfed7018f01350125
00fd00e500cc00c8009300b400a400740058004b00400248011000fe00f5
00ed00e100d600cc00b900a800890077006000560654004f006e002600d9
008300cd00cd00cd0065001200a70083000300a90012005c003f0095004c
0022005c000201030127012700c400acffa10355008900b10000000000a7
02cf0120fea300270130016e010b014b00e3013e00ea00ea00b400b4fd9a
00a800a806a700b900b906a900f5069d03fb009500b9008b02450511042f
01fd00fd026f018dff5bfe5b007b007b00b904e500550000404c58575655
54535251504f4e4a493f3e3d3c3b3a3938373534333231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e
01b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b011
2bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b011
2bb0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b011
2bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b0
40618c482d2c01182f2d2c20b0032545b019234445b01a23444565234520
b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b319402019
45208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323
430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f43234365
0b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b0032523
49b04060b0206320b000525823b002253823b002256538008a63381b2121
21212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b802cd23701020b802cd4520b0005058b00161593a2f18
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b008
26b00826b00826b008260f10161345683ab001162d2cb4000100000015b0
0826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2c
b0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b010
60482046b0106048590a21211b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b8fff060482046b8ff
f06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b
53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b21
21592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b212159
2d2cb04e2bb00c25b00925b00525b00d25b00e25b00925b01325b2160e55
2b20b00e60252320b00f60252320b00f602523b00f602501105558d41b21
59205820b0542a5921213c18f02ff03cb0502b2d2cb00b25b00325b00b25
b00525b00e25b00f25b00e25b00d25b00925b01525b017251801103cfc3c
393d2f18e0f0b00b25b00a25b00c25b00f25b00c25b00825b01025b01125
b00c25b01625b21911552b20b01160252320b01260252320b012602523b0
12602500105558d41b2159205820b0542a5921213cf02ff03c103c3cb050
2b2d2cb00b25b00325b00b25b00525b00e25b00f25b00e25b00d25b00925
b00f25b00f25b01725b019251800103c08fc003c393d2f18e0f02d2cb002
25b001b00425b004255058601b615920b00325b00325b005255558b0062b
1b2121592121212d2cb00c25b00925b00e25b00b25b01025b01025b00f25
b00f25b0544b5258b04f2bb04f2b52582359811b21212121212121215921
212121212121212121212121212d2cb003260110493b2d2c23b003260010
493b2d2c2026232026232d2c234b5458202060b00160258a381b232159b8
ffff602d2cb00160252320b002602520582020608a60b0026023b0532ab8
ffff6026201b23b0026026592060b003602d2c462346608a8a462320468a
608a61b8ff8062232010238ab9031603168a70456020b0005058b00161b8
ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140018853
5a58b910000020885458b202010243604259b12401885158b92000004088
5458b2020202436042b12401885458b2022002436042004b014b5258b202
0802436042591bb940000080885458b202040243604259b94000008063b8
0100885458b202080243604259b94000010063b80200885458b202100243
604259b12601885158b94000020063b80400885458b202400243604259b9
4000040063b80800885458b202800243604259b12801885158b940000800
63b81000885458ba000201000002436042595959595959592d2cb0024354
584b53234b515a58381b2121591b21212121592d0000000100000006e666
4c944c0e5f0f3cf50809080000000000a3556f4100000000d19de400fe77
fa51059d09c50000000900010000000000000001000006a9fd99000004cd
fe77ff30059d00010000000000000000000000000000000304cd00670000
000004cd0000000001bc0108007a00a6009e00e101e1021d00f200a60052
01a100bc01cf00a900a800a9006e00870099008400d8009800a900d701cd
0194ffe60029005400d200b4ffd2001b0040001d001e00640041002d00a8
006e001b0044ffdafff00029007a0028001d007f00520016ffd1ffea0016
002b009701fe00aa00fd00a7ffaf01a40059ffeb0072003e004200950042
001a008000b000450081ffde00330056ffef0048006c00970094001e0000
fffc002b002b00b1015802010151007dffd2ffd20040001efff000290016
005900590059005900590059007200420042004200420080008000800080
003300560056005600560056001e001e001e001e00bd012700aa003e0063
0135007d0019fffafffaffab01a401240029ffd50016005b0052ffe60054
002b001d005e00430018004900070111010f0022ffd5002e00a801bcffd9
00890077007d0045004700680066ffd2ffd20029ffd6ffd60052ffc300a2
00d001fe01280052009b002b002b009c00000110017affdaffd800be01cd
012800d00028ffd2001effd2001e001e00a800a800a800a8002900290029
0016001600160080011f010c0122012301e501a20199012101ae011f0044
0080007f0097009700b10201ffdc005b002b002b007affef005200cc0153
01310140ffa10002000000640041004200a8007f00970040007200400072
003effaf02c4ffd20059ffd20059001d003effdc001e0042001e00420044
00810044008100440081fff00033fff0003300290056001d006c001d006c
007f009700520094005200940016001e0016001e009700b1009700b1003e
0028004f0051009800d1007600bf005affaf009b011200020002017d0002
017d0002017d017d0002006e0029005bffd9021e0101fff1021d021dfff1
021dfff1021dfff1fff1fff1fff1fff1017d021d017d017dfff1fff1fff1
021d017d017dfff1fff1fff1021d017d017dfff1fff1fff1fff1fff1fff1
fff1fff1fff1fff1fff1fff1fff1fff1fff1fff10267005afff1fff10002
0002000f0002000f000200ae007c0026fffafffa0002014100b800800002
006c009f010f005a000cffd7ffd7020b020b009e00c80002012c012c00ae
0135ffd200590040007200400072001e0042001e0042001e004200410042
0041004200410042002d001a002d000b00a8008000a8008000a8008000a8
0080006e00b0001b0045003100440081fff000330018004e002900560029
0056001d006c007f00970052007c0016001e0016001e0016001e0016001e
ffeafffc002b002b0095ffd20059ffd5ffd50016002e01cdffeafffcffea
fffcffeafffc002b002b01fe00e60042005affd1ffeeffecfff801f701ab
019f00d3ffd1fffdfffdfffdfffdfffdfffd00c0ffd2001b000c001e0097
002d00a8001bffd5ffdafff0006900290028007a00490052002b0016fff9
001c00a8002b005100d1007201b8004d00e7002a01360072008c01c8007d
0030001d00430120005600ab00a9004d0040004700600103004d0056004d
0060001effff00440040007f00a800a8006e0002ffde000a0052000b0027
ffd2001b001b00440028001e0009fff6fffafffa00520005ffda002d0029
002d007a00400052000b002c0016000c0022ffeaffd3ffe0ffd8001b0045
ffdcffd50059006c001b004400450042000d004700110011006100080003
002d00560027ffef00720052002a005e002b000c0040ffeaffd3000cfffa
001b0042ffe300340042001a0044007200970080008000b0fff7ffdc001a
0061002a0027004400440025001d00590258025802580258025802580258
02580258021502580215022d00600189020003a7008201cc0090005d00d2
00520082013a00ff004d00210137005300740094002c004c011800ca0015
008500be00c3008c007300830068006900710054003d003d019900d1003a
013a00530053ffadffad00850069006900690069009000900090005d00d2
00520082013a00ff00210137005300740094004c00ca001500b400b90073
0083006800690071013a005d007400c300640243018c0160012401be01be
00a701be000001d3016801d301d3018501d3018f01d5019f0148011000ce
0148011f00eb00d200d200ea007501c600a8023401c201cd011b00f100e2
010c00000000000000000000018f01f001f001f001c101c001b101550136
00000185016a0149000a000000000000000500000000000000de00a30000
000000880066000000000000000000030000000000000037003d00a90068
00a900a90067006700ad00ad00ac00f9005a005a00a9006800a90068017c
018f018f0163018f0000000000030003000000000003002b0003002b0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000019a01a700e700e70000000001be011b00e10187
017900c700cb019d01cb0037003d0000000001e001cb000a000000000000
016e013b000a000000000000000a00000000000000de00a00000000000de
00a00000000000de00a00000000001750125017501250088006600880066
000000000000000000000000000000000003000300000000000300030000
00000000000000000000000000000000000000af00db0000000000af00db
000000000005000000000000006d008f000000000008000800000000008a
002600000000015a015a00000000008000560000000001cd013b00000000
00c700cb0037003d0037006100000000003d0043006d007f006d0098006d
009801eb01c201d301d300590077018501d5018f011b0234018501680076
001b0000018f018f018f018f0163017c018c016f016f006d006d01d401c1
01c100890088017301c3017d01090222017301560079001bfffc017e017e
017e017e0152016b018c016f016f0098009800b400c500c5016d016d0077
00c70081000d01280077005a0178011f00fd00810081008100810055006e
010a00ed00ed019d019d012000fb01500000000a00000000000000050000
0000000000a90068006700000000000300000000014f014f015d00ff00df
01cb01cb00910000002900560016001e0190015e0190019a019a01900168
019001860190012b0113012c015e015e037700b4ffa1ffa1018e01ac0168
0190016a016a010d010d012b00f8011600f801e701e701e701e701e70190
019000f801e701e701e701e701e701e701e701e701e701e7014f0117014f
012bffd20059ffd20059ffd20059ffd20059ffd20059ffd20059ffd20059
ffd20059ffd20059ffd20059ffd20059ffd20059001e0042001e0042001e
0042001e0042001e0042001e0042001e0042001e004200a8008000a80080
002900560029005600290056002900560029005600290056002900560029
0056002900560029005600290056002900560016001e0016001e0016001e
0016001e0016001e0016001e0016001e002b002b002b002b002b002bffd2
005900a80080002900560016001e0016001e0016001e0016001e0016001e
011000de00d400de004400440009000d0052006100520061002d002d002b
002b002b002b0016002b00220040002d001a003f00420029005601f4018c
0124012801b901b9012801280128012801e001cb00c700cb00c700cb0037
003d000a000000000000000a000000000000000a000000000000000a0000
00000000000a000000000000000a000000000000000a00000000000000de
00a00000000000de00a00000000000de00a00000000000de00a000000000
00de00a00000000000de00a0000000000175012501750125017501250175
012501480125017501250137012501750125017501250088006600880066
008800660088006600880066008800660088006600880066000000000000
000000000000000000000000000000000000000300030000000000030003
00000000000000000000000000af00db0000000000050000000000000005
000000000000000500000000000000050000000000000005000000000000
006d008f006d008f006d008f000500050000000000000000000000000008
000800000000000800080000000000080008000000000003000000000000
000300000000000000030000000000000003000000000000000300000000
0000008a002600000000008a002600000000008a002600000000008a0026
000000000080005600000000008000560000000000800056000000000080
005600000000008000560000000000de00a00000000001cd013b016101cd
00000000016101cd015c016e00c700cb00c700cb00c700cb00c700cb00c7
00cb00c700cb00c700cb00c700cb000100050037003d0000000000c700cb
003700610000000000370061005a005a005a005a019f01cd005c00dd0148
017d016801cf01360014000a01db020701c201860136019501480148016d
003201be01be01db01860000000000000000000300030000000000af00db
0000000001be015a0000000000010001006d0097006d0098006d0098006d
0098006d0098006d00980137012b0139003d0212021b0061005600d100f2
004000550023001d0040ffdefff00000ffea0052004f000000a0007affeb
0000001bffeb001bffeb0040000e0015ffdc00000036003e00980061006e
0000000fffd1000500a800a8001b004500810030ffde000000330029000a
001e0000ffef001d007b0091004900fe0030001e00940052001c00160008
0000009700b100720042007d008d006e00410041004e000a020101340029
01bc0000000000000000000a000a0000000000000042ffd200590110ffd2
0059ffd5ffd50041004200410042001b004500290056002900560072012a
00b0000000000000004100420000000afff00033ffd20059ffd20059001e
0042001e004200a8008000a800800029005600290056001d006c001d006c
0016001e0016001e007f00970052009400770077002d001a003300a900a4
009700b1ffd20059001e0042002900560110002900560029005600290056
002b002b0035003e000cffeb0042002d0028002800630000007500470000
0056003a002c0042006f000100280021002f002f008001c800c600810081
00d2000affccffcc0004000000230012005600210060005600380038001b
006c009c0095003a002c002c0097007700770069007200130094001e0073
004d0000fffc00300001008d001e004b006100760072007600540029001b
0075006f002d00b600340044000500760072000000000000000000000000
00000000000a005900a8010501110181012500f600f6011400f20111020b
01390193012801fe02060206013d013dffe6005400230023023601a401a4
0236012201a401a401cd01cd020602060198019801980122015b010e00f6
0143015201110139011f012200d0011f0122ffaf012301e5012401a20121
011f023601d501210123012301fe012801fe032601a401a401980198013c
01aa0206019801980198012200770077012401a201f7019901ae0236013c
0121011f011f01230123010c0122ffaf0122010c0122ffaf000b00a90206
013c01aa011e01b80200ffaf01a401a4010c012800d3022c013c002901d5
0198010c010c010c016a01b70000000000000027011f01290142012a010e
012d0103010500dc0125012800f3011101a401a4022c00c9000f0044ffc8
004400560010005000290056005e00720064006400230068004000d1ffde
ffcc005c005c002d003e007b007b003c003d006c0070003c00ae0050006c
007200b0002900ab00ad001efffa00420011000b0039002a002a00000000
ffd10000ffdafff1fff9fff9ffdaffdd00700071fff90010002900560000
0000000000000000000000150056000b000b00b4000b003900400072005d
0121011601f501f700010001fffa0011001b001b007affef000a001afff6
004700200061fffe00000000000000000000003e00310040007200520052
0002000200220040000000000000000000a80009000d0034003b00050008
002d002d002d002d00220040ffda00030123ffd20059ffd20059ffd5ffd5
001e0042003f00420009000dfff600470084004bfffa0011fffa00110029
00560029005600450042000b002b000b002b000b002b00220040ffd8fffa
0036003e00280028ffe5fff0001e005800000000000000000041006f0052
005201a401a801dc021601b2019601d6012efff103ca01960196033a0145
00c501a001b701ba01dc0196014501d3019601a001a401dc01ba033afff1
01c20215011001100127011001dc015e0110ffd20059001bffeb001bffeb
001bffeb00400072001d003e001d003e001d003e001d003e001d003e001e
0042001e0042001e0042001e0042001e00420064009500410042002d001a
002d001a002d001a002d001a002d001a00a8008000a80080001b0045001b
0045001b004500440081004400810044008100440081ffdaffdeffdaffde
ffdaffdefff00033fff00033fff00033fff0003300290056002900560029
005600290056007affef007affef001d006c001d006c001d006c001d006c
007f0097007f0097007f0097007f0097007f009700520094005200940052
0094005200940016001e0016001e0016001e0016001e0016001effd10000
ffd10000ffeafffcffeafffc0016002b0016002b002b002b009700b10097
00b1009700b1001a0094fffc002b00590095005100510051005100510051
00510051ffb4ffb2ff2eff2cff09ff07fec9fec900d100d100d100d100d1
00d1ffa0ff9eff1aff18fef5fef300720072007200720072007200720072
ffd2ffd0ff27ff25ff27ff25fee7fee701c001be016a0147016a014700d5
00d50000fffeffc6ffc4ffc6ffc4ff7cff7c005600560056005600560056
ffb3ff75fec6fec4fef5fef3004d004d004d004d004d004d004d004dffae
ff03ff03fec500600060006000600060006000600060ff95ff60feb1feaf
feb1feaffeaafe770051005100d100d100720072016801a400560056004d
004d0060006000510051005100510051005100510051ffb4ffb2ff2eff2c
ff09ff07fec9fec900720072007200720072007200720072ffd2ffd0ff27
ff25ff27ff25fee7fee700600060006000600060006000600060ff95ff60
feb1feaffeb1feaffeaafe770051005100510051005100510051ffd2ffd2
ffd2ffd2ffd201f7022c01f7010c010c00720072007200720072ffe3ffca
ffd3ffb0002d01950195010c00fb00fa0100010000e400e400a800a8fff7
ffdf01930193010c004d004d004d004d00ab00ab004d004d002b002bfff1
ffc6ffca00d300d3021d00600060006000600060ffb9ffe8ffa4ffa4001c
021801f50099006b0000000000000000008000b0000f00d2000000640000
000001a201a201e401e401a201a401210121010c01cd01e901e901e901e9
013c013c014901e40206012301bd01e401e4011802060000ffafffaf007a
ffef00060000ffe7001b00720057005700430047008200e3007d00430003
00110056004200560080002effe000b900560056002f003400340052004d
00900000009c0000fffc00b1007a008b0028004400000027002f000d0008
00d900a901030103011b01020133010e010d015b014e010200f900dc00f0
0103010e0145012501040125010400e9011f0121012500ea00da01030129
01290117011701280142012300dc0116012a012d012a012a00dd0128010e
014c00db00f3010e018d01100151012c012301420125010e00f3018d0110
0136012c012300000000000000000000017200af01630112015500f50142
0234018f01f3012401750125008800660000000000000000007200020028
001a003a0001000e00170052012d012d012d002900a20049000000000000
0000003000000072ffda0003ffcc002e002effd200400072004400520097
00b1004e038e01a2010d01a0000000150072007200720044004401a40215
0215015f025800be011901d801bd01bd01cc018f01be00ab000a00000000
0000000a000000000000000a000000000000000a000000000000000a0000
00000000000a000000000000000a00000000000000de00a00000000000de
00a300000000017501250175012500880066000000000000000000af00db
0000000000af00db0000000000af00db0000000000050000000000000005
000000000000000000000000000000000000000000000000000000000000
015a015a00000000015a015a000000000080005600000000008000560000
00000080005600000000008a002600000000008800660088006600000000
00000000ffcf003e0095ffe00000ffd2006c00950012007c00b10009010f
0098000000c600b3ffec004dffecffeb00220095000000450081ffe10033
ffef006c0097003b0000002b00b1ffff00000028000000000047000a00bc
004200770000004b0125012d010301300117014d0124012801150142021e
017701770123017d0143012200dd00db00f3011600fc012a012901520140
0128010e0139012a011700f701630163010c0119014a00dd00dd01ec0116
01cd011f0129012a011101290041ffd10000004000bc0051005100510051
005100510051005100fa00fa00fa00fa0136013601360136004d004d004d
004d004d004d004d004d00e800e800fc00fc004d004d004d004d006d0098
008000800019000cffd5001e0042006e00b0001d000e0005006c0021002b
0042007200420081004400440016002b0016002b006e0075000500080157
01570157015700c100c1018a01e40118000000c10042004400810044007a
001d0059004a002d001a001b0045009700b10059002d002d005a01c601e0
016b013c013c013c0018fff00018015501530131014001550141015b0155
0152015b00fb00280048ffeafffc002300a6002700000000000001cd00f1
01e101e1017d017d01bc01bc01bc011f0030017d01de01dd0172015301ce
01ad019d0052007a00790079000a0030000f01fa01e101ce01d101e401d5
01d501d501d501db01df01dd01db01d301d801aa020301dd01e700de00a0
0000000000de00a00000000000000000000000000088006600de00a00000
000000db00d200df00cd0037003d000000000037003d000000000037003d
0000000000c700cb00c700cb002f005a002f005a00de00a0000000000000
00000000000000000000000000000008000800000000002400010012fff5
0150003b00240029004700da019a01f001ac01f000370061000000000000
00000000000000000000000000000037003d000000000037003d00000000
0037003d000000000178005400380052005000040008001b00c800000039
003500000000000000000000000a001b007d0000000000000000002d0027
002d001a0095009500980000001e00ac00a200000000ffdaffd200040000
0039005600a2018100f3007f009700000000000001b2019701d300000168
015a01d301d300000185000001d30000018f000001d5000001ce01390139
017e018c01e801f401d5013b013b007600cd009f00070007000900090009
00090009000900090009006800030000006800030000000a000000000000
00de00a00000000000000000000000000005000000000000006d008f0000
0000008a002600000000015a015a00000000003700610000000000370061
00000000006d005900c700cb00de00de01bf01c401c401910195019a0218
01af01a6021801af01a60194012101940195018d01d501d501f701f701f7
01f7018f014f01b90186006d009801be01beffeeffeeffeeffeeffeeffee
ffeeffeeffee01be00ce015601d1021500d2005200820071021501970016
00370010ffb9003e009a00720016000f001c00450054fff7fff2000d004f
0076ffa50027ffd50073ffcb009300160090ff930090fff80016ff9f007c
002e007300a6004ffff40029001301fe0196017c013f017c00e4006dffc7
0026ffe3fff70000001500680033ffbe001c0026004dffa6006b001e001a
009c0051004d001e00b0ff8400bb003300dbffe700db0025001e003cffcc
00260039007cffcc001c00560035ffd701cd00a800090009fff300060009
0006000600040074000000000037ffca000a00000000000000a401750125
00030003000000000000000000000000014602320088006601d0006eff8f
fff3000000000007001d00050008ffda00020002ffda000000110000006e
004100000000003200320032003200320077007700770077007700770077
00770077007700a300a300ca00ca014b01cc02a7035c035c041704b2051f
05e7069a06db06db06db06db06db06db06db086c086c086c091d091d0a3f
0b410d180d180d180d180d180d180d180d180d180d180d180e640f360f36
0f360f360f360f360f360f360f360f360f360f360f361023112b11e312da
13e314d015de16a4173217321732179719b81a9c1b2c1c631c631d5b1f21
1fb61fb620d3230c249a2668274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
274027402740274027402740274027402740274027402740274027402740
27402740274027400000000100000e7a004800030000000000020010002f
0059000008b91512000000000000000e00ae0000000300000000021a0000
0000000300000007006e021a0001000000000000010d0288000100000000
0003001103950001000000000004001103a60001000000000006001103b7
0001000000000007003703c80003000104090000021e03ff000300010409
00010022061d0003000104090002000e063f00030001040900030022064d
00030001040900040022066f000300010409000600220691000300010409
0007006e06b300a90020003200300031003500200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0020000d000d0048
006500620072006500770020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200063006f
0070007900720069006700680074002000a9002000320030003000330020
002600200032003000300037002c002000520061006c0070006800200048
0061006e0063006f0063006b002000260020004a006f0068006e00200048
007500640073006f006e002e002000540068006900730020006c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
006900730020006f00700065006e00200073006f00750072006300650020
0073006f00660074007700610072006500200075006e0064006500720020
0074006800650020004d004900540020004c006900630065006e00730065
003b002000730065006500200065006d0062006500640064006500640020
006c006900630065006e0073006500200064006500730063007200690070
00740069006f006e00200066006f0072002000640065007400610069006c
0073002e0043006f007500720069006500720020004e0065007700200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002ea92032303135
20546865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c
205269676874732052657365727665642e200d0d486562726577204f7065
6e54797065204c61796f7574206c6f67696320636f7079726967687420a9
2032303033202620323030372c2052616c70682048616e636f636b202620
4a6f686e20487564736f6e2e2054686973206c61796f7574206c6f676963
20666f72204269626c6963616c20486562726577206973206f70656e2073
6f7572636520736f66747761726520756e64657220746865204d4954204c
6963656e73653b2073656520656d626564646564206c6963656e73652064
65736372697074696f6e20666f722064657461696c732e444d434743422b
434944466f6e742b4632444d434743422b434944466f6e742b4632444d43
4743422b434944466f6e742b4632436f7572696572204e65772069732061
2074726164656d61726b206f6620546865204d6f6e6f7479706520436f72
706f726174696f6e2e00a900200032003000310035002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e002e00200041006c006c002000520069006700
6800740073002000520065007300650072007600650064002e0020000d00
0a000d000a0048006500620072006500770020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200063006f0070007900720069006700680074002000a90020003200
30003000330020002600200032003000300037002c002000520061006c00
700068002000480061006e0063006f0063006b002000260020004a006f00
68006e00200048007500640073006f006e002e0020005400680069007300
20006c00610079006f007500740020006c006f0067006900630020006600
6f00720020004200690062006c006900630061006c002000480065006200
72006500770020006900730020006f00700065006e00200073006f007500
720063006500200073006f00660074007700610072006500200075006e00
640065007200200074006800650020004d004900540020004c0069006300
65006e00730065003b002000730065006500200065006d00620065006400
64006500640020006c006900630065006e00730065002000640065007300
6300720069007000740069006f006e00200066006f007200200064006500
7400610069006c0073002e0044004d0043004700430042002b0043004900
440046006f006e0074002b004600320052006500670075006c0061007200
44004d0043004700430042002b0043004900440046006f006e0074002b00
4600320044004d0043004700430042002b0043004900440046006f006e00
74002b004600320044004d0043004700430042002b004300490044004600
6f006e0074002b004600320043006f007500720069006500720020004e00
65007700200069007300200061002000740072006100640065006d006100
72006b0020006f006600200054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
2e00b1571f413d0401002f0401003004010003002f0401003f0401004f04
01005f04010060040100cf040100df040100ef0401000800200401003004
01008f0401009f040100df04010005001f03ff002f03ff003003ff000300
3f03ff005f03ff00df03ff0003003f03ff008f03ff009f03ff00a003ff00
f003ff0005004003feb30b0e321f414703fe002f03fe007003fe009f03fe
0004005f03fe007003fe009f03fe00ef03fe0004008f03fe009f03fe00a0
03fe0003000f04050001002f0405003f0405008f040500ef040500040020
03fc0001001003fb006f03fb00a003fc00e003fc0004002f03fa003f03fa
003f03fb004f03fa006003fa006003fb006003fc00bf03fb00d003fb00f0
03fb000affc003f8b351533200413c03f9001003f9004003f9005003f900
7003f9008003f900b003f900e003f90008002003f9002f03fd003003f900
3f03fd005003f9006003f9009003f900bf03fd00c003f900d003f900e003
f9000b004003fd005003fd006003fd00af03fd00b003f900bf03fd00c003
f900e003f900f003f90009ffc003f9b23b9632b9ffc003f9b20d1132b9ff
c003f5b33a3c32d0411403f50001009003f50001000f03f5002f03f5003f
03f5004f03f5008f03f500af03f50006004003f4b2090c32b9ffc003f4b2
393a32410affc003f4003c0033ff8003f400530033ffc003f4b35152321f
411e03f4003f03f4004f03f4008003f400d003f40005002f03f4006003f4
009003f400c003f40004000f03f4008f03f4009f03f400ef03f40004ffc0
03f2b2363a32b9ffc003f2b24e5432414effc003f200d40033ffc003f200
d30033ffc003f200b60033ffc003f200a20033ffc003f200860033ffc003
f200850033ffc003f2006e0033ffc003f200680033ffc003f200560033ff
c003f200530033ffc003f2003e0033ffc003f2003d0033ffc003f2003c00
33ffc003f200320033ffc003f200310033ffc003f200250033ffc003f200
220033ffc003f200200033ffc003f2001f0033ffc003f1b2533390412903
f10001006003e9007003e9008003e90003005003e9006003e9007003e900
8003e9009003e900a003e900b003e900c003e900d003e900090090040400
01ffc004040053003303f702570055001fffc003f0b2533390411b03f000
01006003e8007003e8008003e80003005003e8006003e8007003e8008003
e8009003e800a003e800b003e800c003e800d003e8b20912204140038400
300384004003840050038400040060039a0070039a0080039a0090039a00
040000039a0010039a0020039a0030039a0040039a0050039a0006000003
d7001003d7000200e003d300f003d30002000003d3001003d3002003d300
3003d3004003d30005002003d3003003d3004003d3000303c3025f006400
1f03a4025db2641f2f411e03b2003f03b2004f03b2000300e003d400f003
d40002000003d4001003d4002003d4003003d4004003d40005002003d400
3003d4004003d40003035ab203641fb803c2b243641fb803c1b321641f0f
41310343001f0343002f034300600343000400200342000100c0034200e0
03420002000f0342002f034200400342006003420070034200050347032b
0026001f033c02560035001f033b032b0035001f033a032c0035001f0339
032c0035001f0338032bb2351f0f41220330002f0330008f03300003000f
0327002f0327008f03270003000f0324002f0324008f0324000303300324
0024001f032703240033001f032403230024001fffc00320b2131932b9ff
c00320b2212532b9ffc00320b22e3232bd03210255003b001fffc00321b3
45473260410b031c0070031c00020027031b00d7031b0002ffc0031bb231
3232b9ffc0031bb2464732b9ffc0031bb251533241110317026c0033001f
031502f5001f001f031402f50029001f031302f50029001f031fb21e421f
b901410258b2641f00411b030c0010030c0020030c0030030c0040030c00
50030c0060030c0070030c0080030c0090030c00a0030c00b0030c00c003
0c00d0030cb30e121240b802c9b224339fba02c800ef02c8405502202101
9f05ef05029f04ef04029f03ef03029f02ef0202bf06bf07021f063f065f
066f068f06051f073f075f076f078f07053f023f034f024f0304201e2022
2027202c204705101e102110221027102c1047065f4169026b0001005f02
dc000102dc026f0800001f008002db0001002002d90001003002d9004002
d90002006002d9007002d90002008002d9009002d9000200a002d900b002
d9000200c002d90001002002d9008002d90002001002d9004002d9000200
9002d900d002d900e002d90003001002d9009002d9000202d9026c080000
1f002002d8003002d8004002d8000302d802a80800001f001002d7002002
d70002002002d7003002d7004002d7005002d7000402d7029a0800001f00
a802d600b802d600d802d6000302d6026b0400001f02d5b2340f1f41fd02
d502560400001f02cc02cc02cb02cb02ca02ca02c902c902c802c8000f02
c8000f02ca0002006002c900c002c900ff02c90003003f02c8006002c800
7002c8009002c800c002c80005005f02ca000100a002cc0001002f02cc00
4002cc006002cc0003003f02ca008f02ca00bf02ca0003002f02c8002f02
ca003f02c90003005f02c90001007f027c007a02b10002007f0278007f02
79007f027a007f027b0004007f0274007f0275007f0276007f0277000400
7f0270007f0271007f0272007f02730004007f026c007f026d007f026e00
7f026f0004007f0268007f0269007f026a007f026b0004006f027c006502
b10002006f0278006f0279006f027a006f027b0004006f0274006f027500
6f0276006f02770004006f0270006f0271006f0272006f02730004006f02
6c006f026d006f026e006f026f0004006f0268006f0269006f026a006f02
6b0004004a027c0001004a0278004a0279004a027a004a027b0004004a02
74004a0275004a0276004a02770004004a0270004a0271004a0272004a02
730004004a026c004a026d004a026e004a026f0004004a0268004a026900
4a026a004a026b0004003a027c0001003a0278003a0279003a027a003a02
7b0004003a0274003a0275003a0276003a02770004003a0270003a027100
3a0272003a02730004003a026c003a026d003a026e003a026fb1043a41ff
0268003a0269003a026a003a026b0004002f027c0001002f0278002f0279
002f027a002f027b0004002f0274002f0275002f0276002f02770004002f
0270002f0271002f0272002f02730004002f026c002f026d002f026e002f
026f0004002f0268002f0269002f026a002f026b000400df027c000100df
027800df027900df027a00df027b000400df027400df027500df027600df
0277000400df027000df027100df027200df0273000400df026c00df026d
00df026e00df026f000400df026800df026900df026a00df026b0004007f
0267007a02ab007a02ae0003007f0263007f0264007f0265007f02660004
007f025f007f0260007f0261007f02620004007f025b007f025c007f025d
007f025e0004007f0257007f0258007f0259007f025a0004007f0253007f
0254007f0255007f02560004006f0267006a02ab006502ae0003006f0263
006f0264006f0265006f02660004006f025f006f0260006f0261006f0262
0004006f025b006f025c006f025d006f025e0004006f0257006f0258006f
0259006f025a0004006f0253006f0254006f0255006f02560004005f0267
005f02a9005a02ab0003005f0263005f0264005f0265005f02660004005f
025f005f0260005f0261005f02620004005f025b005f025c005f025d005f
025e0004005f0257005f0258005f0259005f025a0004005f0253005f0254
41ff005f0255005f02560004004f0267004f02a9004a02ab0003004f0263
004f0264004f0265004f02660004004f025f004f0260004f0261004f0262
0004004f025b004f025c004f025d004f025e0004004f0257004f0258004f
0259004f025a0004004f0253004f0254004f0255004f02560004003f0267
003a02ab0002003f0263003f0264003f0265003f02660004003f025f003f
0260003f0261003f02620004003f025b003f025c003f025d003f025e0004
003f0257003f0258003f0259003f025a0004003f0253003f0254003f0255
003f02560004002f0267002a02ab0002002f0263002f0264002f0265002f
02660004002f025f002f0260002f0261002f02620004002f025b002f025c
002f025d002f025e0004002f0257002f0258002f0259002f025a0004002f
0253002f0254002f0255002f0256000400df026700da02ab000200df0263
00df026400df026500df0266000400df025f00df026000df026100df0262
000400df025b00df025c00df025d00df025e000400df025700df025800df
025900df025a000400df025300df025400df025500df02560004027c01a6
027b011a027a00fb027900fa027800a1027700a00276009f027500640274
005702730047027200430271003c02700030026f002d026e002c026d0027
026c0025026b0022026a0021026900200268001e026701a60266011a0265
00fb4123026400fa026300a1026200a00261009f02600064025f0057025e
0047025d0043025c003c025b0030025a002d0259002c0258002702570025
025600220255002102540020025340191e96f8641f89f8641f72f8641f71
f8641f31f8641f2ef8641fb8011a403521641ffb21641fa021641f472164
1f3c21641f3021641f2721641f2521641f2221641f2021641f1e21641f00
1616000000121108404117023d020c0050000d01bd0050000d018f005000
0d018e0050000d01770050000d014c0050000d01470050000d013a401750
0dbd500d8a500d6f500d5f500d59500d46500d3a500dbb01fe007e000d01
e7401d7e0d957e0d867e0d5c7e0d4a7e0d427e0d417e0d397e0d367e0d2f
7e0d412001ec013c000d01a2013c000d0196013c000d0191013c000d00fb
013c000d00f8013c000d00e0013c000d005e013c000d003c013c000d0020
013c000d001e013cb20d0009b801f5b2213d1fb801f4b2214f1fb801edb2
21621fb801a9b221341fbc01a600210401001f01a4b2215e1fb801a3b221
521fb80167b221351fb80166b221311fb80142b221431fb80141b421301f
fa21b80401400f1fe121721fd2214a1fb021391fa121b80401b21f9f21b8
0401400b1f72212b1f65212a1f6421b80401b21f5721b80401b21f4321b8
0401b61f3d21ab1f2d21b80401b21f2c21b80401b61f551309130990b801
b940330790c707906007903007902b07902a07902607902407901f07901d
071408120810080e080c080a080808060804080208000814b8ffe0402c00
000100140610000001000604000001000410000001001002000001000200
000001000002010802004a0060ba023d0070023db10237b013034b024b53
42014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b54
422b73184bb019534bb053515a58b8023db080444b20202020b0195258b8
023db0c04459b0265258b8023db801004459b0325258b8023db801404459
b03a5258b8023db801804459b0475258b8023db801c0445959b0372b4bb8
07ff52b0382b4bb009505b58b101018e59b0382bb00288b801005458b801
ffb101018e851bb0124358b90001011f858d1bb9000101ff858d59590016
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2bb0
372b4b5079400c1fae071f45071f33071f23072b2b2b2b4b5379400c90ae
079045079033079023072b2b2b2b181db0964b5358b0ff1d59b0324b5358
b0ff1d594bb8040153205c58b9023f023d4544b9023e023d45445958b919
a0023f455258b9023f19a04459594bb8040153205c58b90025023f4544b9
0021023f45445958b919a00025455258b9002519a04459594bb804015320
5c58b90022023e4544b90027023e45445958b919a00022455258b9002219
a04459594bb8040153205c58b147214544b1212145445958b919a0004745
5258b9004719a04459594bb8040153205c58b1a0214544b1212145445958
b919a000a0455258b900a019a04459594bb8030153205c58b121214544b1
212145445958b913380021455258b9002113384459594bb8030153205c58
b121214544b1222145445958b913380021455258b9002113384459594bb8
030153205c58b121214544b1272145445958b913380021455258b9002113
384459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b01b9005201dfb13b76456523456023456560234560b0
8b766818b080622020b9003b01df4565234520b003266062636820b00326
6165b801df236544b03b234420b152764565234520b003266062636820b0
03266165b076236544b0522344b10076455458b176406544b25240524523
614459b34f673f6c456523456023456560234560b089766818b080622020
b13f674565234520b003266062636820b003266165b067236544b03f2344
20b14f6c4565234520b003266062636820b003266165b06c236544b04f23
44b1006c455458b16c406544b24f404f452361445945695342014b5058b1
08004259435c58b108004259b3020b0a124358601b2159421610703eb012
4358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b9
2d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b011234200b0372b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b4544454445444544454445444544454445444544
454445444544454445444544454445444544454445444544454445444544
454445444544454445444544454445444544454445444544454445444544
454445447474747474747373737373737373737373737373737373737373
737373737373737373737373737373737474747474747373737373737373
737373737373737373737373737373737373737373730074737373737373
7374184569444569444569444569444569442b2bb0372b2b742b73742b73
2b75747474737373737373742b7373747400737474747373737374732b00
435c58400c6027602c604703601e60210273735900435c58bd000f02c900
01000f02c800017373590174002b2b012b2b2b2b2b2b2b74732b2b2b2b2b
2b2b2b7373732b2b2b2b2b2b0073737473002b2b2b73747473012b2b7374
747373737300435c58ba0000037e00017359017374752b2b2b7500737475
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b
7374752b2b2b7374752b73747573747374752b7374757374752b000000>
[16237 3861 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 920 21 <0001006e00000414052f00250144b9000affc04041473579207f237f247c
2504250b29232b2447248624c60ac40b074b0a55006c00652462258f00f6
25071222102310241025d022d023d024d025080a2a1010425800b8ffeab4
101042580db8ffc0b33e3f340db8ffc0400f3a359f21c00dd00d03800a01
060103b801e4b301030301b801ecb40623240017b8020bb410471e0509b8
ffc0b342473409b8ffc0b34c533409b8ffc0b2543509b8024db601004707
080c0dba02670021010eb6700601061a2714b8026740091af10800402741
3400b8ffc0b342473400b8ffc0b349533400b80267400a09091f088f0802
081926ba0194015e00182b4e10f45d3c4d10ed2b2b2b10f4ed4e10f65d4d
f4ed003f3cfd3ce52b2b2b3feded1139390110fd3d392f180010f510c400
71722b2bb10602435458b9000affd6b40910340a100010332b59012b2b31
3001715d00715d2b25213633321615152135003736353426232207060706
0623222635343636333216151406070601a701c125212f37fc5a022a733a
836d6e4926170e31242a3d6fd57dc2f847876acd1e3e4b62d901c983433c
4b734022432a243c283cb46ceba755918065>ONKBAA+CIDFont+F2 AddT42Char 
1 13912 83 <0002ffeffe54049503a70026003401d8402ffd1ff422fd29fd2df430f434
06061b0a2602b621c621d829d72de829e62d061f1b10262f1b202604122d
800a0b3430b8ff8040180a0b341e401d2b1b4032242c080008090a0b0c0d
0e0f1011bf029a029b029c001e0049ffc00009ffc0400c0a020908070605
0403020100ba029a029b029c400d1e490019181716151413121110ba029a
029b029c401a1e4919180086242b211d1af519781d0718063221240a0908
0e27b80255402330204020502003002010202020e02004b02001201a361b
7a1a1a19190026f2302f2e01b80257401911001020103010cf10df10ef10
ff10079f1001101935637c182b4e10f4715d3c4dfd3c3c3ce63c3c103c10
e44e10f6715d5d4ded003f3c3fed3f3ff4e410ed10ec103c2b2b2bb10602
435458b500400b10341ab8ffc0b20b1034002b2b5931304379401e333428
2a1e23292622262a1e271f013323271f01281f2b1f013421321f00002b2b
012b2b2b2b81818100495479401030312526302632230431252f23002600
01103c2b002b81810049547940122c2e1b1c2d252e1b2b23052c1c2f2300
1b1a01103c2b002b2b8181002b2b435c58b90030ffc0b30a113f30b8ffc0
4017090f3f2d400a113f2e400a113f2d40090f3f2e40090f3f2b2b2b2b2b
2b595d015d00715d25113332161514062321222635343633331123222635
343633331536363332001514070623222601342626232207061514163332
3601687b4a3f3f4afe954a3f404923234a3f3f4af0489a51d20128af92b7
4f9a0214448d5f995a3daf8182ae71feb0392e2d39392d2e39039e392e2d
39463130fee3b8cb846e2e018e2b8559734f49529b9a>ONKBAA+CIDFont+F2 AddT42Char 
1 0 0 <0002006700000467050000030007003b401e0607f00201000504f003000a
0605f00303021a090704f0010019084b7b182b4e10f43c4dfd3c4e10f63c
4d10fd3c003f3cfd3c3f3cfd3c31303311211125211121670400fc2003c0
fc400500fb002004c000>ONKBAA+CIDFont+F2 AddT42Char 
ONKBAA+CIDFont+F2 /CharStrings get begin
/two 21 def
/p 83 def
end
ONKBAA+CIDFont+F2 /Encoding get
dup 50 /two put
dup 112 /p put
pop
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2 /ONKBAA+CIDFont+F2 findfont ct_VMDictPut
/YPTUYZ+CIDFont+F2*1 
[50{/.notdef}rp /two 61{/.notdef}rp /p 143{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
-.226341 -96.7002 mo
(p2)
[5.60544 0 ]xsh
gsave
16.5735 -106.54 mo
22.2135 -106.54 li
22.2135 -80.7403 li
16.5735 -80.7403 li
cp
eclp
%ADOBeginSubsetFont: XOSAAA+CIDFont+F3-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (XOSAAA+CIDFont+F3)
%%Title: (XOSAAA+CIDFont+F3 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /XOSAAA+CIDFont+F3 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-209 -1979 2638 2212} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1025 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A73DB6F0B6FADC4CED77615C6A4228677633F664FADBF38
B33C4C9F9802C> |
14 <001C60D8A8C9B7C3C9EDA1C51A79151A1CDDBAD2A8FC87CF03F13329BECA
50F715B761> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /XOSAAA+CIDFont+F3-Identity-H /Identity-H 0 [/XOSAAA+CIDFont+F3] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YPTUZA+CIDFont+F3 /XOSAAA+CIDFont+F3-Identity-H findfont ct_VMDictPut
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
16.5737 -96.7002 mo
(\000\016)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 6704 54 <0001007fffe2045204db004601d1b5271824253425b8ffe8400e23253401
182325343140190f3f0db8ffc04019190f3f0d1c013e06421d1c113e1642
841b85238a3d94420a3eb8fff040100c0e341c100c0f34091a0b1c043d03
23b8ffdeb3190f3f3db8ffde40260c143f1a220c143f6f24633f791f7f24
9719983cb633c90fc633d80fd633e63df91bf63d0e3db8ffc04033190f3f
1a40190f3f3d3b181b04153818202225341b2022253418202f32341b202f
32341b203a3518203a353d3b181b04351124b8013d4020352721033f2d4f
2d5f2d6f2d8f2ddf2d062f2d012dc22602400a500a600a030ab80103b203
0800b8013d400a112744091f242f240224b801ed40183240170e3f322817
19349f320132402025341f322f320232b80281400a290f2a01ff2a012a3e
15b80258400d604070408040904004401a480eb8ffc0b3170e3f0eb8ffd8
b31719340eb8ffc0b6202534900e010eb80281b5100020000200bb025900
06003802584018101e201e02ef1ef01e021e3e0700063006cf060306f747
abb9013000182b10f65d3cf45d71ed10ed71ed722b2b2b4e10f65d4dedf4
5d713ced712b722b2bed71003fede43fed5d3fed715d3fede4111217392b
2b2b2b2b2b01111217393130002b2b5d2b2b2b712b2b015d2b2b2b2b2b25
06062322263535343633321616171616333237363534262726272e023534
363332161736333216151514062322272626272626232206151416171604
161615140706232226013b1b21182f39392f24311a0e1d9458895838363d
288ba8ac64f6c54f873728282d39392d261c1616111d744c6f8135332201
3ba9706b8edc55a13420123f498a4a3f2659101f404027392643160f1a1f
58a05d93dd2324273f499a4a3f17116616263467382647140e3e4a9e6d98
5b782900>YPTUYZ+CIDFont+F2 AddT42Char 
1 11196 75 <0001001a000004ac0511003800ec4019df0901060616062706034009400a
0210111213141517181819ba02d7029b029c400d1e490028292a2b2c2d2f
303031bd029a029b029c001e0049ffc0400c160111100f0e0d0c0a090908
ba029a029b029c400d1e490029282726252422212120ba02d7029b029c40
0d1e490000383736353433323130ba029a029b029cb41e49380020b801a9
400f01f51d2104072928281111100a1918b802574010084f09017009af09
e00903091a3a0021b80257400e30308031011f31013119394f67182b4e10
f45d713c4d10fd3c4e10f65d713c4dfd3c003f3c103c103c3fedf4ed3f2b
2b2b2b2b3130005d015d0111363633321616151132171615140623232226
353437361711342726232206071132171615140623232226353437361711
2322263534363301934083436aa66d4e18303e4aea493f30194d242f5c44
69594f17313f4ae94a3f31184e234a3f3f4a0511fe4b2625489b76fe7f0f
1f392d39392e381f100101734f202b3558fe800f1f392d39392e381f1001
0377392e2d39>YPTUYZ+CIDFont+F2 AddT42Char 
1 13624 82 <00020056ffdf047b03a7000f001c00c2405eb702b806d60ad90eda12d515
d618d519da1bd81ce70ef702f9060dc619c61b0212ed13e415e619eb1b04
da18d61ce902e706e60aeb0ee9120764186a1ca505a709a60baa0da80f07
69026606650a6b0e6a1264160614210c071a21040b10b80255400a000010
002000e0000400bb02f5001e00170255b71f08300870080308b902f5001d
10f65ded10f65ded003fed3fed3130015d5d5d5d435c58400b1b220f093f
12220f093f15b8ffdeb30f093f19b8ffdeb20f093f2b2b2b2b59005d015d
011406042322242635343636333204160734272623220615141633323604
7b83fefd8d8cff008688ff8b8c010384cd47619e8bbabc898abc01b576dd
8381de797bed888beb7d635370b27560a7a7>YPTUYZ+CIDFont+F2 AddT42Char 
2 570 90 <0001fffc000004d1038c002603f8406b901290150209020f03062519021f
03162597139814d902d812d715d625ea02e812e715e625109a0196029613
9914992596260612c012c015df00d012d015ef00e012e015ff00f012f215
0b00803a5f34004023253400801e203400801c3500801a3514401a351340
1a3515b8ff80b3475f3412b8ff80b3475f3415b8ffc0b33a5f3412b8ffc0
b33a5f3415b8ffc0b3195f3412b8ffc04083195f340f004f0080128015df
00d012d015071f00101210155f00501250159f0090129015092a02252539
023625490246255c11531682138c14cf01ca02c912c413cc14c615c525c0
26f901ff1114090106020925062619011e02112516263b0133264a014426
560175010ed001df13d014df26041201221535134023253426401c3501b8
ffc0b71c35161e193a3411b8ffe2b3193a3425b8ffe24009193a34021e19
3a3401b8ffe0b4090a425811b8ffe0b3090a4258b8ffc0400c1801090a0b
0c0d0e10111112ba02a5029b029c400d1e49001d1e1f20212223242425bf
02a4029b029c001e0049ffc00009ffc0400c0a0212090807060504030302
ba02a4029b029c400d1e49001e1d1c1b1a1917161615ba02a5029b029cb4
1e49242525b8026c400a15161415151614002626b802d940091514141515
14030202b8026c400a12111412121113000101b802d94028121314121213
242528142615031600030227131201031100120015032614001310130213
13020914b8016a40101e1e1d1d0a0a09062625250202010a16ba02da0011
02da40214000500070008000b000e000f0000710002000500080009000b0
000600002827ceb9018900182b191112392f715de4e400183f3c103c103c
3f3c103c103c10e41112392f713c12173901111217391139391112173911
3939872e2b877dc4872e182b7d10c4872e182b877dc4872e182b7d10c418
2b2b2b2bb10602435458b50040091d3415b8ffc0b3091d3412b8ffc0b209
1d34002b2b2b59012b2b3130012b2b2b2b2b2b2b2b435c58400b16180e17
3f13180d113f14b8ffca40090f1e3f13360f1e3f14b8ffde400e2d173f13
222d173f1640170e3f11b8ffc0b3170e3f25b8ffdeb712183f021812183f
2b2b2b2b2b2b2b2b2b2b5972715d0072712b2b2b2b2b2b2b2b2b2b2b2b2b
005d435c58b90015ff80b30e173f12b8ff80b30e173f15b8ffc0b30e133f
12b8ffc0b30e133f15b8ffc0b30d113f12b8ffc0b30d113f15b8ffc0b314
283f12b8ffc0b314283f15b8ffc0b30f1e3f12b8ffc0b30f1e3f15b8ff80
b32d173f12b8ff80b32d173f15b8ff80b30f193f12b8ff80b30f193f15b8
ffc0b313193f12b8ffc0b313193f15b8ffc0b312183f12b8ffc0b312183f
15b8ffc0b20b3912b8ffc0b10b392b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b5901725d00720103230326263534363333321615140706231313
3313132227263534363333321615140607032302688ec1ac38393f4abf4a
3f241b4f4e7fb680504c18303f4ac14a3f3736a8be017afe8602bf03392b
2d39392e2e2018febb014dfeb301450f1f392d39392e293904fd4100>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/S 54 def
/h 75 def
/o 82 def
/w 90 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 83 /S put
dup 104 /h put
dup 111 /o put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[50{/.notdef}rp /two 32{/.notdef}rp /S 20{/.notdef}rp /h 6{/.notdef}rp /o 
/p 6{/.notdef}rp /w 136{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
27.6137 -96.7002 mo
(Show)
[5.60544 5.69792 5.60544 0 ]xsh
gsave
50.0535 -106.54 mo
55.6935 -106.54 li
55.6935 -80.7403 li
50.0535 -80.7403 li
cp
eclp
%ADOBeginSubsetFont: XOSAAA+CIDFont+F3-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/XOSAAA+CIDFont+F3 1 GetGlyphDirectory
17 <001C60D8A8C9B7C3C9ED4E662C0F876BDC10AE0E055016F4DA0360269B1B
5AA50367BB> |
!
end
end end
%ADOEndSubsetFont
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
50.0538 -96.7002 mo
(\000\021)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 100 5 <0002010802a703bb04d500080011004240220e05d8000a0909010100020a
a90b3111a909cf01a9023108a92f004f000200191273b9012f00182b4e10
f45d4df4fdf4f6f4fde4003f3c103c103c10fd3c31300121030606232226
27012103060623222627010801084105211a1b2005016401084105201b1b
200504d5fe16261e1e2501ebfe16261e1e25>YPTUYZ+CIDFont+F2 AddT42Char 
1 238 15 <000101a1feb7034801140009002b4010010004d80001be00029200bc0007
0107ba0290000a01beb18e182b10f65de4ed10ed002ffd103c3130012101
0623222635343702360112fed91a271a25070114fdd43122150f1a00>YPTUYZ+CIDFont+F2 AddT42Char 
1 326 17 <000101cfffdf030300ef000b0021400c09bf030b10000100d406190cba01
05012e00182b4e10f44ded5d003fed313025140623222635343633321603
035248485252484852673a4e4e3a3a4e4e00>YPTUYZ+CIDFont+F2 AddT42Char 
1 404 19 <000200a8ffe20426052f000f00210098400a4914470c051d47040d21bb02
5e00010010025eb50000011a2318bb025e00090019025eb5080809192293
b9015f00182b4e10f43c4d10ed10ed4e10f63c4d10ed10ed003fed3fed31
304bb00f50794036022016250e2512261b2606251f25150b182b00130d10
2b011c05192b001e03212b01170a142b01110f142b011a071d2b0020021d
2b002b2b2b2b012b2b2b2b2b2b2b2b2b2b81011514022322260235353412
333216120734272623220706151514171633323736350426e7d77cab99e6
d77bab9bce5d35605d3b595e34615c3b5902f9e1c8fe926d0125a4e1c701
6f6cfedba5a77d454c73aae1a87c454c73aa>YPTUYZ+CIDFont+F2 AddT42Char 
1 662 20 <000100a900000427052f001a00afb9001affc0401019213f171a661a771a
03151a251a021ab8fff0b2161934b8ffc0400c160108090a0b0c0d0e0f10
11ba029a029b029c400d1e490009080706050403020100ba029a029b029c
40151e49117f140114404735144022253414402f323414b8016db5000509
080c17be024b00100000026200110001026240091150109010a0100310bc
024a001b009301d900182b10f65d3ced10ed10e4003f3c3fed2b2b2b5d39
2b2b3130002b715d2b011133321615140623212226353436333311070623
22263534363702cfcf4a3f3f4afd954a3f3f4acfb72c1627392a43052ffb
9e392e2d39392e2d390357300c3e2d292f12>YPTUYZ+CIDFont+F2 AddT42Char 
1 1358 22 <00010087ffe20440052f003d00bc400b0901001902f801f7190200b8ffc0
40462f3134d400db1902073a1809173a6919662d790579157839713d0909
08090e340022471f1c301c021c1c38070e400b0d340e0e1447070d0f311f
310231312b4738051f1f3400b8ffe0b323253400b8ffc0b4181b340028b8
025eb23b3b17ba025e0003ffc0400910153403033f34340bb8ffc0b61014
34000b010b2f5d2b332f11332f2bed332fed332b2b11392f003ffd322f5d
3ffd322f2b1112392f71ed393130012b5d712b005d710116161514060623
22272635343633321716171633323635342627262726263534363332373e
0235342623220706070623222635343736333216151406038b5b5a77e2b7
ee78433b2a1d1f2c273c69b3a05d4e2d6b33373c2e66072850317373944e
170e151a2a3c5c86c9bee64402ad3ea3656db95f4a2a3a2c3d141e0a0e5d
553f7520120703392a2c3c01042c4d29415f5619070b3c2c45415fd8984f
8900>YPTUYZ+CIDFont+F2 AddT42Char 
1 1720 24 <00010084ffe20440050e002a00fa400f190b010819001c181a291a042208
01b8ffc0400e15183401f11b479003016f030103ba01fa001f021db2232a
00b8ffc0400e1a233f00400f143f00401a1b3400b801a6b324230410b801
93400c1547090d5f276f277f270327ba01900018025e4012600670068006
9006046006800602061a2c01bb0267002200000267400922102320233023
0323b8019340131f0d2f0d800d900d04300d400d600d030d192bba013f01
8800182b4e10f4715d4df45d3ced10ed4e10f6715d4dede45d003ffde43f
3cfd2b2b2b3c10fdfd715dede42b313043794018161a04081a04182b0116
08182b0119051b2b011707152b002b2b012b2b818101715d011536333212
151406212227263534363332161716333236353426232207062322263511
2132161514062301ba725dbdfafdfefbe6864e3d2a23522d4064ba888367
6f8e20182c3b02734a3f3f4a0441f424fefeccd2ef573241293d430d1377
7b798a481140330250392e2d3900>YPTUYZ+CIDFont+F2 AddT42Char 
1 2094 25 <000200d8ffe20455052f0020002c00ad403e041e141e471f550b570f571f
770f89049725a7250a342001460b5701b80ab80fc80aca0fd60bdf2ce40b
ef2cf40bfd2c0c090f190f4a1e4a1f04212a2400b8024e40112a47030309
1118f11c4711052447090d27ba025e0015010eb306ed0d21ba024d000002
674017700d800d900da00db00df00d06000d300d400d030d192dba014401
8a00182b4e10f4715d4dfde510fde4ed003fed3ffde41112392feded1112
39313000715d01715d013636333212151406232226023534122433321716
15140623222726232206070613161633323635342623220601a64a864ca1
f2e1c1a1d06ad2011c9e7d452d3c2a182d1b1962d24d3506206d65656d7d
4e3e8d02bc3e39ff00c1b3dd960138c0e60131a83121332d3d180e6f7350
fe4b78586a5b688a7a00>YPTUYZ+CIDFont+F2 AddT42Char 
1 2404 26 <00010098fffe0412050e00130095400b0008070605040302010100ba029a
029b029cb51e4a000a0b0bb802dc40311100141111000b130e0a0000121f
012f010201a00908040e0c1111070a7009c00902091a150800077007c007
0307191493b9015e00182b4e10f45d3c10f65d3c11392f003f3f3c4dfd71
435c58b401401a3501b8ffc0b71a233f01400f143f2b2b2b593c103c1139
39870e2e2b87057dc4182b31300121060623222635352115010606232226
353437033afe2b04362c2e39037afeb41533242b3d1004413c353e4ab6cd
fc243e293c271630>YPTUYZ+CIDFont+F2 AddT42Char 
1 2622 27 <000300a9ffe20427052f00190025003100fe403d0704080a0928062a2827
272b470d6b28087828772a9a28922a0487058409af27af2be405e409f605
f609085928592a6b2b0347080e40161a340e2c1100b8ffc04020161a3400
1726000e29474f23010f231f238f230323232f1d4714052f47070d1abc02
5e0017010e0026025eb3031a3320bc025e0011010e002c025eb30b193293
b9015f00182b4e10f44dedf4ed4e10f64dedf4ed003fed3ffd11392f5d71
ed3939011112392b1112392b3130437940342d311b1f1216040a09250526
1e13202b001c151a2b012e082c2b003006262b011f121d2b011b161d2b01
2d0a2f2b0031042f2b00002b2b2b2b012b2b2b2b2b2b8181818100715d01
5d7101161615140606232226263534363726263534363332161514062734
2623220615141633323613342623220615141633323603894f4f65d88484
d4654f4f4546f0bcbcf0458d7765667777666577188b67678b787a7b7702
8f3d9b5d67ad6464ae665d9b3d4090509de3e39d5190dd4c6b6b4c4d6b6b
fdf251838353405f5f00>YPTUYZ+CIDFont+F2 AddT42Char 
1 3022 28 <000200d7ffe20456052f001f002a00e3405d0d221c2634ea0ce70feb2af8
05fb0cf60ffb2a078708880c960fa60fd805d80cd50fe805080d1e1d1e48
1f581f670f6728870507b80cb520c80cdc0cd120da21ed0cfa0c08390c4a
0c59015c0c6a279911a811070e000d0d0220232900b8024e402229472f03
7f03bf03cf03ef03ff03061f036f030203031223470a0519f11d47120d20
ba024d00000267b20eed26ba025e0016010e401b00061f06300640069006
05700680069006a006b006f0060606192bba0144018a00182b4e10f45d71
4de4edfdfde5003ffde43fed12392f715deded111239313000715d5d015d
5d5d2b010606232202353437363332161215100706232227263534363332
1716333224132626232206151416333203874d8047a5f75574d397e26af3
bce07c442e3b2b181e272b9b010602218153577a7b4f8b021a42370108c4
997dacb5feabb9fec6be923221362c3b0f14d301db8e77856e738e00>YPTUYZ+CIDFont+F2 AddT42Char 
1 3380 29 <000201cdffdc0303038b000b00170035400c03bf090615bf0f0a100c010c
b8011f400a123710000100d4061918ba0105012e00182b4e10f44ded5df4
ed5d003fed3fed3130011406232226353436333216131406232226353436
3332160301524848525248485202524848525248485203033a4e4e3a3a4e
4efd273a4e4e3a3a4e4e>YPTUYZ+CIDFont+F2 AddT42Char 
1 3510 36 <0002ffd2000004fc04bd0029002c0297406b2b400f1e3f262b372b672b7e
2b8f2bc92b06232b01a811ca2cd900d601d710d611d819d81ae72af7190a
57196702691166197301782a762c87118219842b852c992a962c0d05110d
19092a052c3811371940014102430d41104811560258110d2a180f1e3f11
400f1e3f14b8ffde400e1b1c3410221b1c3411221b1c3419b8ffc040381b
1c341719290226112a19251a2529262a3510381987100a3c2a332c022a22
0f143f002a2b29012c2b2b02401501090a0b0c0d0e0f101011ba029a029b
029cb71e494026401b4016b8ffc040120d4009400c400d07212223242526
272829004110029a029b029c001e0049ffc0001affc00026ffc0001bffc0
0016ffc0000cffc0400c0d060a090807060504030201ba029a029b029c40
111e49400f400d0219181716151413121110ba029a029b029c400d1e4900
2221201f1e1d1b1a1a19ba029a029b029cb71e492b2c112b0202b8026b40
0a101114101011192b2929b8026b40201a19141a1a19112c19341802122a
2200122c22000f010101400f1e3f2f010101b802fd400b092221210a0a09
0819cd11b802594009042b742b022b2b1029b80259400a001a101a241a5f
1a041abb02f1002e00020259b72b104610c2100310b802f1b32d9038182b
10f45ded10f45ded1239192f5d18eded003f3c103c103c10f4712b5d3ced
435c58b9002cffc0b310153f2cb8ffc0b30f1e3f2cb8ffc0b34b263f2cb8
ffc0b328143f2cb8ffc0b20f143f2b2b2b2b2b5910ed435c58b9002affc0
b310153f2ab8ffc0b30f1e3f2ab8ffc0b34b263f2ab8ffc0b328143f2ab8
ffc0b20f143f2b2b2b2b2b593fe4ed87052e2b877dc4872e182b877dc400
1139182b2b2b2b2b07103c3c073c3cb10602435458b42b2a0d1034002b59
3130012b5d712b2b2b2b2b2b5d5d5d00715d2b0121073332161514062321
222635343617012322263534363305013217161514062321222635343633
330b020361fe0e32324a3f3f4afeec4a3f424c0142864a3f3f4a01bb0198
48172e3e4afeec4a3f3f4a3286a5a6014a7d392e2d39392e2e3a02032239
2e2e3901fc111021362d39392e2d39014a0196fe6a00>YPTUYZ+CIDFont+F2 AddT42Char 
1 4312 39 <0002001d0000046b04bd001c002a00e1401ab921c90cc926035621572788
0d034500161718191a1b1c000001ba029a029b029c400d1e490008070605
040302010100ba029a029b029c400c1e491e2c172a2c0702170824bb0259
000f0023025940100f104018203f0010c0100210cc2c2a1db80256401101
004018203f00002f000200192b4084182b4e10f45d2b3c4dfd3c10f65d2b
3ced10ed003f3fed10ed2b2b31304bb00e507940361f2809150d0e0c0e0b
0e0a0e040626252725020612111311141103062122202202062809242a01
1f15232a01250e292a0122111e2a00002b2b012b2b2a2a2a2a8181015d00
5d3711262635343633053216171e02151514060607062321222635343605
333237363635353427262623239c413e3f4a01ad64bf3a2c5f30588f3f64
9ffe644a3f3f010dda7a3e5152253a916dd8cd032201392d2e39014a392b
96946b6282c97f1e2f392e2d3a01232e8e71616149725500>YPTUYZ+CIDFont+F2 AddT42Char 
1 4666 41 <00010064000004b204bd003301b540100f241f24020008090a0b0c0d0e0f
1011ba029a029b029c40111e49400a400b02191a1b1c1d1e1f202122ba02
9a029b029c400d1e4a002b2c2d2e2f3032333300bf029a029b029c001e00
4affc0000fffc0400c100209080706050403020100ba029a029b029c400d
1e490019181716151413121110bf029a029b029c001e0049ffc00009ffc0
400c0a022c2b2a29282725242423ba029a029b029c402b1e4a212c181224
2c3312232c333f004f005f006f00040f001f00020000081802102c090908
082b401b352bb80259b5242c401b352cb802594010241f332f336033c033
0433401b103f33ba016e00210259400b1a1a191a35222323000001bb0256
00110010ffc0b30c163410b8ffc0b323253410b8ffc0400b1b1f34001030
1002101934ba01ab01e300182b4e10f45d2b2b2b3c4dfd3c103c103c4e10
fe3c4d10fdf42b5d3ced2b10ed2b003f3c10ed3f12392f715d3ced435c58
b90023ffc0b30f1e3f23b8ffc0b3101b3f23b8ffc0b310153f23b8ffc0b1
1b352b2b2b2b5910ed435c58b90024ffc0b30f1e3f24b8ffc0b3101b3f24
b8ffc0b310153f24b8ffc0b11b352b2b2b2b5910ed2b2b2b2b2b2b313000
5d0111333216151406232122263534363333112322263534363305111406
232226353521113334373633321615151406232227263501dad24a3f3f4a
fe414a3f404920204a3f3f4a03c5392e2d39fdf5b40f1f392d39392e381f
0f01f9fed4392e2d39392e2d390322392e2e3901fec7493f3e4a6cfed750
17313f4aec4a3f311751>YPTUYZ+CIDFont+F2 AddT42Char 
1 5246 42 <00010041ffe204c204db003c015a401d5a0d662eca0dca25cc26d708d70e
d72be02e09070e07252606d32e0413b8ffe8401a232634360d460d581198
08a808b60db62607090c180cd9150326b8ffe8b30b0e3425b8ffe8400e0b
0e3400363738393a3b3c000001ba02a4029b029c401f1e494009400a400b
400c400d400e400f401040110937363534333231302f2eba029a029b029c
40171e492e01181e203401182f32340100043734362c30002fb8ffc0401f
0f1e3f2f401e3a342f401a1c343f2f4f2f5f2f6f2fef2fff2f062f2f232c
12b8013db423270f031bb80103400f14022c270409121e171d1e1718182f
b80259400ba000b00002500060000200b8ffc0b60f1234001a3e28be0259
000b00290259000b000affc0b60f12341f0a010ab801e8b33d6e84182b10
f65d2b3ced10ed4e10f62b71724ded3c103ced10ed003fed3fed3fede411
12392f5d2b2b2b3c3cfde41112392b2b392b2b3130012b2b715d2b00715d
011106062322272e02353534373621321617363332161515140623222726
262726262322070606151514163332373523222635343633053216151406
046b8bc3719d866979667da8012154974429272d38392d241a141b111b89
557a5a406cbfd08d74d14a3f3f4a016c4a3f2b0177feed4b372f246ed785
94cda1da2222253e4a854a3f160f67121d2d3225b86c94a5ab3593392e2e
3901382e2436>YPTUYZ+CIDFont+F2 AddT42Char 
1 7368 55 <000100520000047804bd0023013b40214026401a401740184019400e4009
400a400b400c400d0b08090a0b0c0d0e0f1011ba029a029b029c40131e49
40264009400a031b1c1d1e1f2021222300411c029a029b029c001e004aff
c00026ffc0001affc00017ffc00018ffc00019ffc0000effc00009ffc000
0affc0000bffc0000cffc0000dffc0400c160c09080706050403020100ba
029a029b029c40131e4940264009400a031a191817161514131211ba029a
029b029c401e1e4a23001112400f1e3f12400f143f12221b1a020908081a
19400c0e3419b8ffc0b7160d3f19e8101b1cb8ffc0400c0c0e341c40160d
3f1ce80111bb025600000010025640140000011001800103100170019001
c001d0010501b8ffc0b3160d3f01b80282b325c9a6182b10f62b5d713ced
10ed10f42b2b3c10f42b2b3c003f3c3f3cfd2b2b3c3c3c2b2b2b2b313001
113332161514062321222635343633331123151406232226351105111406
232226353502ca8a4a3f3f4afe204a3f3f4a89de392e2d390426392e2d39
03effcde392e2d39392e2d390322c24a3f3f4a019001fe714a3f3f4ac200
>YPTUYZ+CIDFont+F2 AddT42Char 
1 7788 68 <00020059ffde049803a700290037013d40352a0501302e01053616362336
3f2a3f2b3f2c3d2d6d0e7c0e09052015209708c306c920d406e406f63608
0000292827262524232221ba029a029b029c40141e491113302a37220001
862901292a37340c120ab8ffc0402f1e2034100a500a02400a800a020a21
5f2c014f2c012c2c2914402d323414651210211e07290a8034013421040b
0d00b80257b4215f220122b8ffc04009120b3f221a39178730b802554012
0740170e3f1f0720073007030719383fb6182b4e10f45d2b4dfded4e10f6
2b5d3c4dfd3c003fed713f3fed435c58400f10402d5a3f10400f1e3f1040
0f143f2b2b2b59ed2b12392f7172ed71722b435c58b9000affc0b32d5a3f
0ab8ffc0b30f1e3f0ab8ffc0b3101b3f0ab8ffc0b310153f0ab8ffc0b20f
143f2b2b2b2b2b5939123939113910ec01111239391239392b3130005d71
01715d213506062322263534243332173534262322070623222635343636
373636333216151133321615140623032623220706151417163332363703
1f4dba4ca5ce0107e85d7a4f6f5b91361e29391424394c9e40bfd3234a3f
3f4af07b687d5a381b32574abb49302929af6a81dd14312e3a240d3b2e1a
2617101519a58ffe5a392e2d39016f183d27281d12213a32>YPTUYZ+CIDFont+F2 AddT42Char 
1 8790 70 <00010072ffde048b03a7002b00ef404dd911d314d724d927e912e614e624
e927fb14fb230a081409230236126511671265156628fb0c060b0c011249
124d275912dd14d924eb14e924071a190d0c00050613191b160c0d100910
1b011bb80121b422007a290eb802fab41021290709b8014a400902061621
220b064e1eb8ffc040101935701ee01e02501ed01e021e1a2d13b8025540
1270260100262026302670260426192cce7c182b4e10f45d714ded4e10fe
725d2b4de4003fed3fed3ffde410e410ed5d111239391112390111121739
3130005d435c58401008400d163f0a400d163f09400d163f1bb8ffc0b217
0e3f2b2b2b2b5901715d00715d0136333216151514062322272626272623
22061514163332373636333216151407062122272635340033321603a625
272c39392e2a1d15182e517e91afa8c380513056232a3d5d8afef6ef85b4
0124eb55920367233f49844a3e18126f1b30aa82788b1a104d3e2a443d5b
6385e7db011f2000>YPTUYZ+CIDFont+F2 AddT42Char 
1 9158 71 <0002003effdf04e90511001e002a0170402f0a0b080e051503f40e01100b
1f151f20102a200b2f152f20202adb26db2aeb26eb2afc11fd20fc240f20
400a0b342ab8ffc040090a0b342040090f3f2ab8ffc04018090f3f1b4013
221b40280d23080009080706050403020100bd029a029b029c001e0049ff
c0400c1601001e1d1c1b1a19181716ba029a029b029c40181e490a860816
131e0022211307080a28210d0b1716161f09b80257400f006f01700102c0
01e00102011a2c25b80255401a1f104f105f106f107010df10ef10ff1008
bf100110192b498f182b4e10f4715d4ded4e10f65d5d3c4dfd3c3c103c00
3fed3f3fed3f113910ec2b2bb10602435458b50a400b103416b8ffc0b20b
1034002b2b5931304379401823270e122312251f00270e251f002411221f
01260f281f00002b2b012b2b8181004954794010292a0b0c2a0b28230429
0c1f23010b0a01103c2b002b818100495479401020211415201522230521
141f2301151601103c2b002b8181002b2b2b2b5d015d0071011133321615
140623233506062322003534003332161735232226353436331334262322
06151416333236043d2349403f4af0469952e7fee60128d5509a4b234a3f
3f4a23b28180b2a09291a20511fbbc392e2d3932292a010bc7d001263131
ff392d2e39fc9a7fb0b07c719191>YPTUYZ+CIDFont+F2 AddT42Char 
1 9652 72 <00020042ffdf046a03a7001d0024019b400ab812b814b71bc71b040db8ff
e040491c1e3464026c14c706d706d814d819e706e814e819f302f506f312
fc14f81ff9230f360647060212691469186a1a6a1f662394029f1f9023ac
1fa423fa190b1d0705030b13241e0108b8ffc0b32a3a3408b8ffc0400c19
22348008d00802f0080108b80116b5121e401d351eb8ffc0400f1d203410
1e01401e801e028f1e011eb801184035004012233f0040213500401c351f
00010f004f00cf0003ff000100400c0f3400000421400f1e3f21400f143f
212116070421100b1eb80260b200770bb8ff80b323463f0bb8ff80b34b26
3f0bb8ffc0400c232434e00b010b1a26247701b802604014134023351f13
70130213400d0f34131925496c182b4e10f42b5d2b4dfde44e10f65d2b2b
2b4df4ed003fed3ffd2b2b11392f2b5d71722b2b2bed5d71722b2b435c58
b51e4019213f1eb8ffc0b314283f1eb8ffc0b312233f1eb8ffc0b323123f
1eb8ffc0b228143f2b2b2b2b2b59ee5d712b2b3c103c0111121739313001
5d435c58b90002ffd4400911173f1f2c11173f23b8ffd4b211173f2b2b2b
5900715d012b5d0121161633323736333216151407060423220035340033
32161716171615272626232206070469fcb720a38b72bd4e1e29381e28fe
ca8ff6fed9013fd07dd133482f20e32f9869689830015e506231143a2c28
1c25430116cbd8010f58334a6d4c647658575758>YPTUYZ+CIDFont+F2 AddT42Char 
1 10656 74 <00020042fe5404c103aa00250031018d40390e27023102070c170c211231
124212b81fb821c81fc821f927f9310b101b1f25201b2f25960cf41ffb21
fa27fb2bf42df5310b2740090f3f31b8ffc04009090f3f27800a0b3431b8
ff80400d0a0b34184023291b402f1d2308b8ffc0400c1d01010203040506
0708090aba029a029b029c40211e491417261214161a2f1d162c0f292123
07007a0201062f211d0b0f0e26770119b80257b20a0001b8025740230a9f
09af09bf09cf09047009c009e009031f092f094f0903091a335012601202
12c62cb8025540141f204f205f206f20702005bf20012019324967182b4e
10f4715d4dfde65d4e10f6715d5d3c4dfd3c10fd3ce4003f3fed3f3ce43f
ed10ed111239123901111239392bb10602435458b51a400b103400b8ffc0
b20b1034002b2b593130437940182a2e1e222a222c1f002e1e2c1f002b21
291f012d1f2f1f00002b2b012b2b818100495479401030311b1c311b2f23
04301c2623011b1a01103c2b002b818100495479400e2428272529230528
24262301250001103c2b002b81002b2b2b2b5d015d007101353332161514
062323111406062323222635343633333236353506062322003534003332
161334262322061514163332360348f04a3f3f4a235bbc76e84a3f3f4ae2
5e68448d4ad1fee6011ad14e8d3fa77575a7a77575a7034f3d392e2d39fd
166ca174392d2e39664e642c2c0117cdce01172dfe4971a6a67172a5a500
>YPTUYZ+CIDFont+F2 AddT42Char 
1 11592 76 <000200800000044b05110003001c00c3b90001ffc0b30b0d3e02b8ffc040
150b0d3e500901400d400e020c0d0e0f101112131415bf029a029b029c00
1e0049ffc0000dffc0400c16020d0c0b0a090807060504ba029a029b029c
400d1e4900041c1b1a191817161514ba029a029b029c400a1e492f023f02
4f020302ba02570003ffc0400d0e393f030103001c060d0c0a05bb025700
1400020257b2017804b80257400f15152014301460140314191d5aa4182b
4e10f45d3c4d10fdf4ed10ed003f3c3f3f712bed5d2b2b2b3130015d002b
2b0115233501113332161514062321222635343633331123222635343633
02b0f40110f64a3f3f4afd474a3f3f4af6a549403f4a0511d9d9fe7bfd41
392e2d39392e2d3901f2392e2d39>YPTUYZ+CIDFont+F2 AddT42Char 
1 11876 79 <000100810000044c05110018007e400b0008090a0b0c0d0e0f1011ba029a
029b029c400d1e490009080706050403020100ba029a029b029c400d1e49
0000181716151413121110ba029a029b029c40091e49180009080a0001b8
0257401a111040120b3f1040140c3f201030106010a010041019195aa418
2b4e10f45d2b2b3c4dfd3c003f3c3f2b2b2b313001113332161514062321
22263534363333112322263534363302cdf64a3f3f4afd474a3f3f4af6a5
49403f4a0511fbbc392e2d39392e2d390377392e2d39>YPTUYZ+CIDFont+F2 AddT42Char 
1 13168 81 <000100330000049803a700350132403306061606971d03df09df1f020940
161642581f40161642580940161602581f40161602584009400a020f1011
12131415161617ba02d7029b029c400d1e4900262728292a2b2d2e2e2fbd
029a029b029c001e0049ffc0400c1601100f0e0d0c0b0a090908bd029a02
9b029c001e0049ffc0400c1601272625242322201f1f1eba02d7029b029c
400d1e4900003534333231302f2f2eba029a029b029cb21e491eb801a940
1101f51b210407350627262610100f0a1716b80257b50809401d3509b8ff
c0401219357009af09e009030f0901091a371e001fb80257400e2e2e802f
011f2f012f19364f67182b4e10f45d713c4d10fd3c3c4e10f6715d2b2b3c
4dfd3c003f3c103c103c3f3fedf4ed2b2b2b2b2bb10602435458b90001ff
c0b20b1b34002b59012b2b2b2b313001015d005d01153636333217161511
321615140623232226353436331134272623220607113217161514062323
2226353437363311222635343633019738874fb66a54413e3f4ab94a3f3e
41242f5e476b524f17313f4ae94a3f30184f413e3f4a038c453030715a92
fe83392e2d39392e2d390183431f283759fe830f1e3a2d39392e381f0f01
f23a2d2d3900>YPTUYZ+CIDFont+F2 AddT42Char 
1 14534 85 <0001006c0000049503a700290178b72001019806011201b8ffc040251a35
0a104a1002af10af11021f40040e4009400a400b400c400d05191a1b1c1d
1e1f202122410c029a029b029c001e0049ffc0000bffc0000cffc0000dff
c0400c16041a191817161514131211ba029a029b029c400d1e4900002928
27262524232221ba029a029b029c40191e490c0d081211202d2f34114041
47341140212534110e1a01b8ffc0b330323401b8ffc0b31e263401b8ffc0
b614193401290e0bb8011d40210e21040729061a190a0008200830085008
6008700806900801081a2b0100001112b802574011220021202130215021
602170210621192ab80101b17c182b4e10f45d3c4dfd3c3c103c4e10e672
5d003f3c3f3f4deded1112392b2b2b1112392b2b2b01111239392b2b2bb1
0602435458b90001ffc0b20b1334002b5931300049547940120f10020310
020e23050f031123001011020101103c103c2b002b8181005d712b435c58
40141040190f3f1140190f3f1040140c3f1140140c3f2b2b2b2b59005d71
011536363332171615140623222623220607112132161514062321222635
343633331123222635343633023c819541645e403d2b2654212bab800124
4a3f3f4afd954a3f3f4a7a4a4a3f3f4a038c805d3e4a32342c3d4c6c6cfe
cb392e2d39392e2d3901f2392e2d3900>YPTUYZ+CIDFont+F2 AddT42Char 
1 15030 86 <00010097ffdf043c03a7004702c140350912063519121635663086309630
a42eb42ec32ed609d40ad631e609e731f40cf62f110a0107050709073628
30362f4729462f0824b8ffc040700b0f3f00400b0f3f0a000f0108233700
3e294600062f00232428352f462f4787319731f900ff01f8230a12050b03
0c092f0c30170b140c1d181f191a30123a850b8b30d20bdb2f0ee639e13a
f92f0320170130241703332e0c0a00042b072421160c1930022e20303234
30203032340cb8ffe0b32e32340ab8ffe0b32e32340cb8ffc0b23a350ab8
ffc0b23a350cb8ffe0b33639340ab8ffe0b33639340cb8ffc0b35053340a
b8ffc0b35053340cb8ffe0b34a4f340ab8ffe0b34a4f340cb8ffc0b24735
0ab8ffbab247350ab8ffe0400b4335302e0c0a042700453ab8ffe0b32e32
343ab8ffe040091a27343a3c030c0a0ab8026c4045302e1430302e032137
071f457f45ef45030f454f45021f450145402325344540363545d63d3d3c
0617401b2d34177810217021e0210300213f210221d61a0a2721140b4000
b80260b2414e2bb802554011701080109010b010c010e01006101a4907bb
0255003300240260400b1e1d4e1f33203330330333b8ffc0400921233433
19484f8f182b4e10f42b5d4df43ced10ed4e10f65d4dedf4ed3c003fed3f
ed715de42b3f3c10ed2b2b72715d3fed870e2e2b7d10c4001112392b2b12
391217392b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7211390111121739121739
713130005d71435c58401a00400a0d3f43400a0d3f46400a0d3f45400a0d
3f44400a0d3f22b8ffc0b30a0d3f24b8ffc0b30a0d3f20b8ffc0b30a0d3f
21b8ffc040090a0d3f3040160d3f0ab8ffc04009170e3f2f220f193f0db8
ffdeb30f193f23b8ffc0b30a113f22b8ffc0b30a113f21b8ffc0b30a113f
20b8ffc040170a113f43400a113f47400a113f46400a113f45400a113f2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59015d712b2b00715d01
262623220706151417161716171616151407062322262706062322263535
343633321617161633323736353427262726272635343736333216173636
33321615151407062322260344326e3c77461f2a206fcc506972618bde59
973f0f22123039392e25320e2f84568d4e253535a6f753535d7ecc47833c
13210e2a381020372538029c1f1f2711141716100f1c1c2592516e4a6b1f
1e0d0e3f4a454a3f293228292c1618281a1a121a4a496b6e49641b1c0e0e
3f4a3243182e2e00>YPTUYZ+CIDFont+F2 AddT42Char 
1 15938 87 <00010094ffdf04ba04ce002c00acb2190821b801b2401f25160021262525
1d0609f50521110b7019011919142d292901700ce00c020cb8ffc040093a
350c1a2e25240001b8025740261d1e15001420143014501460147014b014
c014e014f0140a101420146014701480140514192dba0101013500182b4e
10f4715d3c3c3c4dfd3c3c3c4e10ee2b5d11392f1112392f5d003f4dfde4
3f3c103cfd3c10e43130437940101213020403260412011d000213051d00
2b012b2b8181011114171633323736333216151407060423222635112322
26353436333335343633321615152132161514062302341b2a6c9d85331d
283b2031fedf63bfbf4a4a3f3f4a4a392e2d39017b4a3f3f4a02bffe6542
1521431a3c2b281d2f4fa57801c3392e2d39b94a3f3f4ab9392e2d39>YPTUYZ+CIDFont+F2 AddT42Char 
2 0 89 <00010000000004d5038c002201d0b60f100013021200b8ffc0b70b0e34d0
00011213b8ffe0400b0909425822200909425801b8ffe040170909425810
200909425840090108090a0b0c0d0e0f1011bd029a029b029c001e0049ff
c0400c09011a1b1c1d1e1f21222200ba02d7029b029c400f1e4940090109
080706050402010100bd02d7029b029c001e0049ffc0400c09011b1a1918
171615141312ba029a029b029cb41e49010000b80257400b111014110022
1110220000b802574012121314120001121300121b1a1a0909080600b801
a9b41212110a01b801a9b6405010f0100210b80207400a201187f0120112
870022b801a9b4405f130113b802074010205000010400140050008000b0
000500b802a0b3237f8f182b1910f45d711afd5d1a18ed10ed5ded1a19fd
5d1a18ed003f3c10ed3f3c103c103c123987082e2b057d10c487082e182b
057d10c4182b2b2b2bb10602435458b90000ffc0b20b1034002b59012b2b
2b2b313001435c58b501400f1e3f22b8ffc0400e0f1e3f0140141b3f0140
172d3f22b8ffc0400e172d3f1018140c3f0118140c3f11b8ffdeb70f093f
12220f093f2b2b2b2b2b2b2b2b2b5900712b435c58b500800f093f00b8ff
c0b3172d3f00b8ffc0b314283f00b8ffc0b2141b3f2b2b2b2b59015d2513
222726353436332132161514062323012301232226353436332132161514
0706230268dd5217323f4a01194a3f3f4a22fea9d6fea91d4a3f3f4a0113
493f301853f901c60e1f3a2d39392e2d39fd4102bf392e2d39392e391e0f
>YPTUYZ+CIDFont+F2 AddT42Char 
2 1708 91 <0001002b000004a7038c00390274b90011ffe8401143350f203f3503181e
26341b181e263437b8ffe8b31e263421b8ffe840371e2634162cc22cdf0f
d52c04481b462cd505d50ad90cd912d514d519da28da30fa0f0b4b0f5a0f
8b0fcb0fc52c051f503f351d403f3501b8ffc0b23f3539b8ffb040393f35
390852350700081e3701690e780e05681f981f021501191d191fd301da0e
de1dde1fd33908cf0b014f0b5f0b8f0baf0bbf0b050b0b0e2fb8ffc0403e
1517342f2f2d001301401350138013a013b0130513131029401517342929
002b0139102c2b012d1d0f1f0e10391e1d2d1f0e010e1f1f805564345d1f
011fb8026c40122b01142b2b01392d1d1d80556434521d011db8026c40ac
103914101039010e101d1e08170a392db92bb91f1e322506ca0ec510c62b
c92dfc0ef410f42bfb2d08922b9d2da90ea710bc0eb310b42bbb2dcc0ec3
10c42bcb2d0c112b1e2d212b2e2d332b3c2d432b4c2d8b0e8410862b8a2d
0c560e5a10562b5a2d660e6a10662b6a2d990e97100a170e1810142b1b2d
4a0e4610062d084b352d30473510083a351008433510204b35392d1d1004
1a362b324b351f2b010e0404220f3601ff3601363604b8ffc040124b3504
402226344f04011004b004c0040304b8ffc0b310123404b8ffc04009171b
3404043b22221ab8ffc0400e50358f1a9f1aaf1abf1acf1a051a2f5d2b33
2f11332f2b2b5d712b2b332f5d71111217392b111217392b2b2b2b2b7272
71715d003f3cfde5e53c3f3cfd3c3c3c87052e2b5d2b877dc4872e182b5d
2b877dc40f0f0f0f0133182f2b11332f5d7111332f2b11332f5d71b10602
435458b50f200910342cb8ffe0b2091034002b2b59313001725d712b2b2b
2b2b005d71722b2b2b2b2b2b010116161514062323222635343637270716
161514062323222635343637012526263534363333321615140717372635
343633333216151406070300013738383f4ae94a3f2d27999c2f293e4ae7
4a3f38380130fef335373f4ac04a3f387c7a373f4abe4a3f373601d8fef5
03392b2d39392f24370a84840c32272f39392e2a3903010ce604392a2d39
392c3b25676927333039392e29390400>YPTUYZ+CIDFont+F2 AddT42Char 
2 2504 92 <0001002bfe5404a8038c002d03154084420f6c00730f860f040f402d3234
00402d3234561d761e860f851e951d050f802d323400962d32340f802225
340096222534700f930fa20fb900b40fc60f06041e141e870e960ec71e05
2f012e0e2910961d941ea41eb61dcb00c61de61e0a129f0001200f310f41
0f520f6c0faf00ad0fef00ef0f09230f350f7f007f0f920fdc00060fb8ff
c040750b352c10261d3c0e460f570f5a10571e6b00690e671e7a007a0ea9
00a90feb00ea0ff900111b10131e2301220e380f460f441ed800d51e0912
2009200a200b200c200d2f122f132f142f15092f113f113f123f133f143f
154f134f14084f114f124f155f115f125f135f145f15081d20090a425810
b8ffe0400d090a42580f0f0e0000012d2d10b8ffc0400c0c010708090a0b
0c0d0e0e0fbd029a029b029c001e0049ffc0400c0c01161718191a1b1c1d
1d1eba029a029b029c40111e494010400f0225262728292a2b2c2d00ba02
9a029b029c400d1e490008070605040302010100ba029a029b029cb51e49
4009400ab8ffc0400c0c031716151413121110100f410a029a029b029c00
1e0049ffc0000effc0000fffc0400c1003262524232221201f1e1dba029a
029b029c400f1e492d1e1d100f0e01070726102d2db802dc40091e1d141e
1e1d0e0f0fb802dc401d000114000f1000012d1e1d100f0e010008261716
160808070626250e2dba01a9001e029840101d10fe5b006b00020087a00f
010ffe0eb801a9400b701d01101d7f1de01d031db80297b67f0101000101
01bc019b002e003f01d700182b10f65d71ed5d71fd19f45d18ed5de410f4
ed003f3c3f3c103c103c12173987082e2b057d10c4872e182b7d10c40011
121739182b2b2b2b2b2b0710083c083c012b2b3130015d5d5d435c58b900
1dffe8b3171f3f1eb8ffd4b3171f3f1eb8ffdeb3141b3f1db8ffdeb7141b
3f10220f390eb8ffdeb10f392b2b2b2b2b2b59715d002b715d72435c58b9
000fffc0400e171f3f004a0e133f0f800e133f0fb8ffc0400e0f1e3f00e4
190f3f0fe4190f3f0fb8ffc0b30f193f0fb8ffdeb6141b3f0f400b392b2b
2b2b2b2b2b2b2b5901715d00712b2b2b2b01722b2b007225012626353436
333332161514062313132226353436333332161514060701321716151406
23212226353436333301f4fe9d32343f4abb4a3f3f44f2f0423f3f4ac149
3f3635fe2a4d18303f4afe414a3f3f4acc0702b80638282e39392e2d39fe
2901d7392e2d39392e293904fc620f1f392d39392d2e3900>YPTUYZ+CIDFont+F2 AddT42Char 
2 3428 93 <000100b10000042d038c001601644024660af70a02150a1b1602d50ae60a
02420b4516c600c90b04d900ea0b0212160e0c0d3400b8ffde40220b0d34
0b400b0d342700260a230b54005616650b65160700080706050403020101
00ba029a029b029c400d1e4a0014131211100f0e0d0c0bba029a029b029c
b51e4a0b160000b80257400f0a0b140a0a0b0b000a16090c0b1e16b802f6
b61515140601000ab802f64009001e08090a07781516b8012140100f0b10
0b4f0b6f0b8f0b900be00b070bba02a30000012140140a0a13783f094009
500903df09010919177f8f182b4e10f45d714de43c10edf45dfd3ce4003f
3cede6103c3f3c10e6fd3c123939013939872e2b877dc4182b2b3130015d
2b2b2b435c58400b16180f143f0b800f1e3f00b8ff80b30f1e3f00b8ff80
40090a113f0b400a113f00b8ffc04009090f3f0b80090f3f16b8ffdeb30f
143f00b8ffde400d0f143f0a180f143f0b220f143f2b2b2b2b2b2b2b2b2b
2b2b5901715d0071725d2521363633321615152135012115140623222635
37211501f8016803392a2e39fc84021cfec6392e2e39010350cd39393f4a
b6aa021514493f3f49e1a800>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/quotedbl 5 def
/comma 15 def
/period 17 def
/zero 19 def
/one 20 def
/three 22 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
/colon 29 def
/A 36 def
/D 39 def
/F 41 def
/G 42 def
/T 55 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/g 74 def
/i 76 def
/l 79 def
/n 81 def
/r 85 def
/s 86 def
/t 87 def
/v 89 def
/x 91 def
/y 92 def
/z 93 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 34 /quotedbl put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[34{/.notdef}rp /quotedbl 9{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /seven /eight 
/nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 
/G 11{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c 
/d /e /.notdef /g /h /i 2{/.notdef}rp /l 
/.notdef /n /o /p /.notdef /r /s /t 
/.notdef /v /w /x /y /z 133{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
55.6938 -96.7002 mo
(p1,)
[5.60544 5.69792 0 ]xsh
12.0138 -81.7002 mo
(Graphics)
[5.60544 5.69792 5.60544 5.60544 5.60545 5.69792 5.60544 0 ]xsh
%ADOBeginSubsetFont: XOSAAA+CIDFont+F3-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/XOSAAA+CIDFont+F3 5 GetGlyphDirectory
22 <001C60D8A8C9B7C3C9ED72694E8AB2A021DF8739B2379C91B687EE99B2F5
1A081AC7511C4B9BE12CA28310B15C4D100F18FED149FB452BA8177A03ABC37A
DEE8A0EA0CC705A09B8DD5E131FF08> |
24 <001C60D8A8C9B7C3C9ED616042809B5BA96CB9D8659B851814ABF6DEE114
649D6FE1583DFC3B9EBD5EA6A4EC809EB2FC6DE2B36136A21DEFAE027A67403B
22E2C8428F7BFC0388E3B8E958385F242369BE16F50D6E8E38E45FA5431A6D28
BEB01C20047805245B5A89596D55567CD258DFB74F83AE3E8490> |
10 <001C60D8A8C9B7C3C9EDA1C57FC8745773ADA64C9BBEEC3C> |
181 <001C60D8A8C9B605F8976B93EFD4EE913E6AE63DA8C9F73B1F30C987838
A9B41182F193A516B414C7A2409> |
18 <001C60D8A8C9B7C3C9E2BB7EB46E9FD47A279F1D7450209BB2BB6DE1B6A7
DBDC2A5B22> |
!
end
end end
%ADOEndSubsetFont
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
57.0138 -81.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
62.6538 -81.7002 mo
(Text)
[5.60544 5.69792 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
85.094 -81.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
90.7339 -81.7002 mo
("",)
[11.1165 5.69794 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
116.174 -81.7002 mo
(\000\026)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
121.814 -81.7002 mo
(1.0,39.0)
[5.60544 5.69791 5.51108 8.59404 5.69792 5.60544 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
169.694 -81.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
175.334 -81.7002 mo
(,)sh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
183.974 -81.7002 mo
(\000\026\000\012)
[5.51108 0 ]xsh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
196.214 -81.7002 mo
(1,0)
[5.51108 8.68747 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
216.014 -81.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
221.654 -81.7002 mo
(,TextStyle)
[8.59402 5.69794 5.60544 5.60544 5.69794 5.60542 5.60544 5.69791 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
283.814 -81.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
293.534 -81.7002 mo
(FontSize)
[5.60544 5.69794 5.60544 5.60544 5.60544 5.69791 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
341.414 -81.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
351.254 -81.7002 mo
(16)
[5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
362.415 -81.7002 mo
(\000\022\000\022)
[8.12689 0 ]xsh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
376.095 -81.7002 mo
(,)sh
12.0148 -66.7002 mo
(Graphics)
[5.60544 5.69792 5.60544 5.60544 5.60545 5.69792 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
57.0148 -66.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
18.135 -51.7002 mo
(Text)
[5.60544 5.69792 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
40.6948 -51.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
46.2151 -51.7002 mo
("Average:0.95s",)
[5.60544 5.69792 5.60544 5.60544 5.60544 5.69792 5.60544 5.51108 11.2099 5.60544 5.60544 5.60544 
11.2099 5.60544 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
150.375 -51.7002 mo
(\000\026)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
156.015 -51.7002 mo
(0.7,32.0)
[5.60544 5.69792 5.51108 8.59406 5.69791 5.60544 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
203.895 -51.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
209.535 -51.7002 mo
(,)sh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
218.175 -51.7002 mo
(\000\026\000\012)
[5.51108 0 ]xsh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
230.415 -51.7002 mo
(1,0)
[5.51108 8.68747 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
250.216 -51.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
255.855 -51.7002 mo
(,TextStyle)
[8.59401 5.69794 5.60544 5.60544 5.69794 5.60544 5.60544 5.69791 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
318.015 -51.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
327.735 -51.7002 mo
(FontSize)
[5.60544 5.69794 5.60544 5.60544 5.60544 5.69791 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
375.615 -51.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
385.456 -51.7002 mo
(20)
[5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
396.616 -51.7002 mo
(\000\022\000\022)
[8.12689 0 ]xsh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
410.296 -51.7002 mo
(,)sh
12.0158 -36.7002 mo
(Graphics)
[5.60544 5.69792 5.60544 5.60544 5.60545 5.69792 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
57.0158 -36.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
62.6558 -36.7002 mo
(Text)
[5.60544 5.69792 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
85.096 -36.7002 mo
(\000\021)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
90.7359 -36.7002 mo
("StandardDeviation:0.36s",)
[5.51108 5.60544 5.69792 5.60544 5.60544 5.69794 5.60542 5.60544 11.2099 5.60544 5.60544 5.60544 
5.69794 5.60544 5.60544 5.60544 5.69791 5.41766 11.1165 5.60541 5.69794 5.60544 11.3033 5.51108 
5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
256.576 -36.7002 mo
(\000\026)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
262.216 -36.7002 mo
(0.7,28.0)
[5.60544 5.69794 5.51108 8.59402 5.69794 5.60544 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
310.096 -36.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
315.736 -36.7002 mo
(,)sh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
24.2561 -21.7002 mo
(\000\026\000\012)
[5.60544 0 ]xsh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
36.4964 -21.7002 mo
(1,0)
[5.60544 8.68747 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
56.416 -21.7002 mo
(\000\030)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
62.056 -21.7002 mo
(,TextStyle)
[8.50061 5.69794 5.60544 5.60544 5.60542 5.69794 5.60544 5.60542 5.69794 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
124.216 -21.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
133.936 -21.7002 mo
(FontSize)
[5.60544 5.69792 5.60544 5.60544 5.60544 5.69794 5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
181.816 -21.7002 mo
(\000\265)sh
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
191.536 -21.7002 mo
(20)
[5.60544 0 ]xsh
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
202.816 -21.7002 mo
(\000\022\000\022)
[8.03354 0 ]xsh
gsave
5.89346 -29.5002 mo
11.5335 -29.5002 li
11.5335 -2.26025 li
5.89346 -2.26025 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
5.89365 -6.69995 mo
(\000\022)sh
grestore
1 /0 /CSD get_res sepcs
.58631 sep
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 3 GetGlyphDirectory
50 <001C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170
AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C5848
2F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5
380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2
E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA7
62289BE1> |
88 <001C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F
517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA
8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793
990906DA8D7F8ACFF6D70790F06B02> |
87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D
065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349
CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB512
7F5C42C88FB43C> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [5.7491 0 0 -5.7491 0 0 ]msf
-27.7064 121.46 mo
(\0002\000X\000W\000>\000\027\000\026\000@\000 )
[4.42797 3.27641 1.55343 1.55342 3.1965 3.27642 1.55342 0 ]xsh
.36 lw
2 lc
0 lj
3 ml
[] 0 dsh
true sadj
37.6935 200.061 mo
43.4535 200.061 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
43.4535 200.061 mo
49.3334 200.061 li
cp
@
49.3335 200.061 mo
55.0935 200.061 li
cp
@
55.0935 200.061 mo
60.8534 200.061 li
cp
@
60.8534 200.061 mo
66.7334 200.061 li
cp
@
66.7335 200.061 mo
72.4934 200.061 li
cp
@
72.4934 200.061 mo
78.3734 200.061 li
cp
@
78.3735 200.061 mo
84.1334 200.061 li
cp
@
84.1334 200.061 mo
89.8934 200.061 li
cp
@
89.8934 200.061 mo
95.7734 200.061 li
cp
@
95.7735 200.061 mo
101.533 200.061 li
101.533 195.501 li
95.7735 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
101.533 200.061 mo
95.7735 200.061 li
95.7735 195.501 li
101.533 195.501 li
cp
95.7735 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
101.533 200.061 mo
107.293 200.061 li
107.293 137.301 li
101.533 137.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
107.293 200.061 mo
101.533 200.061 li
101.533 137.301 li
107.293 137.301 li
cp
101.533 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
107.293 200.061 mo
113.173 200.061 li
113.173 83.4207 li
107.293 83.4207 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
113.173 200.061 mo
107.293 200.061 li
107.293 83.4207 li
113.173 83.4207 li
cp
107.293 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
113.173 200.061 mo
118.933 200.061 li
118.933 2.66071 li
113.173 2.66071 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
118.933 200.061 mo
113.173 200.061 li
113.173 2.66071 li
118.933 2.66071 li
cp
113.173 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
118.933 200.061 mo
124.693 200.061 li
124.693 137.301 li
118.933 137.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
124.693 200.061 mo
118.933 200.061 li
118.933 137.301 li
124.693 137.301 li
cp
118.933 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
124.693 200.061 mo
130.573 200.061 li
130.573 195.501 li
124.693 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
130.573 200.061 mo
124.693 200.061 li
124.693 195.501 li
130.573 195.501 li
cp
124.693 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
130.573 200.061 mo
136.333 200.061 li
136.333 186.621 li
130.573 186.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
136.333 200.061 mo
130.573 200.061 li
130.573 186.621 li
136.333 186.621 li
cp
130.573 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
136.333 200.061 mo
142.213 200.061 li
142.213 191.061 li
136.333 191.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
142.213 200.061 mo
136.333 200.061 li
136.333 191.061 li
142.213 191.061 li
cp
136.333 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
142.213 200.061 mo
147.973 200.061 li
147.973 191.061 li
142.213 191.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
147.973 200.061 mo
142.213 200.061 li
142.213 191.061 li
147.973 191.061 li
cp
142.213 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
147.973 200.061 mo
153.733 200.061 li
153.733 182.061 li
147.973 182.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
153.733 200.061 mo
147.973 200.061 li
147.973 182.061 li
153.733 182.061 li
cp
147.973 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
153.733 200.061 mo
159.613 200.061 li
159.613 195.501 li
153.733 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
159.613 200.061 mo
153.733 200.061 li
153.733 195.501 li
159.613 195.501 li
cp
153.733 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
159.613 200.061 mo
165.373 200.061 li
165.373 191.061 li
159.613 191.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
165.373 200.061 mo
159.613 200.061 li
159.613 191.061 li
165.373 191.061 li
cp
159.613 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
165.373 200.061 mo
171.133 200.061 li
171.133 177.621 li
165.373 177.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
171.134 200.061 mo
165.374 200.061 li
165.374 177.621 li
171.134 177.621 li
cp
165.373 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
171.134 200.061 mo
177.014 200.061 li
177.014 137.301 li
171.134 137.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
177.014 200.061 mo
171.134 200.061 li
171.134 137.301 li
177.014 137.301 li
cp
171.134 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
177.014 200.061 mo
182.774 200.061 li
182.774 146.181 li
177.014 146.181 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
182.774 200.061 mo
177.014 200.061 li
177.014 146.181 li
182.774 146.181 li
cp
177.014 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
182.774 200.061 mo
188.654 200.061 li
188.654 123.741 li
182.774 123.741 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
188.654 200.061 mo
182.774 200.061 li
182.774 123.741 li
188.654 123.741 li
cp
182.774 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
188.654 200.061 mo
194.414 200.061 li
194.414 119.301 li
188.654 119.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
194.414 200.061 mo
188.654 200.061 li
188.654 119.301 li
194.414 119.301 li
cp
188.654 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
194.414 200.061 mo
200.174 200.061 li
200.174 119.301 li
194.414 119.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
200.174 200.061 mo
194.414 200.061 li
194.414 119.301 li
200.174 119.301 li
cp
194.414 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
200.174 200.061 mo
206.054 200.061 li
206.054 159.621 li
200.174 159.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
206.054 200.061 mo
200.174 200.061 li
200.174 159.621 li
206.054 159.621 li
cp
200.174 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
206.054 200.061 mo
211.814 200.061 li
211.814 146.181 li
206.054 146.181 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
211.814 200.061 mo
206.054 200.061 li
206.054 146.181 li
211.814 146.181 li
cp
206.054 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
211.814 200.061 mo
217.574 200.061 li
217.574 150.741 li
211.814 150.741 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
217.574 200.061 mo
211.814 200.061 li
211.814 150.741 li
217.574 150.741 li
cp
211.814 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
217.574 200.061 mo
223.454 200.061 li
223.454 164.181 li
217.574 164.181 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
223.454 200.061 mo
217.574 200.061 li
217.574 164.181 li
223.454 164.181 li
cp
217.574 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
223.454 200.061 mo
229.214 200.061 li
229.214 159.621 li
223.454 159.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
229.214 200.061 mo
223.454 200.061 li
223.454 159.621 li
229.214 159.621 li
cp
223.454 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
229.214 200.061 mo
234.974 200.061 li
234.974 173.181 li
229.214 173.181 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
234.974 200.061 mo
229.214 200.061 li
229.214 173.181 li
234.974 173.181 li
cp
229.214 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
234.974 200.061 mo
240.854 200.061 li
240.854 137.301 li
234.974 137.301 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
240.854 200.061 mo
234.974 200.061 li
234.974 137.301 li
240.854 137.301 li
cp
234.974 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
240.854 200.061 mo
246.614 200.061 li
246.614 159.621 li
240.854 159.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
246.614 200.061 mo
240.854 200.061 li
240.854 159.621 li
246.614 159.621 li
cp
240.854 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
246.614 200.061 mo
252.494 200.061 li
252.494 173.181 li
246.614 173.181 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
252.494 200.061 mo
246.614 200.061 li
246.614 173.181 li
252.494 173.181 li
cp
246.614 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
252.494 200.061 mo
258.254 200.061 li
258.254 177.621 li
252.494 177.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
258.254 200.061 mo
252.494 200.061 li
252.494 177.621 li
258.254 177.621 li
cp
252.494 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
258.254 200.061 mo
264.014 200.061 li
264.014 182.061 li
258.254 182.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
264.014 200.061 mo
258.254 200.061 li
258.254 182.061 li
264.014 182.061 li
cp
258.254 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
264.014 200.061 mo
269.894 200.061 li
269.894 186.621 li
264.014 186.621 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
269.894 200.061 mo
264.014 200.061 li
264.014 186.621 li
269.894 186.621 li
cp
264.014 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
269.894 200.061 mo
275.654 200.061 li
275.654 195.501 li
269.894 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
275.654 200.061 mo
269.894 200.061 li
269.894 195.501 li
275.654 195.501 li
cp
269.894 200.061 mo
cp
275.654 200.061 mo
281.414 200.061 li
cp
281.414 200.061 mo
287.294 200.061 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
287.294 200.061 mo
293.054 200.061 li
293.054 195.501 li
287.294 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
293.054 200.061 mo
287.294 200.061 li
287.294 195.501 li
293.054 195.501 li
cp
287.294 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
293.054 200.061 mo
298.934 200.061 li
298.934 191.061 li
293.054 191.061 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
298.934 200.061 mo
293.054 200.061 li
293.054 191.061 li
298.934 191.061 li
cp
293.054 200.061 mo
cp
1 /0 /CSD get_res sepcs
1 sep
@
298.934 200.061 mo
304.694 200.061 li
304.694 195.501 li
298.934 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
304.694 200.061 mo
298.934 200.061 li
298.934 195.501 li
304.694 195.501 li
cp
298.934 200.061 mo
cp
304.694 200.061 mo
310.454 200.061 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
310.454 200.061 mo
316.334 200.061 li
316.334 195.501 li
310.454 195.501 li
cp
1 /0 /CSD get_res sepcs
.24812 sep
f
316.334 200.061 mo
310.454 200.061 li
310.454 195.501 li
316.334 195.501 li
cp
310.454 200.061 mo
cp
316.334 200.061 mo
322.094 200.061 li
cp
322.094 200.061 mo
327.854 200.061 li
cp
327.854 200.061 mo
333.734 200.061 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 17 GetGlyphDirectory
36 <001C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB2
9ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D458220
8BD16D82> |
89 <001C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D916
2B37724F74F272B140D258652D102C2EAC46833C73F9> |
72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449
B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C
8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0E
EA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37
295284C077711C162623860AACA404F650F8D516970257> |
85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857
894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619
ADD420F549AB7C795751D32E8EE6> |
68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA
7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883
CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DB
BA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405
FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5
CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D
53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307
B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D1
77B5D88A> |
74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817
A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D
559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0
C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667
DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FB
D88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF
575C72F67F4BEBB98F8AFA57505EC9> |
19 <001C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3AB
C1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10
425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31
D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC6
0C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5
B546505C954A88> |
17 <001C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |
28 <001C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6D
EBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C
3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5
BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E
169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD30
72425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA2
7D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E1
7188994F16> |
24 <001C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BC
D9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB6
3F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200
B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49
372EF96DD9EB13A793559C13CFDFE477> |
86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B
5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214
E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEAB
D96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046
E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB
3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8
435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F
4172D53C8FCAF4D28F2B78D3A4BF03> |
54 <001C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E55
8E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051
BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB
391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B
13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A9
6A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8
FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE
450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |
71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D962
1458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6
DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB6
12941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF
13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |
39 <001C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2
474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EED
C4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF797
67633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489
068CBF65F37E7CD4C7284AEAF641D010DF> |
76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B
171C8A80AB> |
82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A
987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C84
6C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD
79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC09
9F518C54BB58C51D6FB6D0C8> |
25 <001C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F
12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA
30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF1936
28C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766F
A7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140
B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D
91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [14.3727 0 0 -14.3727 0 0 ]msf
139.094 61.4602 mo
(\000$\000Y\000H\000U\000D\000J\000H\000\035\000\023\000\021\000\034\000\030\000V)
[9.5867 7.04269 7.99123 4.88666 7.99121 7.99121 7.99124 8.05151 7.99124 3.99561 7.99121 12.0702 
0 ]xsh
139.094 79.3398 mo
(\0006\000W\000D\000Q\000G\000D\000U\000G\000'\000H\000Y\000L\000D\000W\000L\000R\000Q\000\035\000\023\000\021\000\026\000\031\000V)
[9.5867 3.99561 7.99123 7.99121 7.99121 7.99121 4.88669 11.9278 10.4892 7.99121 7.18634 3.19073 
7.99121 3.99564 3.19073 7.99121 7.90349 8.05151 7.99124 3.99561 7.99121 12.0702 0 ]xsh
.375 lw
1 lc
1 lj
10 ml
333.734 200.061 mo
37.6935 200.061 li
37.6935 2.66077 li
333.734 2.66077 li
333.734 200.061 li
@
37.6935 200.061 mo
37.6935 197.181 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
28.5737 215.061 mo
(\000\023\000\021\000\023)
[7.19213 3.59607 0 ]xsh
52.2135 200.061 mo
52.2135 198.381 li
@
66.7335 200.061 mo
66.7335 198.381 li
@
81.2535 200.061 mo
81.2535 198.381 li
@
95.7735 200.061 mo
95.7735 198.381 li
@
110.293 200.061 mo
110.293 197.181 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
101.174 215.061 mo
(\000\023\000\021\000\030)
[7.19214 3.59607 0 ]xsh
124.693 200.061 mo
124.693 198.381 li
@
139.213 200.061 mo
139.213 198.381 li
@
153.733 200.061 mo
153.733 198.381 li
@
168.253 200.061 mo
168.253 198.381 li
@
182.773 200.061 mo
182.773 197.181 li
@
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 1 GetGlyphDirectory
20 <001C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92F
E1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
173.654 215.061 mo
(\000\024\000\021\000\023)
[7.19214 3.59607 0 ]xsh
197.294 200.061 mo
197.294 198.381 li
@
211.814 200.061 mo
211.814 198.381 li
@
226.334 200.061 mo
226.334 198.381 li
@
240.854 200.061 mo
240.854 198.381 li
@
255.374 200.061 mo
255.374 197.181 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
246.254 215.061 mo
(\000\024\000\021\000\030)
[7.19214 3.59605 0 ]xsh
269.894 200.061 mo
269.894 198.381 li
@
284.414 200.061 mo
284.414 198.381 li
@
298.934 200.061 mo
298.934 198.381 li
@
313.334 200.061 mo
313.334 198.381 li
@
327.854 200.061 mo
327.854 197.181 li
@
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 1 GetGlyphDirectory
21 <001C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912
D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367
E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7
ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D
0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
318.734 215.061 mo
(\000\025\000\021\000\023)
[7.19214 3.59607 0 ]xsh
37.6935 200.061 mo
40.5734 200.061 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
28.2137 204.981 mo
(\000\023)sh
37.6935 191.061 mo
39.3735 191.061 li
@
37.6935 182.061 mo
39.3735 182.061 li
@
37.6935 173.181 mo
39.3735 173.181 li
@
37.6935 164.181 mo
39.3735 164.181 li
@
37.6935 155.181 mo
40.5734 155.181 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
21.0137 160.1 mo
(\000\024\000\023)
[7.19213 0 ]xsh
37.6935 146.181 mo
39.3735 146.181 li
@
37.6935 137.301 mo
39.3735 137.301 li
@
37.6935 128.301 mo
39.3735 128.301 li
@
37.6935 119.301 mo
39.3735 119.301 li
@
37.6935 110.301 mo
40.5734 110.301 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
21.0137 115.22 mo
(\000\025\000\023)
[7.19213 0 ]xsh
37.6935 101.421 mo
39.3735 101.421 li
@
37.6935 92.4207 mo
39.3735 92.4207 li
@
37.6935 83.4207 mo
39.3735 83.4207 li
@
37.6935 74.4207 mo
39.3735 74.4207 li
@
37.6935 65.5407 mo
40.5734 65.5407 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
21.0137 70.3402 mo
(\000\026\000\023)
[7.19213 0 ]xsh
37.6935 56.5397 mo
39.3735 56.5397 li
@
37.6935 47.5397 mo
39.3735 47.5397 li
@
37.6935 38.5397 mo
39.3735 38.5397 li
@
37.6935 29.6597 mo
39.3735 29.6597 li
@
37.6935 20.6597 mo
40.5734 20.6597 li
@
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
21.0137 25.5801 mo
(\000\027\000\023)
[7.19213 0 ]xsh
37.6935 11.6597 mo
39.3735 11.6597 li
@
37.6935 2.65973 mo
39.3735 2.65973 li
@
37.6935 2.65973 mo
37.6935 5.53973 li
@
52.2135 2.65973 mo
52.2135 4.45978 li
@
66.7335 2.65973 mo
66.7335 4.45978 li
@
81.2535 2.65973 mo
81.2535 4.45978 li
@
95.7735 2.65973 mo
95.7735 4.45978 li
@
110.293 2.65973 mo
110.293 5.53973 li
@
124.693 2.65973 mo
124.693 4.45978 li
@
139.213 2.65973 mo
139.213 4.45978 li
@
153.733 2.65973 mo
153.733 4.45978 li
@
168.253 2.65973 mo
168.253 4.45978 li
@
182.773 2.65973 mo
182.773 5.53973 li
@
197.293 2.65973 mo
197.293 4.45978 li
@
211.813 2.65973 mo
211.813 4.45978 li
@
226.333 2.65973 mo
226.333 4.45978 li
@
240.853 2.65973 mo
240.853 4.45978 li
@
255.373 2.65973 mo
255.373 5.53973 li
@
269.893 2.65973 mo
269.893 4.45978 li
@
284.413 2.65973 mo
284.413 4.45978 li
@
298.933 2.65973 mo
298.933 4.45978 li
@
313.333 2.65973 mo
313.333 4.45978 li
@
327.853 2.65973 mo
327.853 5.53973 li
@
333.733 200.06 mo
330.853 200.06 li
@
333.733 191.06 mo
331.933 191.06 li
@
333.733 182.06 mo
331.933 182.06 li
@
333.733 173.18 mo
331.933 173.18 li
@
333.733 164.18 mo
331.933 164.18 li
@
333.733 155.18 mo
330.853 155.18 li
@
333.733 146.18 mo
331.933 146.18 li
@
333.733 137.3 mo
331.933 137.3 li
@
333.733 128.3 mo
331.933 128.3 li
@
333.733 119.3 mo
331.933 119.3 li
@
333.733 110.3 mo
330.853 110.3 li
@
333.733 101.42 mo
331.933 101.42 li
@
333.733 92.4197 mo
331.933 92.4197 li
@
333.733 83.4197 mo
331.933 83.4197 li
@
333.733 74.4197 mo
331.933 74.4197 li
@
333.733 65.5397 mo
330.853 65.5397 li
@
333.733 56.5397 mo
331.933 56.5397 li
@
333.733 47.5397 mo
331.933 47.5397 li
@
333.733 38.5397 mo
331.933 38.5397 li
@
333.733 29.6597 mo
331.933 29.6597 li
@
333.733 20.6597 mo
330.853 20.6597 li
@
333.733 11.6597 mo
331.933 11.6597 li
@
333.733 2.65973 mo
331.933 2.65973 li
@
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 4 GetGlyphDirectory
41 <001C60D8A8C9B7D8BE1661AF70E1029B586475C590C02056C6BE2BB9C232
9F7F6ED1937D1E8A10> |
79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |
55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A59
5D3927> |
80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519A
D5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD
99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176A
FB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D5
5C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE3
7B> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
146.294 236.301 mo
(\000\)\000D\000O\000O\0007\000L\000P\000H\000V)
[7.90349 7.19214 2.87169 6.46519 8.02249 2.87167 10.8658 7.11319 0 ]xsh
gsave
209.654 222.261 mo
213.974 222.261 li
213.974 239.421 li
209.654 239.421 li
cp
eclp
%ADOBeginSubsetFont: GFNBAA+CIDFont+F5-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GFNBAA+CIDFont+F5)
%%Title: (GFNBAA+CIDFont+F5 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GFNBAA+CIDFont+F5 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-211 -1538 2638 2436} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1025 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB47F32422EDAB3B2C
7C2F968214656> |
5 <001C60D8A8C9B81F2C3A3A75E7A46C213B40FE2D4DC29107C923547084592
C4A23350B501E7F6459EFD909013A0224A28CE52964194C8D8BB404A66F7D6A9
0E8C1C5DC6AE4A12238141D8E70472DFFB0132CB34E3B6ADC12EB63EE9312374
E77343462603B9E0CCBFA595B87183D78D486118DA57973CDF68B2CFC2C425CD
E0E5334FA> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GFNBAA+CIDFont+F5-Identity-H /Identity-H 0 [/GFNBAA+CIDFont+F5] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YPTUZB+CIDFont+F5 /GFNBAA+CIDFont+F5-Identity-H findfont ct_VMDictPut
YPTUZB+CIDFont+F5 [12.9355 0 0 -12.9355 0 0 ]msf
209.654 236.301 mo
(\000\005)sh
grestore
YPTUYY+CIDFont+F1 [12.9355 0 0 -12.9355 0 0 ]msf
213.974 236.301 mo
(\000V)sh
gsave
220.454 222.261 mo
224.774 222.261 li
224.774 239.421 li
220.454 239.421 li
cp
eclp
%ADOBeginSubsetFont: GFNBAA+CIDFont+F5-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/GFNBAA+CIDFont+F5 1 GetGlyphDirectory
6 <001C60D8A8C9B81F2C3A2201FA92E1B4ACB99CEB46B29E9942CF2283DE58C
7FB9AA2A20A7A402A17F051411D4243EB749A000205BE85E52B5A32297C731F8
ACD6DFD8F79667772D0BBBD35B2CCD3D312854207412959D19B328F4EE01B018
71059C5C1A225F007BB1C97938150FF080017DD42AB5C9BEE95C03E6F1CC49CC
9B13DD6A534> |
!
end
end end
%ADOEndSubsetFont
YPTUZB+CIDFont+F5 [12.9355 0 0 -12.9355 0 0 ]msf
220.454 236.301 mo
(\000\006)sh
grestore
%ADOBeginSubsetFont: WGJAAA+CIDFont+F1-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/WGJAAA+CIDFont+F1 1 GetGlyphDirectory
38 <001C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210A
AD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B43
4C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047C
DFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F
32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D31
4851DE59> |
!
end
end end
%ADOEndSubsetFont
YPTUYY+CIDFont+F1 [0 -12.9353 -12.9599 0 0 0 ]msf
12.8497 121.815 mo
(\000&\000R\000X\000Q\000W\000V)
[-9.31085 -7.23349 -7.23346 -7.1131 -3.63745 0 ]ysh
1 /0 /CSD get_res sepcs
.58631 sep
YPTUYY+CIDFont+F1 [5.7491 0 0 -5.7491 0 0 ]msf
-24.8264 260.661 mo
(\000,\000Q\000>\000\027\000\027\000@\000\035\000 )
[1.43842 3.1965 1.59825 3.1965 3.27641 1.55342 1.55342 0 ]xsh
-24.8264 281.3 mo
(\000,\000Q\000>\000\027\000\030\000@\000\035\000 )
[1.43842 3.1965 1.59825 3.1965 3.27641 1.55342 1.55342 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
-.226341 281.181 mo
(")sh
gsave
5.41346 271.461 mo
11.0535 271.461 li
11.0535 284.781 li
5.41346 284.781 li
cp
eclp
%ADOBeginSubsetFont: XOSAAA+CIDFont+F3-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/XOSAAA+CIDFont+F3 1 GetGlyphDirectory
12 <001C60D8A8C9B7C3C9ED1E69A1AC6458227678E2AADFDDEBE0E6DEFA5F> |
!
end
end end
%ADOEndSubsetFont
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
5.41366 281.181 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 12078 80 <0001ffde0000050103a80042038c4016df0f01a606ab1dab2cbb1db91ebb
2ccd1dcb2c081207b8ffc0b31a233401b8ffc04045152334126f1f6f2e7f
1f7f2e8f1f8f2e9f1f9f2edf1fdf2e0a31081f40161642581f4016160258
0f40161642582e40161642580f40161602582e4016160258df38df3f023f
b8ffc0b3090e3438b8ffc04013090e341240090e34003435363738393a3b
3b3cbd029f029b029c001e0049ffc0400c1601161514131211100f0f0e41
0e029f029b029c001e0049ffc00016ffc00011ffc00012ffc00010ffc040
0c0f05262524232221201f1f1e410e029f029b029c001e0049ffc00016ff
c0000fffc00010ffc00011ffc0400c12053534333231302f2e2e2dba029f
029b029c400d1e4900004241403f3e3d3c3c3bba029f029b029cb21e490f
b9029f029a401c1e2d2a350107421a210a2a2104770a0742063534342525
150a0d0e0fb80257b5171640323516b8ffc0401b263516401e3a34cf16df
16ef16ff16046016701680169016041216b801f040111e201f301f021f40
140c3f1f40120b3f1fb80257b627122640323526b8ffc04024263526401e
3a34cf26df26ef26ff26046026702680269026042640140c3f2640120b3f
26b801f0b2002d2eb80257b23c103bb8ffc0401826359f3b010f3ba03bdf
3be03bf03b05cf3bdf3be03b033bb8ffc0402c5a2d3f3b403d3f343b4041
42343b804347343b40484b343b804c53343b405054343b405b5d343b1943
3f6c182b4e10f42b2b2b2b2b2b2b2b72715d2b4b5258b36f3b013bb902fe
004310f45d593c4dfd3c3cf62b2b5d5d2b2b2b435c58b52640160d3f26b8
ffc0b3161d3f26b8ffc0400d5a2d3f2640190f3f2640170e3f2b2b2b2b2b
593cfd2b2b5d3cf6435c58b51640160d3f16b8ffc04017161d3f1640190f
3f1640170e3f1640140c3f1640120b3f2b2b2b2b2b2b595d5d2b2b2b3cfd
3c3c003f3c103c103c3f3ff4ed10ed1139391112393945444b5258b9029f
029f45b0286144592b2b2b2b2b012b2b2b5db10602435458b90007ffc0b3
0b1b3401b8ffc0b20b1b34002b2b59012b2b2b2b2b2b313043794020181d
080d1c250c251b091e1d001d1e0807190b171d011d081a1d03180d1a1d01
002b2b012b103c103c2b2b2b8181015d435c58b9003fffc040180d163f22
800d163f31800d163f22400f123e31400f123e3fb8ffc0b20f123e2b2b2b
2b2b2b59002b2b435c58b90007ffc0b30d163f01b8ffc0b30d163f07b8ff
deb3141b3f01b8ffc0b2141b3f2b2b2b2b590071015d0115363633321617
363633321716151132161514062323113426232207060711321615140623
231134262322060711321615140623232226353436331122263534363301
2a3251352d582a356d3972475e403e3e4ac32223221d2535403e3e4ac323
23244631403f3f4ab94a3f3e41413e3f4a038c3a31252c2c2c2b3d5082fe
353a2d2d3902872f24121945fe633a2d2d3902872e252d43fe633a2d2d39
392e2d3901f23a2d2d39>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/m 80 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[34{/.notdef}rp /quotedbl 9{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /seven /eight 
/nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 
/G 11{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c 
/d /e /.notdef /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/.notdef /v /w /x /y /z 133{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
11.0537 281.181 mo
(media)
[5.60544 5.69792 5.60544 5.60544 0 ]xsh
gsave
39.1335 271.461 mo
44.7735 271.461 li
44.7735 284.781 li
39.1335 284.781 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
39.1337 281.181 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 10182 73 <000100950000049305110033014d4021071b171b271b371b04992601020f
10123300400b400c0219181716151413121110ba029a029b029c40151e49
400a4009400b400c0408090a0b0c0d0e0f1011410c029a029b029c001e00
49ffc0000affc00009ffc0000bffc0400c0c042c2d2e2f303132330001bf
029a029b029c001e0049ffc0000bffc0400c0c0209080706050403020100
ba029a029b029c40411e49244045473424404d53342440353a3424402d32
34246528211d0012642d3300642d2c2c1018301840185018601880180618
060f6409090264080a002b30f505b801ea400c2021302102211a352b0111
01b8025740201a1015780cfe1040140c3f6f109f10af10bf100400105010
bf10cf1004101934b80101b17c182b4e10f45d712b4df4e4103ced3c103c
4e10f65d4de4e4103c003fed3c10ed3f713c103cfd3c10ed3feded2b2b2b
2b2b2b2b2b00103c3c103c3c313000725d01112132161514062321222635
343633331123222635343633333534363332161615140623222726232206
151521321615140623026501244a3f3f4afd954a3f3f4a7a624a3f3f4a62
c9bf55df3f382913267f62664d013c4a3f3f4a02bffe0e392e2d39392e2d
3901f2392e2d394e86b11f382c2f3b07193d2d4e392e2d39>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/f 73 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 102 /f put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[34{/.notdef}rp /quotedbl 9{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /seven /eight 
/nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 
/G 11{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/.notdef /v /w /x /y /z 133{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
44.7738 281.181 mo
(flash)
[5.60544 5.69792 5.60544 5.60544 0 ]xsh
gsave
72.8535 271.461 mo
78.4935 271.461 li
78.4935 284.781 li
72.8535 284.781 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
72.8538 281.181 mo
(\000\014)sh
grestore
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
78.4938 281.181 mo
(131f08)
[5.60544 5.69792 5.51108 5.60544 5.60544 0 ]xsh
gsave
112.213 271.461 mo
117.853 271.461 li
117.853 284.781 li
112.213 284.781 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
112.214 281.181 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 8262 69 <0002ffebffdf04960511001e002a01904031050209090a0c03b608c608e7
08fa09041f02100c1f2410262f02200c2f242026eb26eb2afc06fc20ff24
0d2440090f3f26b8ffc04009090f3f24400a0b3426b8ffc040180a0b341b
4004221b40280a2608000e0f1011121314151617ba029a029b029c400d1e
4900001e1d1c1b1a19181716ba029a029b029c40191e490d200d280f8001
0101041e00222104070f0a28210a0b1fb802554014000710072007300740
07500706b00701e0070107b8ffc04009110a3f071a2c00250eb802574014
17001620163016cf16df16ef16ff16079f160116b8ffc04009110a3f1619
2b637c182b4e10f42b715d3c4dfd3c3c4e10f62b5d715d4ded003fed3f3f
ed3f113971111239382b2bb10602435458b50d400b103401b8ffc0b20b10
34002b2b5931304379401a292a2021050921051f1f0129091f1f01200622
1f012a08281f00002b2b012b2b81818100495479401026270b0c260c2823
04270b2523000c0d01103c2b002b81810049547940102324020324022223
052303252300020101103c2b002b8181002b2b2b2b5d015d007101113636
333200151400232226271523222635343633331123222635343633013426
23220615141633323601644b9b4fd50128fee6e7529847f04a3f40492323
4a3f3f4a0355b28180b2a09292a10511fe343131fedad0c7fef52a293239
2e2d390377392e2d39fc9a7fb0b07c719191>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/b 69 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[34{/.notdef}rp /quotedbl 9{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /seven /eight 
/nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 
/G 11{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/.notdef /v /w /x /y /z 133{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
117.734 281.181 mo
(labs)
[5.60544 5.69791 5.60544 0 ]xsh
gsave
140.293 271.461 mo
145.933 271.461 li
145.933 284.781 li
140.293 284.781 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
140.294 281.181 mo
(\000\014)sh
grestore
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
145.814 281.181 mo
(f08)
[5.60544 5.69792 0 ]xsh
gsave
162.733 271.461 mo
168.373 271.461 li
168.373 284.781 li
162.733 284.781 li
cp
eclp
YPTUZA+CIDFont+F3 [9.3423 0 0 -9.3423 0 0 ]msf
162.734 281.181 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: ONKBAA+CIDFont+F2 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUYZ+CIDFont+F2 gcheck setglobal} if
1 5762 43 <0001002d000004ab04bd004102fabb001202c7004302c6400c4200090a0b
0c0d0e10111112411e02a8029b029c001e0049ffc00029ffc0002affc000
09ffc0000affc00026ffc0001cffc0001dffc00020ffc00028ffc0002fff
c0000effc0000fffc0400c390d18191a1b1c1d1e1f2021ba02d8029b029c
400d1e49002a2b2c2d2e2f30313132ba02a8029b029c40271e494029402a
4009400a4026401c401d40204028402f40393f0f400e0d393a3b3c3d3e3f
404100411a02d8029b029c001e0049ffc00029ffc0002affc00026ffc000
1cffc0001dffc00020ffc00028ffc0000effc0002fffc0000fffc0400c39
0b0a090807060504030201ba02d8029b029c400d1e490019181716151413
121211ba02a8029b029c40231e494029402a4026401c401d40204028402f
4039400f400e0b2b2a2928272625242322ba02d8029b029c400d1e49003a
393837363533323231ba02a8029b029c40411e4912222c0012212c000f01
1f015f019f01df01050f011f013f014f015f019f01df01079f0101014047
35012b3419342a2a18023a39390a0a0908232222000041b80256401a311f
322f323f324f325f32053240110a3f321a43202121010102b80256400b12
c0110130110111194252b901df00182b4e10f45d713c4dfd3c103c103c4e
10f62b5d3c4dfd3c103c103c003f3c103c103c3f3c10e4e42f2b725d713c
ed435c58b521400f1e3f21b8ffc0b310153f21b8ffc0b20f1e3f2b2b2b59
10ed435c58b522400f1e3f22b8ffc0b310153f22b8ffc0b20f1e3f2b2b2b
592b2b2b2b2b2b2b2b3130014644464401435c58b9003effc0b3170e3f3d
b8ffc0b3170e3f3cb8ffc04013170e3f0740170e3f0640170e3f0540170e
3f26b8ffc0b3170e3f27b8ffc0b3170e3f28b8ffc04013170e3f1d40170e
3f1c40170e3f1b40170e3f3eb8ffc0b3190f3f3db8ffc0b3190f3f3cb8ff
c04013190f3f0740190f3f0640190f3f0540190f3f26b8ffc0b3190f3f27
b8ffc0b3190f3f28b8ffc04012190f3f1d40190f3f1c40190f3f1b40190f
3f2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5901211133
321615140623232226353437361711262635343633173216151406232311
211123222635343633173216151406071132171615140623232226353436
33330347fe4a204a3f3f4afb4a3f31184e36373f4ad14a3f3f4a2001b620
4a3f3f4ad14a3f37364f17313f4afb4a3f40492001f6fed7392e2d39392e
381f1001032205382a2e3901382e2e39fed4012c392e2e3901382e2a3805
fcde0f1f392d39392e2d3900>YPTUYZ+CIDFont+F2 AddT42Char 
YPTUYZ+CIDFont+F2 /CharStrings get begin
/H 43 def
end
YPTUYZ+CIDFont+F2 /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUYZ+CIDFont+F2*1 
[34{/.notdef}rp /quotedbl 9{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /seven /eight 
/nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 
/G /H 10{/.notdef}rp /S /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /.notdef /v /w /x /y /z 133{/.notdef}rp]
YPTUYZ+CIDFont+F2 nf
YPTUYZ+CIDFont+F2*1 [9.3423 0 0 -9.3423 0 0 ]msf
168.374 281.181 mo
(SampleHist1.eps")
[5.60544 5.69794 5.60544 5.60544 5.60544 5.69791 5.60544 5.60544 5.69794 5.60544 5.2308 5.69794 
5.60544 5.60541 5.69794 0 ]xsh
1 /0 /CSD get_res sepcs
.58631 sep
YPTUYY+CIDFont+F1 [5.7491 0 0 -5.7491 0 0 ]msf
-27.7064 298.341 mo
(\0002\000X\000W\000>\000\027\000\030\000@\000 )
[4.42797 3.27641 1.55343 1.55342 3.1965 3.27642 1.55342 0 ]xsh
gsave
-.22654 288.501 mo
5.41346 288.501 li
5.41346 301.701 li
-.22654 301.701 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HJCBAA+CIDFont+F6-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HJCBAA+CIDFont+F6)
%%Title: (HJCBAA+CIDFont+F6 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HJCBAA+CIDFont+F6 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-189 -1660 2638 2469} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1025 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A73DB6F0B6FADC4CED77615C6A4228677633F664FADBF38
B33C4C9F9802C> |
12 <001C60D8A8C9B7C3C9ED790854A050D3AE4E6B4573C72CF238D315C527> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HJCBAA+CIDFont+F6-Identity-H /Identity-H 0 [/HJCBAA+CIDFont+F6] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YPTUZC+CIDFont+F6 /HJCBAA+CIDFont+F6-Identity-H findfont ct_VMDictPut
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
-.226341 298.221 mo
(\000\014)sh
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UGXAAA+CIDFont+F4 Initial
ct_T42Dict begin
-0.121 -0.68 0.621 1.02
 256 array 0 1 255 {1 index exch /.notdef put} for  /UGXAAA+CIDFont+F4
Type42DictBegin
[<00010000000c000c000c000c4f532f32132e5b1a000000cc000000606376
7420aa0e65140000012c0000078c6670676d379d41d9000008b80000063f
676c79661e0c020e00005bfc00001f9c68656164dfe7637f00000ef80000
0036686865610aae01c400000f3000000024686d7478c59ba8c200000f54
00001cfa6c6f6361958e8c8700002c5000001cf66d61787012ce0b3b0000
4948000000206e616d65be2845c800004968000007cf70726570afc0175c
0000513800000ac367646972000000000000000000000000000304cd0190
00050008059a05330000011d059a05330000036100660212050502070309
020205020404e0002effc00078430000000900000000544d432000400022
007404e7fe7e000006a90267400001ffffff000003620492000000200015
04e700000492001b04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e
000004e70000fefdffff02d7000000540000005400000000000000000054
00540095005400540054014d005400540054006400d4006d009100970054
013301ce00a90040000f005400d4000301000158003c0093007700d50055
fff10054002100a300ef002c00390068fffe0011007f00fe017d00a30102
0002000f003800d300650090023c032b04eb0001002a013003ab0182002d
003c00540096001700cf0158002aff0a003c00b3021d023c0002005400cb
035f082cff30fff201c004c9ff6200a2013c02d604ae00cc00ed01220400
fe83ff8bff9bff9c000e00f4031dfdc3ff31ff6d0054005500600075007c
007f0080009e00cd0159023d02bfff89001100580065007f00b700cb012b
040004600012005200550084009800b900be00cf00d800e50101010f0128
018001d301d40500fdc4fec4ff49ff62ff6f0045004e00500080010f011d
01250141025a035a03ad03d7fde3fee0ff1e0011005400760078007b008f
009000ab00d700d900db0103020a0254025503ad001b003d005a00620091
0093009e00a900c900df01080134013a0140018601ac02760403fdc40003
0004001500390048005400640091009b00a300a500af00c400d000d100d7
00f100fe01030119012b0155015c017d0185018e019401a501ac01ae01eb
020502d80303038104c604ebfed6ff0aff9affa9001b001b001c00200029
002c0038004c006d00cd00ea0128012a012c013f01d2022b022c0301040c
fdfefe33ff47ff7fffc5ffd7002300270038003d00440045004d00570062
0079008300bb00c600cd00cd00ce00e600f701010103010a0112011d0120
012301520153017501ac01ad01ef01fd0216021d0238026c02b202d4032b
03cd045704aefdb4fe15feb2feeffeffffabffb0ffc3ffcc000200540036
003800430055005d00700073007c007f00b500bb00c500e400e900f50101
0106011f01280148014b0155019801ac01df01fc02000208027e02ac02ff
033d039003c904190498fe4efe6dfe98feb3ff34ff4d0001000300050019
00340034003a003c0055005900730082009100a300aa00ab00b300cc00d6
00ee0118011e013001490156015801600168016f01700171017b017c0185
01a901b401bb01d601db01ee020402060215022b022b02630282029302b4
02c402d602e40300035303580371037b039303b403d003e80410042c0430
044d04600479047a05000503061608ccfc17fc6dfd62fd9afdc3fe2efe44
fe6bfe8bfec1fed6fee2ff0bffbfffe500060030003c005900670073007d
007f0086008e009f00a900aa00d600e100e700eb00f100f200f501030109
011a011e011f012c013f01430149014d015601570159016601660168016a
0175018001ab01b201bc01c001c101c901cb01d201dc01ef02010215022e
022e023b023d025502660282029a02ab02b002d902d902f502f90326032c
03320333033e03600371038703880393039703dc03e50402041504310453
047f04c7050305640596059b05c405c805ea0610065b0054005400540054
00000000000000000000000003cc02c1043e036c00a00050020303ea02d2
023c017d02fb01a7021d01c102f5021d035003500243023b000201bb0048
006d0014079b06210621021400100760000000000299022d03570426030c
007400500000025a0286026000a601bc00fb02480152017603cd02a0025f
039b0492043e01d7007f02c10400020d01f600410041013e01a901d30071
02d6022d03af04ce00000000050803fc056d020dff8704e7050203d20000
043d010203ca015a01ed0150021601c1013b028e0023015a011001ed0023
0149003900d9004d00b90157003804e0038c024a02db0039006c009301c1
03cc02bb006c02bb01a200f2003800fe01720150019c0331007e01710054
0039006a0294002202700222007c005500f30182011500d700fb01ab0124
02660004030d026300d40259003c00d00112022e017e0034006d008b018a
002c01fd01c000cc02910036016503befc19fd280201fced01b1034800b1
01fb04c904c9020400fb01c1021d01300108014000e100a3009b005500c6
0021032600a900380005022c0003005d0060004c001102f5017c026c0069
019803e901a50241004f0065037302460196fef504410333004100ba0119
014306390800053c051d0434041504e7003e006700670000066804df0582
0067006703d303f4ff59ff21fe5f050efedc007a00d9004800db018b00b3
004800da0116015e015104ff024b04ffff5600ab02af04dcff17010c0121
00d1ff300149feb5013c0124ff200171ff0b01510086005e06a9fd99048b
04850475047c0000fffb007b00860092009a00c200d500a4001e00270039
004c0054005c00620069002d0030003200350038003e004200440049004c
00500056005a006000640066006e00710078009d00ac00b10040004b0055
005e00620066006a007100730077007b007e00820087008c0091009600a6
00d102aa029f0321028802c50276026900da00da03c70340015600d40489
047f005300240051011300690037003c001f008c008cffd3005a0029001b
010f0134007f00540054ffebffd6ffa8fdcf00a600a600920092064200eb
06430028004f01f6041a010540425554403f3e3d3c3b3a39383735343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514
131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b0
04262348482d2c452346236120b02661b004262348482d2c45234660b020
6120b04660b004262348482d2c4523462361b0206020b02661b02061b004
262348482d2c45234660b0406120b06660b004262348482d2c4523462361
b0406020b02661b04061b004262348482d2c0110203c003c2d2c20452320
b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920
b09051582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445
b01923442d2c2045b00325456164b050515845441b2121592d2cb0014363
2362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d
2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b003
61592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0
1243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a87
20b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0
022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c20
b0032545b019234445b01a23444565234520b00325606a20b00923422368
8a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b0
3f1b235961441cb114008a5279b31940201945208a54582321b03f1b2359
61442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d
2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4bb0645158
4569b00943608a103a1b212121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2b
b02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802692370
1020b802694520b0005058b00161593a2f182d2c21210c6423648bb84000
622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648b
b84000626023212d2cb4000100000015b00826b00826b00826b008260f10
161345683ab001162d2cb4000100000015b00826b00826b00826b008260f
1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b54
58381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54
b012435c5a58381b2121592d2cb012435c580cb00425b00425060c642364
6164b807085158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab9032603268a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b2020202436042b12401885458b2022002436042004b014b5258b2
020802436042591bb940000080885458b202040243604259b94000008063
b80100885458b202080243604259b94000010063b80200885458b2021002
43604259b12601885158b94000020063b80400885458b202400243604259
b94000040063b80800885458b202800243604259b12801885158b9400008
0063b81000885458ba000201000002436042595959595959592d2cb00243
54584b53234b515a58381b2121591b21212121592d00000100000006e666
7ac7d2145f0f3cf50809080000000000a325516100000000d19de3ffff07
fa9004fb082b0000000900010000000000000001000006a9fd99000004cd
ff07ff5a04fb00010000000000000000000000000000000304cd00670000
000004cd0000000001eb010a00bb00e400bb00fe01e1025d012d00e20090
012b00ba01cd00e600e500e400ab00c300d600c4011200d300e7011301cd
0138006200650094011300d700110057007f009e0058009f0080006b00e5
00ab005900800018002e006800b30068005800b9008f0053001000250050
006300d5023d00e3013c00e4000001bc0090002d00ab007e008000d7007d
005500bd00b400bf00bb0015006c0091002d008000ab00cf0092005b003b
00380065009500ed0195023c019400bb00110011007f0058002e00680053
00900090009000900090009000ab008000800080008000ba00ba00ba00ba
006c00910091009100910091005b005b005b005b00fc015100e4007c008f
016f00ab005900000000000401bb013f006500120050006d009000620094
0062005a00b0002b003600a700e101280126003d0010007000e601eb0018
008900b100bb00530063007f0065001100110068001100120091fff100b3
00db01fd01250090009b0095006300670007006b0254000e001300fb01cd
012b00e0003d0011005800110058005800e500e500e500e5006800680068
00530053005300ba013c0128013c013a020001b101ba013b01d4013c0056
00bb00b900cf00d500ed023cfffd00810063009500b3002d0090010e0176
01550163000000000000009f0080007d00e500b900cf007f00ab007f00ab
007effe502c40011009000110090009e007efffd00580080005800800080
00bb008000bb008000bb002e006c002e006c00680091005800ab005800ab
00b900cf008f0092008f00920053005b0053005b00d500ed00d500ed007f
0067005a006200b5011b009800d0007bffe50112011b000e0002017d0002
017d0002017d017d000200a9006500990090021d01000000021d021d0000
021d0000021d00000000000000000000017d021d017d017d000000000000
021d017d017d000000000000021d017d017d000000000000000000000000
000000000000000000000000000000000000000002670000000000000002
0002000f0002000f000200ae007c0026000300030002014100b800800002
006c009f010f005a0009001300000201012500bb014100020169016900ae
016f00110090007f00ab007f00ab0058008000580080005800800080007d
0080007d0080007d006b0055006b003e00e500bb00e500bb00e500bb00e5
00bd00ab00b4005900bf0092008000bb002e006c0080006c006800910068
0091005800ab00b900cf008f007a0053005b0053005b0053005b0053005b
002500380063009500d700110090001200100050007001cd002500380025
0038002500380063009501fd013c0088005a000c0011000b001b020801d4
01bb01080040fffc00130041fff6002affd400f2001100570065005800d5
006b00e50059000f0018002e00930068006400b300c4008f00630050001d
003c00e500630062011b008b01bb0057010400460156008b00b3020f009e
00410054004a0145009100ca00cf00570099004500750128005700910057
007500580011007f007f00b900e500e500ab0023000000110077002c0064
001100570057007f004a0058fffb007200280028007700230018006b0068
006400b3007f008f002c0063005000590029000400040002000200570081
0016000f00900080007b0098005a008000140090003a003a00780033001f
006b0091006b002d00ab00a6003c00770065004d004600210021004b0018
00a60082002400830080008e009800ab00cf00bd00ba00b40033ffee003e
0078003c006b007f0098002b003100680258025802580258025802580258
02580258021602580216022d00b50189023c038200aa01cc00d0009e0115
00a300a001770149009200680173009500b400c0006d00850176011c004f
00c000f200fa00de00a200c500ac00cc00a0007a0085008501bf00f7005b
017700950095ffedffed00c000cc00b900cc00b900d000d000d0009e0115
00a300a00167013a00680173009500b400c00085011c004f00f200fa00a2
00c500ac00cc00a00177009e00b400fa00ac0243018c0160012401c701c7
00fb0201000001dc019701dc01dc01a301dc01ca01db01d90164013f00f4
017f01540137010801070127009601f100e6024a01d101f3010d01270111
01450000000000000000000001ca02030201020301a201a401ab016d0152
0000019c016201600025002500000000000b0006000000000110009e0000
0000009000650003000300000000000a000a0000000000aa007000f00097
00f000f0009e009e00bf00bf00bf013f0090009000f0009700f000970183
01d501c701a801ca0000001d002b002b0000001d002b002b002b002b0000
001d00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000019c019c010a010a000000140201010a00cb0197
019700c400c001bc01f800aa007000000000020001f80025002500000000
01c80184002500250000000000250025000000000110009e000000000110
009e000000000110009e00000000019e0151019e01510090006500900065
000600060000000000060006000000000000000000000000000000000000
0000000c000a00000000000c000a00000000011a011c00000000011a011c
00000000000b00060000000000a600d60000000000b40038000000000108
00710000000001b201b20000000000fe008e0000000001f3018400000000
00c400c000aa007000aa00760000000000670099008200a1009c00d7009c
00d7021901d101dc01dc0061004c019c01db01ca010d024a01a30197005d
0020000501c701ca01ca01d501a8018301db01b201b2009c009c01ea01f5
01f50075006b01b501f401e30126026301bc01b0007f0041002601e001e3
01e301ee01c1019c01c7019e019e00d700d700c300ce00cd016a0174008e
00cd00bc0000013c00950089017f011100ee00b900bc00bc00c7009a0075
0186015d015d01be01be01bc019a01df00000025002500000000000b0006
0000000000f00097009e0000001d002b0000000001470147015800f300da
01f801f800ce0000006800910053005b01c10199019801c401cb01c001bb
01c501ab01b9012b01240118015e0144037d00c800000000019f01bd01a5
01c301b701b7012b012b012b01280128012801ff01ff01ff01ff01ff01c4
01a8012801ff01ff01ff01ff01ff01ff01ff01ff01ff01ff0142012b0142
012b00110090001100900011009000110090001100900011009000110090
001100900011009000110090001100900011009000580080005800800058
0080005800800058008000580080005800800058008000e500ba00e500bd
006800910068009100680091006800910068009100680091006800910068
0091006800910068009100680091006800910053005b0053005b0053005b
0053005b0053005b0053005b0053005b0063009500630095006300950011
009000e500ba006800910053005b0053005b0053005b0053005b0053005b
012f011400f50114007f0098fffb00140077007800770078006b006b0062
0095006200950050006500290046006b0055004200800068009101f4018c
015b014801bf01bf0148014801480177020001f800c400c000c400c000aa
007000250025000000000025002500000000002500250000000000250025
000000000025002500000000002500250000000000250025000000000110
009e000000000110009e000000000110009e000000000110009e00000000
0110009e000000000110009e00000000019e0151019e0151019e0151019e
0151019e0151019e0151019e015101970151019b01510090006500900065
009000650090006500900065009000650090006500900065000600060000
000000060006000000000006000600000000000000000000000000000000
00000000000c000a00000000011a011c00000000000b000600000000000b
000600000000000b000600000000000b000600000000000b000600000000
00a600d600a600d600a600d60005000500000000000300030000000000b4
00380000000000b400380000000000b4003800000000000a000a00000000
000a000a00000000000a000a00000000000a000a00000000000a000a0000
000001080071000000000108007100000000010800710000000001080071
0000000000fe008e0000000000fe008e0000000000fe008e0000000000fe
008e0000000000fe008e000000000110009e0000000001f3018401b101f3
0000000001b101f301b101c800c400c000c400c000c400c000c400c000c4
00c000c400c000c400c000c400c0000f001d00aa00700000000000c400c0
00aa00760000000000aa0076005a005a005a005a01d101f300e70158016d
01c001a001f801730014000a01ee021401ea01c0017301cc0174017401ad
003101be01be01ee01c000060006000000000000000000000000011a011c
00000000020101b20003000300030018009c00b7009c00d7009c00d7009c
00d7009c00d7009c00d70173012b016900850212021b0076008e00f9010d
005700570097007f007f0015002e001200250051008f0004008f00b3002d
00160057002d0057002d007f007f00abfffd00160057008000b500580072
00000080003b001500e500e3005900bf00bb004100150000006c0068003c
00910016002d00b300b900cf00c401560092005d0092008f003c0053003d
000000d500ed00a100a100a100db00ab00c400900092002d023c01e70065
01eb00080008000a00120008001100070007000a008000110090012f0011
0090001200100080007d0080007d005900bf006800910068009100a1008c
00b400080008000a0080007d000a002d002e006c00110090001100900058
00800058008000e500ba00e500ba0068009100680091005800ab005800ab
0053005b0053005b00b900cf008f009200ab00ab006b0055006b008600e7
00d500ed0011009000580080006800910128006800910068009100680091
006300950068007e002a002d00ab006a007e007e0080004e009000900068
00870087007d007d00ab00a4009100550067006700bd020f00e500bb00bb
011200110015001500150000006c003a0091004e00750091007300730073
00ab00db00dc00ab008e008e00cf00b100b100b100d100920092005b00b8
0057003b00380041009200ed00a7008c00ad00aa00b400aa00ab0068007b
008700ab006b00b9006e0098008000aa00b4000a000a000a000a0062000a
000a000a000a00a900ed01120112016d012d012a012a012d00e8010d0201
010701fd012501fd020e020e013b014000620094007a007a023601bb01bc
0236013c01bc01bc01ff01ff020e020e019801980198013c01a0010e0133
014d015901350140013c013c00db013c013cffe5013a0200013f01b1013b
013c023601d5013b013a013a01fd01250125031901bc01bc01980198013c
01e7020e019801980198013c00b100b1013f01b1020801ba01d40236013c
0121013c013c013a013a0128013c0000013c0128013c000000a700e6020e
013c01aa011e01c30200ffe501bc01bb0128012501080236013c006501d5
0198012801280128016a01b7000000000000002701280130015001260117
01390103011200d1012d013b00f5013501bb01bc023600b30047006d0000
006d0091003200bc00680091008c00cf009f009f0040008b008c00f00015
001500ab00ab006b007500b900b9008800c3008000ab008100e700bc0080
00ab00b4006800ab00f9005800280080003a00140096002100390000000c
0011001300000005002900500000000500790097001d004500680091001a
003b001a003b001e001f0040005f0014001400a700140096007f00b400b4
0159013c020d020d000100010028003a0057006600b3002d002500340072
0090007700780017002400110011000a000700570051007f00ab008f00a6
000c000c002900460005000f0005000f00e5fffb00140077007800230033
006b006b006b006b002900460018001f013a001100900011009000120010
0058008000420080fffb00140072009000c3008c0028003a0028003a0068
00910068009100810082002c0095002c0095002c00950029004600020018
0074007e0010001e0007000a0051005a000a0008000a0014008000ab008f
00a601a401a801dc021601b2019601d6012efff103ca01960196033a0145
00c501a001b701ba01dc0196014501d3019601a001a401dc01ba033afff1
01c20216012f012f0128012801dd017b012f001100900057002d0057002d
0057002d007f00ab009e007e009e007e009e007e009e007e009e007e0058
008000580080005800800058008000580080009f00d70080007d006b0055
006b0055006b0055006b0055006b005500e500bd00e500ba005900bf0059
00bf005900bf008000bb008000bb008000bb008000bb0018001500180015
00180015002e006c002e006c002e006c002e006c00680091006800910068
00910068009100b3002d00b3002d005800ab005800ab005800ab005800ab
00b900cf00b900cf00b900cf00b900cf00b900cf008f0092008f0092008f
0092008f00920053005b0053005b0053005b0053005b0053005b0010003b
0010003b002500380025003800500065005000650063009500d500ed00d5
00ed00d500ed0055009200380095009000d7006200620062006200620062
00620062000000000000000000000000ff1bff1b011b011b011b011b011b
011b000000000000000000000000008b008b008b008b008b008b008b008b
000000000000000000000000ff1bff1b020d01e501a0019601a00196010a
010000000000000000000000000000010001009100910091009100910091
00000000ff9cff9cffc4ffc4005700570057005700570057005700570000
ff74ff74ff1b007500750075007500750075007500750000ffecff56ff56
ff7eff7eff1bff0700620062011b011b008b008b018001ab009100910057
005700750075006200620062006200620062006200620000000000000000
00000000ff1bff1b008b008b008b008b008b008b008b008b000000000000
000000000000ff1bff1b007500750075007500750075007500750000ffec
ff56ff56ff7eff7eff1bff07006200620062006200620062006200110011
000200020011020d0236020d01280128008b008b008b008b008b00020002
00020002006b01be01be012801120114011b011b0100010000e500e50002
000201be01be0128005700570057005700ca00ca00570057006300630002
00020000010801080228007500750075007500750002000200020002003c
0228020d0099006b000000000000000000bd00b400260112003a00e60021
002101a201a201e401e401b101bc013b013b012801cd01e901e901e901e9
013c013c014901e4020e013a01bd01e401e40118020e00000000000000b3
002d003b002b002500cf00ab00cf00cf00cf009000b70101009e00cf001f
003a00910082009100ab0065002301240091009100a60083008300a60056
0099001800aa003b003800ed009000b000910098003b006b00a6001d0033
00e100d601110111011601170117010801070166011400fb011700d400f1
00e70112014b014c01360123010b00dd01280128010300d200fe01030130
01350131013101030150012800d1013b0126013c0126012600fe013b0117
014c00d700f50136015900fd01480120012a0150012d011700f5015900fd
01310120012a000000000000000000000190011a018601920179013b015d
024a01be021a015b019e0151009000650000000000000000003a000d000a
001e002a001d0016001e0090012d012d012d002b00b3003f000000000000
000000140000007f0018001f000b004700470011007f00ab0080008f00cf
00ed0078038b01a2011b01a000000023007f007f007f007f009801a40216
02150177025800dc019a01e201bf01bf01cd01be01da012a002500250000
000000250025000000000025002500000000002500250000000000250025
00000000002500250000000000250025000000000110009e000000000110
009e00000000019e0151019e0151009000650006000600000000011a011c
00000000011a011c00000000011a011c00000000000b000600000000000b
000600000000000300030000000000030003000000000003000300000000
01b201b20000000001b201b20000000000fe008e0000000000fe008e0000
000000fe008e000000000108007100000000009000650090006500060006
000000000000004500be0000003c0000009b005f0059005700ed004e0119
00b5000000e300e4002d00560036002d007e00d7000f00bf00bb0015006c
002d00ab00cf00b1003b006500ed005a002a007e003f00380090000700bd
00ab00b10000008c01030139010f01240131016401640103011e01500230
0175017501620173013c00df00c400d100d5011e0114012601140154014e
013b011701480113011100f5017101710171013401430126012601ec013c
01cd01280130012601350135008000100058007f00ba0062006200620062
00620062006200620114011401140114010c010c010c010c005700570057
0057005700570057005701050105010c010c0057005700570057009c00d7
00bd00b0002a0053000f0058008000ab00b400540080000f00ab00630095
00ab00ab00ab00bb007f0098005000650050006500720090002300330157
01570157015700c100c1019e01e40118000000cf00ab007400bb00700088
005800900092006b0055005900bf00d500ed0078006b006b007b01c601e0
012c013c013c013c0080002e0080017f0176015501630178016801800178
0178018001250068008000250038007500e20068003b0005001a01cd012d
01e101e1017d017d01eb01eb01eb013c001401c701b601b80178016601ad
01ba01ba009000e40079007900090030000f021401f801cc01f501e901d2
01d501d101d101da01e601db01d601d901db01b5021201ff01fa0110009e
000000000110009e000000000006000600000000009000650110009e0000
000001140102010100ef00aa00700000000000aa00700000000000aa0070
0000000000c400c000c400c0002f005a002f005a0110009e000000000006
000600000000000600060000000000b400380000000000470016003e0017
0150004d002c002a00450155018401f701c401f700aa0076000000000003
000300000000000300030000000000aa00700000000000aa007000000000
00aa007000000000019800b1005f008f00a00052003a00590113000000b7
0064000b0009001d000e000b000e0059009e000f00070008000b0064006b
006b005500d700d700b50031007500e200e20032000400180011001f0012
00730091012a016d00f500b900d500000000000001bb01a001dc00000197
016701dc01dc000001a3000001dc000001ca000001db000001f901910191
0191018c01e801f401e90170017000a800fc00fc0059002f0019001b0019
001b0019001b0019001b0097002b00000097002b00000025002500000000
0110009e00000000000c000c000c0000000b00060000000000a600d60000
0000010800710000000001b201b20000000000aa00760000000000aa0076
000000000081005900c400c00103010301c601d501cb01a301c201ac0222
01c701ad022201c701ad01900150019001cc019c01de01de020102010201
02010199015901c301a4009c00d701c701c7000000000000000000000000
00000000000001c70108019701f00215011500a300a000a0021601980053
0076005d0019008200af008200520027004400a90092003b0049005400c8
009f0019005b001500b70017009c005300aa001100a400370053001900b7
0071009300ec005a00090068009901c1019701a1013e01bc00e4006d0014
00940043006e004f0057009c007100400059006c011dfffd0088005d0055
00dd008c0096005a00f7ffe100fa006c0142003200f2008b005b00780014
006c007d00bd0014003500910085000001cd00bc00080008003700100010
00100016001000b3001400000037ffca002500250000000000b3019e0151
000000000000000000030003000000000170022a0090006501d000abffba
ffff000000000025004300230033000e000e000e000e000f0057001200a9
00c200000000003700370037003700370037003700370037003700370037
00370037003700370037005d005d017e0203020302da02da02da02da02da
03e603e603e603e603e603e603e603e603e603e603e603e603e603e603e6
03e60520052005200520052005200520052005200520052005ef05ef05ef
05ef05ef05ef05ef05ef05ef05ef05ef05ef05ef05ef06ed07bc07bc086a
090909b709b70abe0b2b0b2b0b2b0b810cf40cf40cf40dd20dd20dd20f2a
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce0fce
0fce0fce0fce0fce0000000100000e7a004700030000000000020010002f
0056000003ea0ac3000000000000000e00ae0000000300000000021a0000
0000000300000007006e021a0001000000000000010d0288000100000000
0003001103950001000000000004001103a60001000000000006001103b7
0001000000000007003703c80003000104090000021e03ff000300010409
00010022061d0003000104090002000e063f00030001040900030022064d
00030001040900040022066f000300010409000600220691000300010409
0007006e06b300a90020003200300031003500200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0020000d000d0048
006500620072006500770020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200063006f
0070007900720069006700680074002000a9002000320030003000330020
002600200032003000300037002c002000520061006c0070006800200048
0061006e0063006f0063006b002000260020004a006f0068006e00200048
007500640073006f006e002e002000540068006900730020006c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
006900730020006f00700065006e00200073006f00750072006300650020
0073006f00660074007700610072006500200075006e0064006500720020
0074006800650020004d004900540020004c006900630065006e00730065
003b002000730065006500200065006d0062006500640064006500640020
006c006900630065006e0073006500200064006500730063007200690070
00740069006f006e00200066006f0072002000640065007400610069006c
0073002e0043006f007500720069006500720020004e0065007700200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002ea92032303135
20546865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c
205269676874732052657365727665642e200d0d486562726577204f7065
6e54797065204c61796f7574206c6f67696320636f7079726967687420a9
2032303033202620323030372c2052616c70682048616e636f636b202620
4a6f686e20487564736f6e2e2054686973206c61796f7574206c6f676963
20666f72204269626c6963616c20486562726577206973206f70656e2073
6f7572636520736f66747761726520756e64657220746865204d4954204c
6963656e73653b2073656520656d626564646564206c6963656e73652064
65736372697074696f6e20666f722064657461696c732e444d434745432b
434944466f6e742b4634444d434745432b434944466f6e742b4634444d43
4745432b434944466f6e742b4634436f7572696572204e65772069732061
2074726164656d61726b206f6620546865204d6f6e6f7479706520436f72
706f726174696f6e2e00a900200032003000310035002000540068006500
20004d006f006e006f007400790070006500200043006f00720070006f00
72006100740069006f006e002e00200041006c006c002000520069006700
6800740073002000520065007300650072007600650064002e0020000d00
0a000d000a0048006500620072006500770020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200063006f0070007900720069006700680074002000a90020003200
30003000330020002600200032003000300037002c002000520061006c00
700068002000480061006e0063006f0063006b002000260020004a006f00
68006e00200048007500640073006f006e002e0020005400680069007300
20006c00610079006f007500740020006c006f0067006900630020006600
6f00720020004200690062006c006900630061006c002000480065006200
72006500770020006900730020006f00700065006e00200073006f007500
720063006500200073006f00660074007700610072006500200075006e00
640065007200200074006800650020004d004900540020004c0069006300
65006e00730065003b002000730065006500200065006d00620065006400
64006500640020006c006900630065006e00730065002000640065007300
6300720069007000740069006f006e00200066006f007200200064006500
7400610069006c0073002e0044004d0043004700450043002b0043004900
440046006f006e0074002b004600340052006500670075006c0061007200
44004d0043004700450043002b0043004900440046006f006e0074002b00
4600340044004d0043004700450043002b0043004900440046006f006e00
74002b004600340044004d0043004700450043002b004300490044004600
6f006e0074002b004600340043006f007500720069006500720020004e00
65007700200069007300200061002000740072006100640065006d006100
72006b0020006f006600200054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
2e00ba0054ffc003c0b2553340b803c0b23a3340b803c0b30e243280b803
c0b30b0d3280b803c0b209333f412f03c0007003c000af03c000cf03c000
04005f03c0007f03c000af03c00003001f03c0003f03c0005f03c0008f03
c0000400a003bb00b003bb00c003bb00d003bb000400a003ba00b003ba00
c003ba00d003ba0004003f03b8000103b703b6b2241f40b803b4b3192432
ef411a03b300ff03b300020391038b0021001f035e038b0021001f035f03
8b0021001f038f038b002a001f0390038b002a001f038d038bb23b1f0f41
09038b000100ef038b00ff038b0002ffc0039cb2474f32b9ffc0039cb237
3c32b9ffc0039bb2474f32b9ffc0039bb3373c321f4119039c00b0039c00
c0039c00d0039c000400ef039c0001001f039b00b0039b00c0039b00d003
9b000400ef039b0001ffc0039cb2212932b9ffc0039bb2212932b9ffc003
9cb20f1632b9ffc0039bb20f1632410a035903560032001f035803560032
001f03570356b2321fbf41600355000100af0355000100a003540001008f
03540001005f03540001004f03540001007f03550001007f03540001006f
03550001006f03540001003f03550001003f03540001003f03540001002f
03540001002f03540001001f03540001000f03540001035203530029001f
0351034a0029001f035003450025001f034f034a0025001f034e03490025
001f034d03470025001f034c034a0018001f034b03450012001f034a0346
0018001f034903450044001f034803460044001f03470346b2441f304170
0346005f03450002000f0344001f0344002f0344003f03440004000f0344
008f034400a0034400df03440004005f0344007f034400cf03440003002f
03440001034403440343034303410341000f0340001f0340002f03400003
03400340033f033f033e033e000f033d0001033d033d0040033c0001001f
033c002f033c003f033c004f033c005f033c00c0033c00d0033c0007033c
033c00200335003003350040033500500335006003350005000f032c002f
032c008f032c0003032c032d0024001f0321028c0014001f0320028c0014
001f031f028b001e001f031e028bb21e1f40410902b4005002b4006002b4
007002b4008002b4b205120f4114028b001f028b002f028b004f028b005f
028b007f028b009f028b00af028b0008003f028b004f028b400b023f023f
034f024f030440b80329b33c3c3240b80329b333363240b80329b31c1d32
40b80329b30c1a320f41720329007f0329009f03290003000f0329002f03
29003f03290003000f0329001f0329000200af032700bf032700cf032700
df03270004000f0327004f0327005f0327008f0327009f032700af032700
0600bf032700ef032700ff03270003006f0327007f0327008f0327009f03
2700af03270005000f0327001f0327002f0327004f0327005f0327000500
0f0328002f0328005f0328007f032800af0328000500df03280001000f03
27000f032800500328008f032800bf0328000500df03220001008f032200
01003f0322004f03220002002f0322003f03220002000f0322001f0322b2
02090fb8028bb2013a0f413f028c004f028c0002000f028d002f028d003f
028d0003001f028b0001000f028b0001002f028b0001000f028c002f028c
003f028c004f028c008f028c00af028c000603b903b90329032903270327
03280328032203220321032103200320031f031f031e031e02900290028f
028f028e028e028d028d028c028c028b028b4014af2bbf2b025f356f357f
358f359f35af35bf3507bb0261026102600260400a001616000000121108
1a41100204005c000d01fa005c000d01ad005c000d0172005c000d014000
5c000d0117401a5c0de45c0dc85c0d995c0d955c0d585c0d4e5c0d465c0d
2f5c0db8016240172b0ddb2b0d902b0d562b0d362b0d352b0d332b0d292b
0d411101590157000d00be0157000d00420157000d00320157000d002201
57000d001d0157b20d0009bc015b00210801001f0127b421811fe521b804
01b21f8321b80801b21f8221b80401b21f5b21b80401b21f3b21b80801b6
1f3021671f2c21b80401b21f2621b80401b21f2421bd0401001f005501ac
0007012b402c07c9075f07400739072e072d072807270723071f07140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8
010a515ab005234201b0124b004b544218b0372b4bb807ff52b0382b4bb0
09505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0
124358b90001012c858d1bb90001012c858d59594bb0095058b104018d8d
590016763f183f123e113946443e113946443e113946443e113946443e11
394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b2b18b0372b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb804
0153205c58b9023802364544b90237023645445958b90a800238455258b9
02380a804459594bb8040153205c58b9002002384544b900210238454459
58b90a800020455258b900200a804459594bb8040153205c58b9001e0237
4544b90025023745445958b90a80001e455258b9001e0a804459594bb804
0153205c58b13d214544b1212145445958b90a80003d455258b9003d0a80
4459594bb8040153205c58b167214544b1212145445958b90a8000674552
58b900670a804459594bb8030153205c58b121214544b1212145445958b9
07e00021455258b9002107e04459594bb8030153205c58b121214544b11e
2145445958b907e00021455258b9002107e04459594bb8030153205c58b1
21214544b1252145445958b907e00021455258b9002107e04459592b2b2b
2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b01b9004a01d6b1437a456523456023456560234560b0
8b766818b080622020b9004301d64565234520b003266062636820b00326
6165b801d6236544b043234420b14a7a4565234520b003266062636820b0
03266165b07a236544b04a2344b1007a455458b17a406544b24a404a4523
614459b347612aad456523456023456560234560b089766818b080622020
b12a614565234520b003266062636820b003266165b061236544b02a2344
20b147ad4565234520b003266062636820b003266165b0ad236544b04723
44b100ad455458b1ad406544b247404745236144594b5342014b5058b108
004259435c58b108004259b3020b0a124358601b2159421610703eb01243
58b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d
412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b21
1bba01a80400000b2b59b0102342b0112342001845694445694473731845
694445694445694445694445694445694445694445694445694445694445
69444569444569444569444569447373737373745e735e73737373747373
7473737374757373742b2b2b2b007300737400435c58410c001f028b001f
028d0002000f028b000f028c000f028d000373735974002b2b2b2b2b7375
004569447374456944734569444569444569447345694445694445694475
74737301732b2b2b2b2b2b2b2b2b2b2b2b00737373737373737373737373
73737373732b2b2b012b002b012b002b017375007375012b2b002b2b0073
752b2b2b2b2b2b0173012b012b73017300737374752b2b2b2b2b2b0000>
[8093 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 3038 68 <00020090ffdf045603800028003601624051aa07a41faa2e032607251f3b
047413771a761b8014851a9214951aab07a014a41aae2fb507bc0eb114b4
1ab91ecb0ef431150a0119012a01039a11941a027b2e8a2e9b2eaa0eab2e
c531d531e531082822b802ae401a252f21252522212228121d1317293621
0036290103330c092c36b801e0405a018828000a3321030b0921002c102c
702c032c293b0c0c28149c10211d073321030b0d00202021400d163f0f21
012f213f214f215f219f21af21bf21df2108211a38178f302106400d163f
6f069f06bf06df06040619372abb18b8012c852b4e10f45d012b4dfde64e
10f65d71012b3c4dfd3c003fed3feded12392fed2f5ded3fed3f3cf4ed11
12391217390111123939123911390010fd3d12392f180110f5f4c4313000
4bb019534bb024515a58bf0007fff80034fff00035fff00019fff4b31208
2e0838383838383859005d71004bb00b534bb014515a58bb001efff00013
ffc038385900715d015d2135062322263534363332161735342623220706
232226353437363736333216151133321615140623032626232207061514
16333236370358b7d097aae0d73a884f808062b1200910170a0e639c509f
b2701f1a1a1fc53b8449b7674e77726dbb63799a996f7ab60f1088456639
0a1812110a0f1a2a9d63fdd41713121801a211104f3b524c68575f00>UGXAAA+CIDFont+F4 AddT42Char 
1 3960 71 <0002007effdf04ab04e7001e002a00e1b6492a682a020802b802ae400e00
0501052f010505020122081e18b802ae40101b2f171b1b1817221e0a1622
28095d0ab80163b328210c16b8016340202221141e000c0b140700000001
171f09208001010f0101011a2c252180100110b8018cb32b2a8018b8012c
852b10f671ed4e10f65d714dfd3c3c103c003f3f3f103c10ede410ede4f4
1112393910fd3d12392f180110f5f4c40010fd3d12392f180110f55df4c4
31304bb016534bb024515a58b30e081208383859004bb00c534bb024515a
58b9002affecb2201427bafff80026ffe7b3230824193838383838385900
5d0111333216151406232335062322262635343636333217112322263534
36331334262322061514163332360402701f1a1a1fc592e172d17979d173
dc96701f1a1a1f70d89596d8d89695d804e7fb6d17131218a7c879e07778
df7ac801da18131218fcc8a0dcdca09fdddd>UGXAAA+CIDFont+F4 AddT42Char 
1 4308 72 <00020080ffdf042f03800019002000d040690a1699150232024202520263
02c602c613ca19da12da19dc1be318e51ffa160d191c2a1c3402381e4a1b
4c1f5c1b5a1f6f1b6c1f7e1b8c1b991c991eb7050f7516ba1cc403c412c9
1cc91e0608c5111a2020000101111d2117070421110b0c541a3ba0000170
000100b801e5401722203b013ba014016f14bf14cf14df14041419212aac
18b8012c852b4e10f45d714deded10f65d71ede4003fed3fed12392f3cfd
3c10ed3130004bb00c534bb024515a58b2161406b8fff0b41b141f1e02b8
ffec383838383859005d71015d7101211616333236373633321615140706
0623220035340033320007262623220607042dfca816e5a95ece41130e10
181030f581d8fedf010fc8ce010a5719d59393d41a019da3c73e330f1911
11103257011bc9b70106fef3818baeac8d00>UGXAAA+CIDFont+F4 AddT42Char 
1 5500 76 <000200bd0000041605110003001c007f402a221932194019521963197419
841907130d10581414220d060c09580505220c161c19951515221c03c502
b80194b61c060d0c0a0001bb015f0003000201e0400e04040520154f1401
14191d517f182b4e10f45d3c4dfd3c10fd3cfd3c003f3c3ff6ed10ed0110
f5d43c0010ed0110f5d43c0010ed0110f5d43c3130015d01152335131121
3216151406232122263534363321112322263534363302907c7f014a1f1a
1a1ffd181e1a1a1e014af51e1b1a1f0511d9d9fe51fcf217131218181213
1702b91812131800>UGXAAA+CIDFont+F4 AddT42Char 
1 5890 80 <00010015000004bf03800046022a403c0f370f380e390f3a0f3c0f3d0f40
0f430f450912260c360cb41bb22c042701360102551c6207621c7407741c
053607321c4507451c5507053008373db802ae400edf3a013a463e3a3a3d
3e2237150fb802ae401e2012015012d012e012f012040012101240120312
460e12120f0e2215251fb802ae4010002210220222461e22221f1e222536
30b802ae4010003310330233462f3333302f22364640b802ae4065df4301
43463f4343403f222d2f061e262e2d281d1c0601072a37403b0046062a21
031a21090903073736362525150a0d0e201716401f35301680160216fc26
1d1e202726401f35302680260226fc3e002f203f3e400d163f003ebf3ecf
3e033e19472aad182b4e10f45d012b3c4dfd3c10f45d2b3cfd3c10f45d2b
3cfd3c003f3c103c103c3f3c10ed10ed3f3ced1112173901111239123900
fd3d12392f180110f55df4c40010fd3d12392f180110f55df4c40010fd3d
12392f180110f55df4c40010fd3d12392f180110f55d5d71f4c40010fd3d
12392f180110f55df4c4b10602435458b90006ffc0b316243401b8ffc0b3
1b243401b8ffe0b2111a34002b2b2b59313043794020282918190a0c0405
0b252904271f010506190a171f0128052a1f01180c1a1f01002b2b012b10
3c2b2b81818181005d5d004bb01b534bb024515a58410a000affee0004ff
ee0007ffda0006ffda0001ffd338383838385900710171435c58b90007ff
c0b3161a3e06b8ffc0b3161a3e01b8ffc0b2161a3e002b2b2b59015d1315
363332161736363332171615113332161514062323113426232206071133
321615140623231134262322070607113332161514062323222635343633
331123222635343633e86b6c41622138733a5b3647471e1a1a1e9b4e332e
6641461e1a1a1e9b4f312d2c3d43471e1a1a1ee21e1a1a1e47471e1a1a1e
03625573454646453b4c5afdb517131218029740544565fdd31713121802
9143571d2964fdd3171312181812131702b918131218>UGXAAA+CIDFont+F4 AddT42Char 
1 0 0 <00020067000004670500000300070046b10607b8010cb40201000504b801
0cb403000a0605b8010cb60303021a090704b8010cb6010019084f7b182b
4e10f43c4dfd3c4e10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111
25211121670400fc2003c0fc400500fb002004c0>UGXAAA+CIDFont+F4 AddT42Char 
UGXAAA+CIDFont+F4 /CharStrings get begin
/a 68 def
/d 71 def
/e 72 def
/i 76 def
/m 80 def
end
UGXAAA+CIDFont+F4 /Encoding get
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 109 /m put
pop
end
%ADOEndSubsetFont
/YPTUZD+CIDFont+F4 /UGXAAA+CIDFont+F4 findfont ct_VMDictPut
/YPTUZD+CIDFont+F4*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 3{/.notdef}rp 
/m 146{/.notdef}rp]
YPTUZD+CIDFont+F4 nf
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
5.41366 298.221 mo
(media)
[5.60544 5.69792 5.60544 5.60544 0 ]xsh
gsave
33.4935 288.501 mo
39.1335 288.501 li
39.1335 301.701 li
33.4935 301.701 li
cp
eclp
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
33.4937 298.221 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: UGXAAA+CIDFont+F4 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUZD+CIDFont+F4 gcheck setglobal} if
1 4626 73 <000100d70000045a04e7003400cb4025400c50058005830c8131a00cb20c
b42bc22bd42b0a17080f090cc810102209342e00310131b80204b6000022
2e020805b80140401a0101220824282200255d29211d00001220192e2d18
0609080a22b8018c400a36002c01201acf100110b80195400d2f15401570
15d0150415193575b901cc00182b4e10f45d4df45d3cfd3c3c10e6003f3c
3f3c3c3cfd3c3ffde401111239390010ed0110f5d43c0010ed0110f55dd4
3c0010ed0110f5d43c31304379400e2a2b1b1c2a1c2c1f002b1b291f0100
2b012b8181015d0111213216151406232122263534363333112322263534
363333353436333217161615140623222726232206151521321615140623
022f01711e1a1a1efd6f1e1a1a1ecbb61e1a1a1eb6ac8e77873315181408
1397686e7701891e1a1a1e030dfd47171312181812131702b9181312187f
6a9c16081612121703176c457f1813121800>YPTUZD+CIDFont+F4 AddT42Char 
1 4974 75 <000100550000046d04e700380172402d991afb2002040115016406750690
019402a001a402b001b3020aa506a607b405b507c607d807df1a071a0811
17b802ae40100f141f1402145c18141417182211292fb802ae400b2c5c30
2c2c2f302229100ab802ae400e000d010d5c090d0d0a0922102822b802ae
400b255c212525222122283832b802ae4023352f31353532312238012029
1c210429282811111038000407100a08092019df180118b802a3400b3a00
212031bf30cf300230b801ebb339476118b8012c852b10f65d3cfd3c10f4
5d3cfd3c003f3f3f103c103c103c10ed11393910fd3d12392f180110f5f4
c40010fd3d12392f180110f5f4c40010fd3d12392f180110f55df4c40010
fd3d12392f180110f5f4c40010fd3d12392f180110f55df4c4b106024354
58b90001ffc0b31b243401b8ffe0b2111a34002b2b593130437940101a1b
050706251b05191f011a071c1f01002b012b2b8181004bb012534bb02451
5a58b90006fff4b5200c1f141e163838383859015d00715d011136363332
161615113332161514062321222635343633331134262322070607113332
161514062321222635343633331123222635343633015250935b62895c5e
1f19191ffeef1f1a1a1f5e83755c412f6c5f1e1a1a1efeee1e1a1a1e5f71
1e1a1a1e04e7fdfb5747458f4ffdf7171312181812131702035b7a2d2077
fdec1713121818121317043e18131218>YPTUZD+CIDFont+F4 AddT42Char 
1 5718 79 <000100bb0000041404e70018005d4034621573158315030f090c58101022
09020805580101220812181595111122180009080a0001201110104f10bf
1003101919517f182b4e10f45d3c4dfd3c003f3c3fed0110f5d43c0010ed
0110f5d43c0010ed0110f5d43c3130015d01112132161514062321222635
3436332111232226353436330291014a1f1a1a1ffd181e1a1a1e014af21e
1b1a1f04e7fb6d1713121818121317043e1813121800>YPTUZD+CIDFont+F4 AddT42Char 
1 7076 86 <000100cfffdf03fe0380004401f14088143f1c4102124c0059006944ac20
ac37a138cc13c942de13d616d63edb42eb13e434e842fc13f434f842120b
130616053e09421f131516153e1b428b229534bb0f0b57135a3869386a3b
7a387e3b8938893ba514b2140a8e3bb51f0251082b29232631403d3c341a
180f0e07150c390034323023042e360f0e0c030a000311193b3d3d211121
430ab80135b403202e012eb80196401c26362121003b075539214f1e5f1e
6f1e031e1a463154233b29152140b8ffc040160f193f40596f2901291945
43070306260a210b5e8018b8012c852b003f3f3f3f014e10f45d4df4012b
ed10fde44e10f65d4dfdfded0010ed10ed5d10ed10fd11392fed11123912
17391112173901111239121739111239391239313043794038374212201c
251325173e151f003b1b391f013720391f011242151f00163f181f001718
3e3d3a1d3c1f011b1a3b3c381f361f001441111f01002b2b103c103c2b10
3c103c2b012b2b2b2b2b2b8181004bb011534bb024515a58b43b14340a1c
bcffe70017ffec0044ffecb23e1437b8ffecb322163c1c38383838383838
383859015d7100715d435c58b90038ffec40090d163f3b140d163f38b8ff
ec401810153f3b1410153f44140f143f44140c103f44140b0f3f1cb8ffec
b30f193f38b8ffecb70f193f00140f193f002b2b2b2b2b2b2b2b2b2b5900
5d0134363332161515140623222627262726232207061514171617161716
161514062322271406062322263535343633321615141716163332363534
27262426263534363332037c181213181813111702063852878d4e3b4630
86af44615fcec7c77f08150d1218171312191723996fa4a05152fec7884c
d493ae032b1d1a1a1f901e1a16193c2738392b353c281c0f1318237c486b
a76522140e1a1ead1e1a19152e1f303f7a444e2f2f2034683c6c7f00>YPTUZD+CIDFont+F4 AddT42Char 
YPTUZD+CIDFont+F4 /CharStrings get begin
/f 73 def
/h 75 def
/l 79 def
/s 86 def
end
YPTUZD+CIDFont+F4 /Encoding get
dup 102 /f put
dup 104 /h put
dup 108 /l put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUZD+CIDFont+F4*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m 5{/.notdef}rp /s 140{/.notdef}rp]
YPTUZD+CIDFont+F4 nf
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
39.1337 298.221 mo
(flash)
[5.60544 5.69792 5.60544 5.60544 0 ]xsh
gsave
67.2135 288.501 mo
72.8535 288.501 li
72.8535 301.701 li
67.2135 301.701 li
cp
eclp
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
67.2138 298.221 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: UGXAAA+CIDFont+F4 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUZD+CIDFont+F4 gcheck setglobal} if
1 186 19 <000200e5ffe203e805050019002f01adb312020a23bafff20003fff4b22d
08294109fff20028fff40027fff70016fff70015fff7b61c0e090e080e02
bafff80010fff2b21d0e2dbafff2002afff2402329051c0e1f0e22126d08
1e1c12002e0127050d22230e213d122c3d051205050d1a3d00b802ccb631
243d0e1930a1ba01060018012c852b4e10f44ded10f6ed003f3f10ed10ed
12393911123911391112393931304379405a022e10261819171916191519
141905061c1b1d1b1e1b1f1b04062726282629262a2604060b0c0a0c090c
080c070c05060326221124400020131a40012b062540002d042f4001230f
2140011b19214001260c2c40002e022c40002b2b2b2b012b2b2b2b2b2a2a
2a2a2b810038383838383838380138383838383838383838383838435c58
4015111e13193f141e11173f111e11173f161e1e123f22b8fffb40401e12
3f27141c113f27141b103f2714190f3f2714170e3f2314170e3f2714160d
3f2314160d3f03141e123f031e120b3f2d0a120b3f161e120b3f1d141921
3f22b8ffec401719213f0f14171f3f2314171f3f020a10113e170a10113e
012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b590115100706
232226272626272635351037363332161716161716073426272627262322
0215151416171617163332123503e881659a4a832e1d450f1781659a4b82
2e1e44101654432a192839478da0432b182839488ca002dbd0fef19e7c3b
3521923d5673d001109e7c3b3522923c567f77cd3d231923fee0c0b977ce
3d2219240121c000>YPTUZD+CIDFont+F4 AddT42Char 
1 764 20 <000100e4000003e804f8001b00b1b212081bb8fff8400f11060008091b40
1b5012501b04090fba02a9000c019b4009100c0c0f10be090802ba02a900
05019b40120105050201be081918171615141307121b14ba02d700110267
b7000509080c190214bb02810011001702ce400a00671111016700100110
bd0270001c00a101ce0018012c852b10f65ded3c10fded10f4ed003f3c3f
eded01111217390010fd3d12392f180110f5f4c40010fd3d12392f180110
f5f4c43130005d3838383801112132161514062321222635343633211105
062322263534373637029001201e1a1a1efd6c1e1a1a1e0120feee14090f
190a081904f8fb5c17131218181213170430560619110f0d0809>YPTUZD+CIDFont+F4 AddT42Char 
1 1030 22 <000100c3ffe20401050500380111b36c380100b8fff24033323235113a24
49244a2543387200067f218638950493359638a535a638b913ba17cb13cb
14cd17db13dd17ec13fa17ff2f1100b8fff2b514221b243411b8ffde401c
1b243429080f0b2b2811032f211e1a180005231c00191e2028262c19b801
5bb32020122cb8018db3263d330eb8018db5123d06233d36b8010d400a15
3d031c1c39031a3a2fba010d001c0281b70b19393305060decba01800018
012c852b003f3f014e10f44de4e44e10e612392f4d10edf4ed0010fde410
fde412392fed111239123911390111121739121739113931304379401c34
352425131404052534234001130515400124352640011404124000002b2b
012b2b81818181012b2b385d713800387101161615140623222627263534
363332171633323635342626232226353436331732363534262322060706
06232226353437363332161514060313747af5b86ce82e0f171010149bad
92c561b65d1e1a19194871939a7c57922c10110b111857799a9fcc6202ab
34b56297e75c30101210180f73b7704b905317131218018a5b5e903c3414
091710283d55bf845496>YPTUZD+CIDFont+F4 AddT42Char 
1 1460 27 <000300e7ffe203e705050019002500310187404412a722ca00ee00ee0c04
1a041d152b2d572b6502050b0e04181b0e14188a1894019a089a0b93279f
2b9c2da901a327b502bf0aba0cba2bcd0aca2b137901a5210231142db8ff
ecb21c231eb8ffddb230232ebaffdd0015fff8b41108282824b8ffddb22a
2822baffec0025ffeab2272221b8ffec40122b284008233d2929061d3d13
052f3d060d23b801d9401029291610263d03e11a3d3f164f160216b801ed
400b33203d10e12c3d091932a1ba01060018012c852b4e10f44dedf4ed10
f45dedf4ed1112392fe6003fed3fed12392fed3130437940302d311b1f11
1504081e122040001c141a40012e072c400030052640011f111d40011b15
1d40012d082f400031042f40002b2b2b2b012b2b2b2b8181818100383838
3838383838013838383838383838005d015d710071435c58b9002bffe8b3
1e123f21b8ffe8b3170e3f21b8ffe84030160d3f0518170e3f0518160d3f
0118170e3f0118160d3f0518140c3f15181e123f1518170e3f1518160d3f
1518140c3f012b2b2b2b2b2b2b2b2b2b2b2b590116161514062322263534
363726272635343633321615140706373426232206151416333236133426
2322061514163332360313696be0a0a0e06b6a5c2a3ad59697d43a290da1
7574a19f76779f17ac8080acad7f7fad028b33a76095dada955fa7343539
51628acfcf8a62503ae96c9b9c6a629393fe076fa4a46e72a8a8>YPTUZD+CIDFont+F4 AddT42Char 
YPTUZD+CIDFont+F4 /CharStrings get begin
/zero 19 def
/one 20 def
/three 22 def
/eight 27 def
end
YPTUZD+CIDFont+F4 /Encoding get
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUZD+CIDFont+F4*1 
[48{/.notdef}rp /zero /one /.notdef /three 4{/.notdef}rp /eight 40{/.notdef}rp 
/a 2{/.notdef}rp /d /e /f /.notdef /h /i 
2{/.notdef}rp /l /m 5{/.notdef}rp /s 140{/.notdef}rp]
YPTUZD+CIDFont+F4 nf
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
72.8538 298.221 mo
(131f08)
[5.60544 5.69792 5.51108 5.60544 5.60544 0 ]xsh
gsave
106.573 288.501 mo
112.213 288.501 li
112.213 301.701 li
106.573 301.701 li
cp
eclp
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
106.574 298.221 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: UGXAAA+CIDFont+F4 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUZD+CIDFont+F4 gcheck setglobal} if
1 3546 69 <0002002dffdf045704e7001c00280124b10d13b802ae400b102f14101013
14220d1c16b802ae4013192f1519191615221c1e0703010b20260c5d0bb8
0163b5262109202101b80163402a031c00000307090b1d210f06df060206
1a2a2354000c201514400f093f0f146f14df14031419295e8e18b8012c85
2b4e10f45d012b3c4dfd3ce44e10f65d4ded003f3f3f3c1910e418ed10ed
19e418e41112393911123910fd3d12392f180110f5f4c40010fd3d12392f
180110f5f4c43130004bb00c534bb024515a5840546a0901300b30244728
56286428a922a524b701b90bbc1eb627c405cb08d404dc08e405ea081116
04310132053d0b43014f0b491e560155055d075d0b640166056c0b75027b
0a7b1e791f891eba1fbd22b5251601b8fff0b20b1028b8ffeab11e163838
383800715d01715901113633320015140023222715232226353436333311
23222635343633013426232206151416333236012a98d7b80106fef7b5dc
93c51e1a1a1e71711e1a1a1e039eda9292dada9292da04e7fdd3c6fef5c2
c4fef0c6a518121317043e18131218fcc89fdddd9f9fdddd>YPTUZD+CIDFont+F4 AddT42Char 
YPTUZD+CIDFont+F4 /CharStrings get begin
/b 69 def
end
YPTUZD+CIDFont+F4 /Encoding get
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUZD+CIDFont+F4*1 
[48{/.notdef}rp /zero /one /.notdef /three 4{/.notdef}rp /eight 40{/.notdef}rp 
/a /b /.notdef /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m 5{/.notdef}rp /s 140{/.notdef}rp]
YPTUZD+CIDFont+F4 nf
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
112.214 298.221 mo
(labs)
[5.60544 5.69792 5.60543 0 ]xsh
gsave
134.653 288.501 mo
140.293 288.501 li
140.293 301.701 li
134.653 301.701 li
cp
eclp
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
134.654 298.221 mo
(\000\014)sh
grestore
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
140.294 298.221 mo
(f08)
[5.60544 5.69792 0 ]xsh
gsave
157.093 288.501 mo
162.733 288.501 li
162.733 301.701 li
157.093 301.701 li
cp
eclp
YPTUZC+CIDFont+F6 [9.3423 0 0 -9.3423 0 0 ]msf
157.094 298.221 mo
(\000\014)sh
grestore
%ADOBeginSubsetFont: UGXAAA+CIDFont+F4 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUZD+CIDFont+F4 gcheck setglobal} if
1 110 17 <000101cdffe2030100f1000d001c400a01b2080b04d80b190e6db9011e00
182b4e10f44ded003fed3130253332161514062323222635343602552438
50513724385051f14f383a4e4f383a4e>YPTUZD+CIDFont+F4 AddT42Char 
1 1996 43 <0001006b0000046f0492004301c2400c12a116ae2fb316bf2f040a10b802
a4400b0d2b110d0d10111d0a1a20b802a4400e101d011d2b211d1d20211d
1a2c32b802a4400e002f012f29332f2f32331d2c3c42b802a440100f3f1f
3f023f2b433f3f42431d3c0903b802a4400b062b02060603021d091913b8
02a4400b162912161613121d192b25b802a4400e0f2801282b2428282524
1d2b3b35b802a44043003801382b34383835341d3b23221e000101091932
262c2c2b20261a25262b2b1a13261a19023c3b3b0a0a0908331e24341e24
43401c1f349f43af43028f43df430243b802bb401b45121e2121111e3002
40029002034f02d002020f025f026f020302bc02bb0044004a01d600182b
10f45d5d71ed3c10ed10f45d712b3ced10ed003f3c103c103c3f3ced103c
10ed10ed103c10ed1112392f3cfd3c10fd3d12392f180110f55df4c40010
fd3d12392f180110f55df4c40010fd3d12392f180110f5f4c40010fd3d12
392f180110f5f4c40010fd3d12392f180110f55df4c40010fd3d12392f18
0110f55df4c40010fd3d12392f180110f55df4c40010fd3d12392f180110
f5f4c43130015d01435c58b9002fffc040090f143f16400f143f2fb8ffc0
b70e133f16400e133f2b2b2b2b5901211133321615140623212226353436
333311232226353436333332161514062323112111232226353436333332
161514062323113332161514062321222635343633330383fdd3711e1a1a
1efedc1e1a1a1e5f341f1a1a1ff91e1a1a1e71022d701e1a191ff91f1a1a
1f345f1e1a1a1efedc1e1a191f700236fe1e171312181812131703ea1713
131717131317fe4c01b41713131717131317fc161713121818121317>YPTUZD+CIDFont+F4 AddT42Char 
1 2624 54 <000100b9ffdf041404ad004400e2402a3d334c1b4f335d3377168616871a
891b8c3999420a4920464102911fa21fa941a842d517e617f517071bb8ff
f6b2131836b8ffde405f2b40293d3b1a180f05140001370e323023032e34
0f0d0003110b19263c3c341125430b20090942550b8b042e8b2734252143
030402270821090e26086037255f1e6f1e021e1a46142540312623264041
6f297f298f299f29af29052919459dba011f0018012c852b4e10f45d4de4
eded10ed4e10f65d4dfdfded003f3f3f3f10ed10ed10ed2b10fd11392fed
11121739111217390111123939121739111239313000383838015d00715d
013534363332161515140623222627262623220615141e02171617161615
140623222715140623222635353436333216171616333236353426272627
2627263534363332039317131317171312170105a3848ba42e4c6066ab41
5759e6c3db8317131218171312170105bb9e9eb746453098d15c5cd3adb0
043e1c1e1a1a1ed61e1a181b54868f613252331f111c1d278a5e90cb8930
1e1a1a1ee81f1a181b5c979e6c42671e151a2348488584be>YPTUZD+CIDFont+F4 AddT42Char 
1 6632 83 <0002002dfe7e0457038000250031012d403f310a0f39270a0f39352d5101
55025d0d6401650265066b0d74017b2a722e0bc306c00ad907d909da27d9
31e606e50a0819032c037b078c039903ac0306161cb802ae400b192f1d19
191c1d2216150fb802ae400b12c80e12120f0e2215251fb802ae4041222f
1e22221f1e2225010d292f0f3b151c3b1616150e2f210b0a292101930407
001f3b250626210f0801081a332c000e201e0f1d4f1d5f1d6f1d041d1932
5e8e18b8012c852b4e10f45d3c4dfd3c3c4e10f65d4ded003fed3c3fe4ed
3fed3f3c10ed10ed1112393910fd3d12392f180110f5f4c40010fd3d1239
2f180110f5f4c40010fd3d12392f180110f5f4c43130004bb00c534bb024
515a58b2280c30bafff4002dfff4b42b0c0d2001baffe20031ffddb12723
38383838383838385901715d0071012b2b01153636333216161514002322
271133321615140623212226353436333311232226353436330134262322
06151416333236012a4bac757cd273fefdbde18ccc1e1a1a1efe6f1e1a1a
1e71711e1a1a1e039dd39899d4d49997d40362995b5c74cf72b5feffb7fe
061713121817131317043b18131218fe6991cfd09091d0cf>YPTUZD+CIDFont+F4 AddT42Char 
1 7764 87 <00010092ffdf043b0492002c00c94024fb1b010d1b1a1b02a40ab50ac20a
d30ae40a05760e860e950ea60ec60bd60b0617080107ba02ae0004017240
150804040708220110140915110f1011121405190c29b801a340111e3b24
24073b010100060c21190b148804b801a940142c2c0809202621c6001c10
1c201c701cbf1c051cb802e5b32d2aad182b10f65de43cfd3c3c10f4e400
3fed3f3c10ed3c10fded111217391239011112390010fd3d12392f180110
f5f4c431304379400e1a1b0a0b0b1a091f000a1b0c1f00002b012b818100
715d01715d01213216151406232111141633323637363332161514070606
232226351123222635343633333534363332161501ba01c81e1a1a1efe38
757155c637140d10180d20f77193ae9b1e1a1a1e9b181213180362181312
18fdd1496233200d19110f0d214d8a75022f18131218f81e1a1a1e00>YPTUZD+CIDFont+F4 AddT42Char 
YPTUZD+CIDFont+F4 /CharStrings get begin
/period 17 def
/H 43 def
/S 54 def
/p 83 def
/t 87 def
end
YPTUZD+CIDFont+F4 /Encoding get
dup 46 /period put
dup 72 /H put
dup 83 /S put
dup 112 /p put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUZD+CIDFont+F4*1 
[46{/.notdef}rp /period /.notdef /zero /one /.notdef /three 4{/.notdef}rp 
/eight 15{/.notdef}rp /H 10{/.notdef}rp /S 13{/.notdef}rp /a /b 
/.notdef /d /e /f /.notdef /h /i 2{/.notdef}rp 
/l /m 2{/.notdef}rp /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
YPTUZD+CIDFont+F4 nf
YPTUZD+CIDFont+F4*1 [9.3423 0 0 -9.3423 0 0 ]msf
162.734 298.221 mo
(SampleHist1.eps)
[5.60542 5.69794 5.60544 5.60544 5.60544 5.69794 5.60544 5.60544 5.69791 5.60544 5.41766 5.51108 
5.60544 5.60544 0 ]xsh
gsave
-35.3865 -150.46 mo
-30.4665 -150.46 li
-30.4665 -142.3 li
-35.3865 -142.3 li
cp
eclp
%ADOBeginSubsetFont: MZQAAA+CIDFont+F7 Initial
ct_T42Dict begin
-0.547 -0.301 1.707 1.07
 256 array 0 1 255 {1 index exch /.notdef put} for  /MZQAAA+CIDFont+F7
Type42DictBegin
[<00010000000c000c000c000c4f532f3273df9e5e000000cc000000606376
74206e8d8c0c0000012c000003146670676df069ec5d00000440000006f6
676c7966741fcf600000334c0000012c68656164e17e371c00000b380000
00366868656111500f0500000b7000000024686d7478523a093300000b94
000014f06c6f6361929592b30000208400000ae06d617870092707780000
2b64000000206e616d65b3e5b7cf00002b84000002a67072657044529302
00002e2c0000051f676469720000000000000000000000000003048b02bc
00050008059a053300000125059a0533000003a000d303050800020b0804
030504040204a10006ff4000205b00000010000000004d53202000200022
2082061efe5900ca080b01ae2000019f00000000046305d1000000200003
0614000a000005d1001f000005d1001f0000000000000000000000000000
0463002300000000ffe100000000ffdd00000000ffe10000fe64fff50000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000800000008000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000001d10229000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000018f0186018001540177016d0175016901400163
0159014001830175016f00ae0000000000a500e901200119010e01010123
0111010700fb0125011d01130104000a011101ec000000f400000000009d
0000000000f4013a00f302e100000000008b000000bf00d400e400ed00fe
010e00be00be0067006700aa00a100580058011e01270139014800ee010e
011c0000009a00b100b900be00c800d400db00e600f00108015a0176018a
0194020d0247025a010e011801430189024d02fb04240007017702120167
03ba01f401060115012400ba00cc00da03b0001801a000e0032d02b30078
004c00d30134014003a5032a031f02d102a5000000000000000000000000
000000000000000000000614000a006405d1001f00a705d105f000000000
000000000000000000000463002300a00000ffe100000000ffdd00000000
ffe10000fe64fe59000005d1001ffc65ffe8feeafeaa0463001ffe86fe57
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000080000000000
00000000ffe90463001700a0fe5ffe59fefdfe7800870087fc83ffd8febc
fd2cfb7eff2eff1b00000123011c0111010400fc00f400e100d300be0000
012001190111010800fe00e900be011d0113010900ff00d900b900760123
0113010900ff00f500eb00e100d300be00f000e000e60120010c00d30078
018901180108ffe84042595554534e4d4c49483837363534333231302f2e
2d2c2b2a292827262524232221201f1e1d1c1b1a19181716151413121110
0f0e0d0c0b0a090807060504030201002c01b0184358b119072b1b212121
592d2c01b0184358b11a072b1b212121592d2c01b0184358b0032510f221
b000121b212121592d2c01b0184358b11b072b1b212121592d2c01b01843
58b11c072b1b212121592d2c01b0184358b11d072b1b212121592d2c01b0
184358b11e072b1b212121592d2c4eb00014b046234344b0032510b10046
e6b00013b00114b00010f221b001134db000122d2c01b018435845646a23
4569b01943646060b0462344231020b046f02fb000121b21212121592d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0462370b101463e
01b0462370b10246453ab10200080d2d2cb0122bb0022545b00225456ab0
408b60b0022523442121212d2cb0132bb0022545b00225456ab8ffc08c60
b0022523442121212d2cb000b0122b2121212d2cb000b0132b2121212d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2cb100032545685458b0032545b0032545
606820b004252344b0042523441bb00325204568208a2344b00325456860
b003252344592d2cb00325204568208a2344b00325456860b0032523442d
2cb01643588721c01bb01243588745b0112bb0472344b0477ae41b038a45
186920b04723448a8a8720b0a05158b0112bb0472344b0477ae41b21b047
7ae4595959182d2c208a4523456860442d2c456a422d2c01182f2d2c2121
2d2c01b0022545b002254564606ab00325456a6120b00425456a208a8b65
b0042523448cb00325234421212d2c01456823456961b00325456a6120b0
0425456a208a8b65b0042523448cb00325234421212d2c018a8a45642345
646164422d2c01b0022543b04054b0022543b000545a58b003252045b040
614459b0022543b00054b0022543b040545a58b004252045b04060445921
2121212d2c014b525843b00225452361441b2121592d2c014b525843b002
25452360441b2121592d2c4b525845441b2121592d2c0120b003252349b0
4060b0206320b000525823b002253823b002256538008a63381b21212121
2159012d2c4b505845441b2121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c2045
b003254652583f1b2111592d2c2045b003254650583f1b2111592d2c00b0
0743b006430b2d2c4b5258b00425b0042549b00425b00425496120b00054
58212043b0005558591bb04054582043b0005458591b2043b00054581bb0
0325b8ffc03859595959212121212d2c4b52584365381b2121592d2c4b52
5843381b2121592d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2cb0134358031b02592d2cb0134358021b03592d2cb00a2b2310203cb017
2b2d2cb0282b8a102320d023b0102bb00558c01b3c59201011b00012012d
2c4b53234b515a5820458a60441b2121592d2c4b53234b515a58381b2121
592d2c20b003254523452361688a204568208a234460442d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0482b
1b21212121592d2cb002435458b0492b1b212121592d2cb0024350584b53
234b515a58381b2121591b21212121592d2cb012004b014b54422d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b12601885158b94000020063b80400
885458b202400243604259b94000040063b80800885458b2028002436042
595959595959b10002435458400a0540084009400c020d021bb101024354
58b2054008ba010000090100b30c010d011bb18002435258b2054008b801
80b109401bb2054008ba01800009014059b9400000808855b94000020063
b8040088555a58b30c000d011bb30c000d0159595942424242422d2c4518
68234b51582320452064b04050587c59688a6059442d2cb082b0024354b0
01b00243545b58212310b0201ac91b8a10e5592d00000001000000054ccd
0991725c5f0f3cf5001b080000000000ad6c53f800000000cb9b4b33fb9a
fd930da8089300000009000200000000000000010000080bfe5200000e38
fb9afd710da8000100000000000000000000000000000509080001000000
000002bc0000000000000000000004b300a7000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000005b000b90000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000079500be0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000598005a000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000003fa00aa00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c800e60000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
04c800e60000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004f9004e
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000459003b0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005a800a4000000000000000000000000000000000000000000000000
0000000000000000068800a400000000000000000000000000000000056c
00a400000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003bb0068000000000000000000000000000000000000000000000000
00000000000000000000000003bb00680000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001f001f001f001f001f001f001f
001f001f001f001f001f001f001f001f001f001f001f001f001f001f0096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600960096009600960096009600960096009600960096
009600960096009600010000056f00210002001e0001000200100040005a
0000034906f6000100010000000c00960001000000000000003200000001
000000000003001100320001000000000004001100430001000000000006
001100540001000000000007003b00650003000104090000006400a00003
000104090001002201040003000104090002000e01260003000104090003
002201340003000104090004002201560003000104090006002201780003
0001040900070076019aa92032303132204d6963726f736f667420436f72
706f726174696f6e2e20416c6c207269676874732072657365727665642e
444d434745442b434944466f6e742b4637444d434745442b434944466f6e
742b4637444d434745442b434944466f6e742b463756657264616e612069
7320612074726164656d61726b206f6620746865204d6963726f736f6674
2067726f7570206f6620636f6d70616e6965732e00a90020003200300031
00320020004d006900630072006f0073006f0066007400200043006f0072
0070006f0072006100740069006f006e002e00200041006c006c00200072
00690067006800740073002000720065007300650072007600650064002e
0044004d0043004700450044002b0043004900440046006f006e0074002b
004600370052006500670075006c006100720044004d0043004700450044
002b0043004900440046006f006e0074002b004600370044004d00430047
00450044002b0043004900440046006f006e0074002b004600370044004d
0043004700450044002b0043004900440046006f006e0074002b00460037
00560065007200640061006e006100200069007300200061002000740072
006100640065006d00610072006b0020006f006600200074006800650020
004d006900630072006f0073006f00660074002000670072006f00750070
0020006f006600200063006f006d00700061006e006900650073002e0000
b15409bc0189002a011c00550125b2eaff1f417301250032012400550124
00010107005501230021010700550122010700ff001f015a000101070055
0159000101070055018701610014001f0157004801560055015600010107
0055001f0180000100ef017e0001017d0161002b001f017c017b0020001f
017b01610011001f017a0161002b001f017901780025001f01780161001c
001f01770161001c001f0176015e00ff001f0173017200ff001f01720161
0015001f017101610014001f017001610014001f016f01610014001f016c
01610015001f016b01610014001f016a01610014001f016901610014001f
016801610014001f0164b2ff111fbd01630161002b001f01620161b2151f
40b80160b313133640b80160b20c1036410e01600161001c001f015f0161
001c001f015e0161001c001fffc00161b30d103600bf01610001000c014f
000101130055014eb210ff1fb8014db20fff1fbc014c002a014b00550129
b210ff1fb80128b20fff1fb8011db213ff1fb8010bb204ff1fb8010ab203
ff1fb80117b213ff1fbc01090001010700550108b204ff1fb80107b203ff
1fb8011ab216ff1fbc01150001011300550114b210ff1fb80113b20fff1f
bc01060001010400550105b201ff1fb80104400b00ff1fe8e7241fe7e611
1fb8ffc04064d60c103640d901d792111fcd92111fcc92111fcb92111fca
92111fc992111fc192111fa99b241f9c9b241f9a9b201f999b281f9b921b
1ff198151fa798191f97982a1f9698251f9598191f4098019892111f0ff2
019492191f93922b1f9192211f009201b8ffc0405c920b10360fbc1fbc2f
bc032fbb0100b910b9020fb80100b50120f87ff80210f720f740f7037ff5
0110f420f40220ee50ee022fec3fec4fec0330d570d502b3b2281fb2b311
1f2fb33fb360b070b070d405e5e4241fe3e4241f2fe401b8ffc0b3c20c10
36b8ffc040ffb40c1036d27f2e1fd17f2e1fd07f201fcf7f111fc07f111f
bf7f111f8fbeffbe020fbd01ffbd01b1af111f70af0110a820a8028b8930
1f8a892f1f897f331f8884181f8784181f8684491f8584111f83843a1f84
7f201f6faaa0aab0aaf0aa0440a101105c205c405c03f37f111f827f181f
817f4a1f807f181f7e7f2e1f7d7f2e1f507f607f707f03100f211f16152a
1f0706211f19182a1f0403211f13122a1f2c2d0f2a2b0e28290f26270e24
250f22230e20210f1e1f0e1b1c1d0d18191a0d1516170d1213140d0f1011
0c0c0d0e0c090a0b0c0607080c0304050c0001020c100f800f0240068006
0240038003020f003f004f007f00040f002f003f00401d6f007f00bf00cf
00ff00081b3b081f0f3a081f0339081f0038081f503301b0124b004b5442
b013014b004b5342b0332b4bb8080052b0322b4bb009505b58b101018e59
b0332bb00288b8010054b00488b8020054b012435a5b58b80119b101018e
851bb0124358b10101b80180858d8d1bb10101b80180858d8d59592b1db0
644b5358b0701d59b0324b5358b0901d59002b2b2b2b73747373732b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb116322b4bb0645242
b1e9044523456861b0e92344b0e945b0ea456861b0ea234401732b2b2b2b
2b2b7373732b2b2b2b2b2b2b2b2b73732b7374732b2b2b2b2b2b2b2b732b
2b732b2b737373737373737373737373002b752b2b2b732b742b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b73732b2b2b2b2b2b2b2b2b2b2b185e2b0000>
[301 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 62 21 <000100b90000054a05ee001d008b40300e7c0d103702111411210d251134
0d341147115611621574150a00020f0f0b991307021c9a016000601c7000
701c041cb8ffc0401609103700001c02088980160116168c1f1010000201
022f5d332f10f62f5ded1239332f2b5d002ffd323fed332f435458401b0f
020b181f021b182f022b183b184a185b055b186b056b187f170d5d593130
5d012b212135362437363635342623220607231136243320041514060706
060721054afb6f86010d517966837b5ccb57204701158b011801268d915b
b827029df661da4f75ae55666f4c3b014b1f3eebd78dfe87548d1c00>MZQAAA+CIDFont+F7 AddT42Char 
1 0 0 <00020100000007000600000300070014b706020400060204002fcdddcd00
2fcdddcd3130211121112521112101000600fa800500fb000600fa008005
0000>MZQAAA+CIDFont+F7 AddT42Char 
MZQAAA+CIDFont+F7 /CharStrings get begin
/two 21 def
end
MZQAAA+CIDFont+F7 /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/YPTUZE+CIDFont+F7 /MZQAAA+CIDFont+F7 findfont ct_VMDictPut
/YPTUZE+CIDFont+F7*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
YPTUZE+CIDFont+F7 nf
YPTUZE+CIDFont+F7*1 [6.9468 0 0 -6.9468 0 0 ]msf
-35.3864 -143.38 mo
(2)sh
grestore
%ADOBeginSubsetFont: ELRBAA+CIDFont+F8-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ELRBAA+CIDFont+F8)
%%Title: (ELRBAA+CIDFont+F8 Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ELRBAA+CIDFont+F8 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4137 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
3 <001C60D8A8C9B8707C25> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ELRBAA+CIDFont+F8-Identity-H /Identity-H 0 [/ELRBAA+CIDFont+F8] ct_ComposeFont pop end end
%ADOEndSubsetFont
/YPTUZF+CIDFont+F8 /ELRBAA+CIDFont+F8-Identity-H findfont ct_VMDictPut
YPTUZF+CIDFont+F8 [8.6237 0 0 -8.6237 0 0 ]msf
-29.5064 -143.38 mo
(\000\003\000\003\000\003)sh
gsave
-18.4665 -150.46 mo
-16.0665 -150.46 li
-16.0665 -142.3 li
-18.4665 -142.3 li
cp
eclp
%ADOBeginSubsetFont: AXNBAA+CIDFont+F9 Initial
ct_T42Dict begin
-0.453 -0.301 1.582 1.051
 256 array 0 1 255 {1 index exch /.notdef put} for  /AXNBAA+CIDFont+F9
Type42DictBegin
[<00010000000c000c000c000c4f532f3272539be3000000cc000000606376
74204e7b73100000012c000002e86670676d137f6ab8000004140000071b
676c79666dac69d5000033b800000ebe68656164e19b9cb900000b300000
003668686561111f0e3d00000b6800000024686d7478db470dcc00000b8c
000014f06c6f6361f4f6f9460000207c00000ae06d61787009e407b70000
2b5c000000206e616d65b5edbad700002b7c000002a670726570a026f181
00002e240000059167646972000000000000000000000000000304110190
00050008059a0533002c0125059a0533004c03a0007802a70800020b0604
0305040b0204a10006ff4000205b00000010000000004d53202000010020
2082061efe5900ca080b01ae2000019f00000000045d05d1000000200003
0614000a000005d1001f000005d1001f0000000000000000000000000000
045d001f00000000ffe100000000ffe100000000ffe10000fe64fff50000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000800000008000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000001d10229000000000000000000000000000001670000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000d100c600c100b400c100b400c300bc00b700b7
00ae009e00d100c700bd00b400bd00b4007000c800a800a3009e009100ac
00a2009d009600a6009e00910084010200c3000000af0090000000000000
0000000000000089000002e1007300000056006d00740081008c0093009f
00a60047000000860031003800790059005900aa00b800d100f600a0009c
00880078006f00800087008e009900a000b500d300e9011300fd01120133
013c021c0244029f011d022f028f037300a300b2009d00af025f022101a2
01fd0087009400a200b400760080008c03b000270090009b02b002ff0091
009b004c009400000000000000000000000000000614000a007205d1001f
00ba05d105f00000000000000000000000000000045d001f00b90000ffe1
00000000ffe100000000ffe10000fe64fe59000005d1001ffc65ffd9fef4
feaf045c0479fe8bfe5c0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000008000000000000000000ffe9045d001700b9fe5ffe59ff02fe78
007c0087fc59ffe9fed0fd40fb88ff2eff1e00c3009c00a200b3008e0082
0074009d00a300a900910088009b00a50091008a007800990091008a007e
0075037303b6023f022100af01ea01d60076009d0000ffd9404459555453
4d4c4948463a393837363534333231302f2e2d2c2b2a2928272625242322
21201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504
030201002c01b0184358b119072b1b212121592d2c01b0184358b11a072b
1b212121592d2c01b0184358b0032510f221b000121b212121592d2c01b0
184358b11b072b1b212121592d2c01b0184358b11c072b1b212121592d2c
01b0184358b11d072b1b212121592d2c01b0184358b11e072b1b21212159
2d2c4eb00014b046234344b0032510b10046e6b00013b00114b00010f221
b001134db000122d2c01b018435845646a234569b01943646060b0462344
231020b046f02fb000121b21212121592d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453ab102
00080d2d2cb0122bb0022545b00225456ab0408b60b0022523442121212d
2cb0132bb0022545b00225456ab8ffc08c60b0022523442121212d2cb000
b0122b2121212d2cb000b0132b2121212d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2cb100032545685458b0032545b0032545606820b004252344b0042523
441bb00325204568208a2344b00325456860b003252344592d2cb0032520
4568208a2344b00325456860b0032523442d2cb01643588721c01bb01243
588745b0112bb0472344b0477ae41b038a45186920b04723448a8a8720b0
a05158b0112bb0472344b0477ae41b21b0477ae4595959182d2c208a4523
456860442d2c456a422d2c01182f2d2c21212d2c01b0022545b002254564
606ab00325456a6120b00425456a208a8b65b0042523448cb00325234421
212d2c01456823456961b00325456a6120b00425456a208a8b65b0042523
448cb00325234421212d2c018a8a45642345646164422d2c01b0022543b0
4054b0022543b000545a58b003252045b040614459b0022543b00054b002
2543b040545a58b004252045b040604459212121212d2c014b525843b002
25452361441b2121592d2c014b525843b00225452360441b2121592d2c4b
525845441b2121592d2c0120b003252349b04060b0206320b000525823b0
02253823b002256538008a63381b212121212159012d2c4b505845441b21
21592d2c01b005251023208af500b0016023edec2d2c01b005251023208a
f500b0016123edec2d2c01b0062510f500edec2d2c462346608a8a462320
468a608a61b8ff8062232010238ab14b4b8a70456020b0005058b00161b8
ffba8b1bb0468c59b0106068013a2d2c2045b003254652583f1b2111592d
2c2045b003254650583f1b2111592d2c00b00743b006430b2d2c4b5258b0
0425b0042549b00425b00425496120b0005458212043b0005558591bb040
54582043b0005458591b2043b00054581bb00325b8ffc038595959592121
21212d2c4b52584365381b2121592d2c4b525843381b2121592d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b0
0826b008260f10161345683ab001162d2cb4000100000015b00826b00826
b00826b008260f1016134568653ab001162d2cb0134358031b02592d2cb0
134358021b03592d2cb00a2b2310203cb0172b2d2cb0282b8a102320d023
b0102bb00558c01b3c59201011b00012012d2c4b53234b515a5820458a60
441b2121592d2c4b53234b515a58381b2121592d2c20b003254523452361
688a204568208a234460442d2c0120b0016020b0404348232f003c012d2c
2020b0016046b04023422fb0016020b064e000b003e0012d2c4b53234b51
5a5820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0482b1b21212121592d2cb0024354
58b0492b1b212121592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b12601885158b94000020063b80400885458b2024002
43604259b94000040063b80800885458b2028002436042595959595959b1
0002435458400a0540084009400c020d021bb10102435458b2054008ba01
0000090100b30c010d011bb18002435258b2054008b80180b109401bb205
4008ba01800009014059b9400000808855b94000020063b8040088555a58
b30c000d011bb30c000d0159595942424242422d2c451868234b51582320
452064b04050587c59688a6059442d2cb082b0024354b001b00243545b58
212310b0201ac91b8a10e5592d000001000000054ccd7fe6ae975f0f3cf5
001b080000000000adbcbc6e00000000cb9b4885fc60fd930cae08680000
0009000200000000000000010000080bfe5200000cedfc60fde80cae000d
00030000000000000000000000000509080001000000000002d0000002d0
00000000000003ac01310000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002e9007b0000
000000000000000000000516002200000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000006be
004600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000516ff360000000004ce002704fc0038042b0057
04fc005504c400580000000000000000000000000232003a000000000000
00000232003a07c900380510003804db005904fcffd900000000036a0038
042b0011032700800510007a00000000000000000000000004ba00330000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000045d00c8045d00c60000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000045600e400000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000456006600000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000004ccfff30000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000457000300000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000004caffb00496003904d9006d05430039047a
003900000000000000000000000003400012000000000000000004060039
05e500390521003a057e006d044300390000000004b70039047afffe047a
008f050b007b000000000000000000000000046400a50000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000023f00400000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000377007b0000
000000000000000000000000000000000000000000000000000000000000
000000000377fff800000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000001f001f001f001f001f001f001f001f001f001f001f
001f001f001f001f001f001f003300330033003300b100b100b100b100b1
00b100b100b100b100b100b100b100b100b100b100b100b100b100b100b1
00b100b100b100b100b100b100b100b100b100b100b100b100b100b100b1
00b100b100b100b100b100b100b100b100b100b100c700c7015f01d70242
024202b402b402b402b402f302f302f3032003d20446049c051b051b0574
060e06880708070807080708075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
075f075f075f075f075f075f075f075f075f075f075f075f075f075f075f
00010000056f003a0003001e0001000200100041005a00000405071b0001
00010000000c009600010000000000000032000000010000000000030011
003200010000000000040011004300010000000000060011005400010000
00000007003b00650003000104090000006400a000030001040900010022
01040003000104090002000e012600030001040900030022013400030001
040900040022015600030001040900060022017800030001040900070076
019aa92032303132204d6963726f736f667420436f72706f726174696f6e
2e20416c6c207269676874732072657365727665642e444d434745452b43
4944466f6e742b4639444d434745452b434944466f6e742b4639444d4347
45452b434944466f6e742b463956657264616e6120697320612074726164
656d61726b206f6620746865204d6963726f736f66742067726f7570206f
6620636f6d70616e6965732e00a9002000320030003100320020004d0069
00630072006f0073006f0066007400200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000720069006700680074
0073002000720065007300650072007600650064002e0044004d00430047
00450045002b0043004900440046006f006e0074002b0046003900520065
00670075006c006100720044004d0043004700450045002b004300490044
0046006f006e0074002b004600390044004d0043004700450045002b0043
004900440046006f006e0074002b004600390044004d0043004700450045
002b0043004900440046006f006e0074002b004600390056006500720064
0061006e006100200069007300200061002000740072006100640065006d
00610072006b0020006f006600200074006800650020004d006900630072
006f0073006f00660074002000670072006f007500700020006f00660020
0063006f006d00700061006e006900650073002e0000410f0054016f016e
0039001f017101540039001f016d01540039001f016c016bb2191f004111
016a0020016a0070016a00030030016a0050016a00c0016a00e0016a0004
000f016ab401eae9381fbd01730038017200550040011bb325254640b801
1bb321214640b8011bb21d1d46b80119b221fd55b80118b2fdff1fb80150
b201fd55b9ffc0014fb2090d46b8014fb201fd554109014d0034014c0055
0000014c00010009014cb301fd5500411401690001000d01680167002c00
1f016701660039001f01660164002a001f01650164004e001f0164b39748
1f80412a0163009001630002016201540031001f016101540030001f0160
01540039001f015f0154002d001f017001590039001f015e01580017001f
015d01540030001f015c01540039001f015b01540039001f015a0154b22d
1f3f41100158004f0158005f01580003015701540030001f015601540039
001f01550154b2391f0fba0154001f0154b2021240b80154b32a2d4640b8
0154b31d20467f411401530001001301480116000d001f01470116004800
1f014601150048001f01450001010900550144b210ff1fb80143b20fff1f
bc0142002a01410055011fb210ff1fb8011eb20fff1fb80113b213ff1fb8
0101b204ff1fb80100b203ff1fb8010d400b13ff1ffe04ff1ffd03ff1fb8
0110b216ff1fbc010b000101090055010ab210ff1fb8010940170fff1ffc
01fa55fb01ff1ffa00ff1fe8e7191fe6e71a1fb8ffc04083c7171936e2eb
261feceb2c1f20d940d9024fcc5fcc02cbca121f6fca019fcaafca02c992
081fc1b4241f9c9a371f9b9a321f999a321f9a91321f9896301f9796481f
9596481f96922d1f9491321f93912e1f9192461f1f922f92029291201f4f
915f91029f910140e0e0e00210de20de0200de10de30de40de50de70de06
40bc090b36b8ffc04050bb0c103610ba0140b809103600b710b720b70360
b570b502e3e5231fe4e5201f00ed30ed60ed0350d50140d450d470d403f2
81151ff0b4321fefb4321f9fb401dbda2c1fdadb211fdcdd2e1fddbe121f
b8ffc0b3d30e1036b8ffc040ffd30a1036d2be081fd1be121f0fd01fd02f
d003cfbe191fc0be191fbf7d4b1fbdbe1f1fbe7f391f8e8c4b1f8d8b4b1f
8c8b281f8a8b431f898b431f8b7f471f9d851a1f88852e1f87852a1f8685
641f8485501f8385501f40853c3d36857f391fa082121f82804b1f817f4b
1f4080414436807f281f7d7f4b1f7f7e451f707e01407e41433629643b64
4b6459646064746406eae9381f100f211f16152a1f0706211f19182a1f04
03211f13122a1f2c2d0f2a2b0e28290f26270e24250f22230e20210f1e1f
0e1b1c1d0d18191a0d1516170d1213140d0f10110c0c0d0e0c090a0b0c06
07080c0304050c0001020c100f800f02400680060240038003020f00402a
3f004f007f00040f002f003f006f007f00bf00cf00ff00081b3b081f0f3a
081f0339081f0038081f503301b0124b004b5442b013014b004b5342b033
2b4bb8080052b0322b4bb009505b58b101018e59b0332bb00288b8010054
b00488b8020054b012435a5b58b80119b101018e851bb0124358b10101b8
0180858d8d1bb10101b80180858d8d59592b1db0644b5358b0701d59b032
4b5358b0901d59002b2b2b2b73747373732b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2bb116322b4bb0645242b00345b0e9456861b0e9
2344b0e945b0ea456861b0ea23442b01b0642045684473b07e4568b07e23
442b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73
2b2b2b2b2b2b2b2b732b2b2b7373732b2b73732b742b2b7374730073742b
752b2b2b2b2b2b2b2b2b2b2b2b2b73742b73732b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e732b2b5e732b2b2b732b2b2b2b
2b2b2b2b2b2b732b2b2b2b2b5e732b5e732b2b2b2b2b2b2b2b2b2b2b7373
742b2b2b2b182b00000000>
[3775 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> AXNBAA+CIDFont+F9 AddT42Char 
1 0 0 <00020100000007000600000300070014b706020400060204002fcdddcd00
2fcdddcd3130211121112521112101000600fa800500fb000600fa008005
0000>AXNBAA+CIDFont+F9 AddT42Char 
AXNBAA+CIDFont+F9 /CharStrings get begin
/space 3 def
end
AXNBAA+CIDFont+F9 /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/YPTUZG+CIDFont+F9 /AXNBAA+CIDFont+F9 findfont ct_VMDictPut
/YPTUZG+CIDFont+F9*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
YPTUZG+CIDFont+F9 nf
YPTUZG+CIDFont+F9*1 [6.9468 0 0 -6.9468 0 0 ]msf
-18.4664 -143.38 mo
( )sh
grestore
.48 lw
2 lc
0 lj
-22.6665 -142.54 mo
-22.6665 -149.98 li
@
gsave
-14.9865 -150.46 mo
114.733 -150.46 li
114.733 -142.3 li
-14.9865 -142.3 li
cp
eclp
%ADOBeginSubsetFont: AXNBAA+CIDFont+F9 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YPTUZG+CIDFont+F9 gcheck setglobal} if
1 62 17 <0001007b000001ae011d0003000eb502d60103d1012fed002fed31302123
1333016cf142f1011d00>YPTUZG+CIDFont+F9 AddT42Char 
1 102 21 <00010022000004be05f0001d009940490f0402151c0412152e042f052411
2d1a3b033f043f05330733173e1a4f044f05430744174f1a6e046c056015
6f1a7d057f0d710e70157f187f1a1d700f010f0f0b991307021c99011db8
ffc0b30e10371cb8ffc0401b091037200f300f400f600f700f051d0f1c1d
0f030208897f160116b8ffc0b6090b3716161f012f11332f2b5ded121739
2f2f5d2b2b002ffd323fed332f5d31305d21213736363736123534262322
06072337363633321615140207060407210413fc0f2f8dc58bf4c98b6d59
e56e0a284ff671c9dab8e689fedf5e0320d167916fc3010b7e6264433fcb
2439af95a1fee1bf71d54300>YPTUZG+CIDFont+F9 AddT42Char 
1 354 66 <0001ff36fed40470ff4c00030011b602c603000005022f11332f002fed31
300507213704701cfae21cb47878>YPTUZG+CIDFont+F9 AddT42Char 
1 398 68 <00020027ffe1045a0478000c0035008c4059002f132f2c15252f3a14342f
4915442f542a662a762a0b1c000c0d351e351e1e86313414313134363934
42313637363a29291631ba37068316401219371600982a1c331c431c031c
1c2d134f2901292925972d103409951316003fed2f3fed332f5d1112392f
5ded30012f2bed10e611392f2b0710e42b870e2e2b057d10c4870e3c3c05
c4c43130005d010606070606151416333236370706060706062322263534
363736243736363534262726262322060723373636333216151406070323
036a9aef4e515462675bbd52241b5d30337e5285a6757371013fcc060826
23235d3855da440a2539dc65d0d00906afbb024d062321217154484c5139
9c103b15171f9b7d85b73a3933061c2916303c12120d371bbc0f26828d1b
3d1bfd0a>YPTUZG+CIDFont+F9 AddT42Char 
1 702 69 <00020038ffe104a706140013002300784055180f2b0f26133d0e3a1c4502
461558036a0373017c08790f701376157c1f0f0500150002178300bc250a
091e1d0e0d860c0b0c24390c42260b350b450b560b750b050b2425243a0b
b9240c001a9511100b21960616003fed2f3fed3f300110e62b07105de42b
8710fdc0c0c0c0c00110f4ed5d31005d0114020706062322262707230133
0336363332160136363534262322060703161633323604a7665559dc8559
9b3d19b00167bc805db26da3adfecb3838687253b24d9340795468a402fc
a3fed8696e792f27370614fdd44153cafd8957d07677815234fd81222666
>YPTUZG+CIDFont+F9 AddT42Char 
1 942 70 <00010057ffe7044f04770027005940120903020919031409421b511b621b
7f03080eb8ffe040120b1037101017970c1024241d97001624240fb8ffc0
40120d10370f0f294f295f297f29031a8306bb2810f4ed5d11332f2b332f
003fed332f3fed332f31302b5d0522262726263534123736243332161707
2326262726262322021514163332363736363733070606021c6aa33d3b40
625a5701009462ad42290b143c29296440c2f591863f7e2c3154130b2857
c2193236349e699d01106764753625cb123015161dfeb8eb8d9824151734
0dcd2739>YPTUZG+CIDFont+F9 AddT42Char 
1 1156 72 <00020058ffe60482047c00090027006340320412100e1412531b601b7f0c
701207099840170117170a0698101021211d970a16460954097409032121
130d09171a038513b8ffc0400b090f371313291a830dbb2810f4ed11332f
2bed1139391112392f5d003fed332f3fed12392f71ed31305d0136363534
262322060701222435100021321615140607210606151416333236373307
060607060603c0050475818edc270106e8fef80184011ebeca1113fcc906
05ac9e6ee94f0b2932503e3e6002a81d28186b78b090fd3edad2013301b7
bdab1e82561d38188da15636cb121e0f0f10>YPTUZG+CIDFont+F9 AddT42Char 
1 1384 76 <0002003a0000025c05db0003000700504034009d02040586020607060839
07422606350645065606750605060809083a0f0940097f067f090406039e
02400d10370202070f06002f3f332f2bed30012f5d2b07105de42b1087c0
fdc0012fed310107233713012301025c2dd42d70fefebc010205dbc3c3fe
82fba3045d00>YPTUZG+CIDFont+F9 AddT42Char 
1 1510 79 <0001003a0000025e06140003003b40270001860203020439034226023502
45025602750205020405043a0f0540057f027f050402030002002f3f3001
2f5d2b07105de42b1087fdc03101012301025efe98bc01680614f9ec0614
>YPTUZG+CIDFont+F9 AddT42Char 
1 1600 80 <0001003800000750047c002e00d140920028022e122e2624202d37223728
352a352d45224528452d580657220e102924290229101386142021161736
178c17ac17ec170506173c1786179617a617da17f9170717170120050808
860104140101041e1e1c232325221f221f1f8620211420202104202101ba
305f307030022f3921422620352045205620752005202f302f3a20b92f0c
952c101b952610210f051420002f33333f3fed3fed300110e62b07105de4
2b5d10f687c0872e2b7d10c407083c083c870e2e182b057d10c401181112
392f5d7187c0fdc0c05d31015d0114060703231336363534262322060706
060703231336363534262322060703230133073636333216173636333216
07500909a8bc930c0f4c6b4fb057020906a5bc930d1064553c947bc1bc01
02bc1d69b363718d1784d26693940366214a26fd2b027c355a274c52583b
194019fd35027c3e4f295b433d51fcbe045d7c49526055605592>YPTUZG+CIDFont+F9 AddT42Char 
1 1956 81 <0001003800000497047c0019008fb73713461356130318b8ffda4052090d
372914690e7a0e7018701905050808860104140101040f0f0d1414161310
1310108611121411111204111201ba1b601b011a39124226113511451156
11751105111a1b1a3a11b91a0c951710120f0511002f333f3fed300110e6
2b07105de42b5d10f687c0872e2b7d10c407083c083c870e2e182b057d10
c431005d2b015d0114060703231336363534262322060703230133073636
33321604970908a8bc930c0d536c4cb757c1bc0102bc1d6bbb6392a3035e
18521ffd2b027c354f275455543afcbe045d7c4b5093>YPTUZG+CIDFont+F9 AddT42Char 
1 2188 82 <00020059ffe10482047c0011002300394028090703105a16541f6a16641f
7f087011081a06150f0218970f1021970616158300bc251e8309bb2410f6
ed10f4ed003fed3fed5d31305d0114020706062322263534123736363332
1601363635342623220607060615141633323604825c5457e498c7df5b56
53f18fc1e4fece3639867a619a38363a867b609c02d296feec666a77e3c8
9601106a667adcfd8c50d2758c905d514fd4728a945c>YPTUZG+CIDFont+F9 AddT42Char 
1 2360 83 <0002ffd9fe6404a7047c001300230087404a0f0300131f03101323133b0f
4502442272017b08700d70137b1c74220e0e0e101a1a181b090a0d0d0a0a
860b0c140b0b0c148300bc252439780c010c42460b570b770b030b242524
3a0bb8ffc040100910370b179511100c0f1e9606160b1b003f3fed3f3fed
30012f2b2b07105de45d2b10f4ed872e2b7d10c4070e3c3c083c083c3100
5d0114020706062322262703230133073636333216073426232206070316
1633323637363604a7675556e4815a973e6cbc0161bc1b5db46da3abc568
7253b24d9241765467a536393802fca6fedc6669792927fe2a05f9754153
cada77815234fd872322645054ce>YPTUZG+CIDFont+F9 AddT42Char 
1 2614 85 <00010038000003e9045d0012006e401a190d360b460b550b040c07070508
0b0b080886090a1409090a12b8ffc0402909103712121470140113390a42
2609350945095609750905091314133a09b913000004950f0f0b0f09002f
3f3ffd322f300110e62b07105de42b5d11332f2b872e2b7d10c407083c0e
3c31015d0123262623220607032313330736363332161703be0a2845315e
b955b4beffbe2685b955312c2a03970a09553cfce7045da55d480507>YPTUZG+CIDFont+F9 AddT42Char 
1 2792 86 <00010011ffe5040b047800390088401d091505321a151532353343335f15
503260337b10752d0b02200c10371fb8ffe0402d0c10376f17010e34172b
041d00212128981d1020040104040b9800160e8300341034203403342b83
1734170320b8ffc0401009103720203b0f3b1f3b3f3b7f3b04032f5d1133
2f2b1239392fed2f5ded003fed332f5d3fed332f111217395d31302b2b5d
052226273733161617161633323635342627262627262635343637363633
321617072326262726262322061514161716161716161514060706060195
7dc5422a0a1543342f79458da0524d276d387570444340c67964c73f280a
1041322b733e7d9c4c4e316b327475494547ca1b3e24c912311817216865
35391209160f217d5a4e883936433225c00d2c17131c695b3243130c150c
1d7a5c4d93363940>YPTUZG+CIDFont+F9 AddT42Char 
1 3100 87 <00010080ffea037e059e001e008e405c0c121c122c123c134e1359136c13
071e0204041d1b18171d040486171c1417171c1f392b1c5b1c7b1c031c42
171f201f3a4f004f20600070007f200500000d0d20191700141014201403
14701c011c021e18981c1b0f0d0d09971116003ffd322f3f33ed39392f5d
30012f5d333311332f332f5d2b0710e45d2b870e2e2b057d10c4103c3c07
103c3c31005d010721030606151416333236373307060623222635343637
13233733133303037e22fe7c780a104a642971140a23387f318a9709088b
7f227f4bbc4b045d98fdfd27651e49471c08a20e127983203f2802589801
41febf00>YPTUZG+CIDFont+F9 AddT42Char 
1 3344 88 <0001007affe104d8045d001900a740630f081f082a08490349087e077f08
7f137617093600490279020318181603020305000101860219140202190f
0e0e860d0c140d0d0c590d6b0d02190c0d0002100226023502440255026e
027b02800290020a02021b601b011a390d420c1a1b1a3a0c09b8ffc0400c
09103709000d0f0215950616003fed2f3f3330012f2b332b0710e42b5d11
332f5d87c05d872e2b0e7d10c487052e182b7d10c408103c083c31015d00
5d010123370606232226353436371333030606151416333236371304d8fe
febc1d6bb96790a20908a7bc93091057694abf51c0045dfba37c4952918b
22402902d5fd8427641d565656380342>YPTUZG+CIDFont+F9 AddT42Char 
1 3600 92 <00010033fe6404f0045d0007008340342500010203020504050148065806
780603068700070705048403030207001700100220023f00390249025a00
5b027f000a000307b8ffdf40110910370707090f09016b027c0202020203
b8ffe1400d091037030507020308030f011b003f3f121739012f2b332f5d
5d11332f2b123931305d8710fdc01087fd5dc008c008c0015d0123010333
1301330102cf0145cac19e0216cdfe6401dd041cfcc1033f>YPTUZG+CIDFont+F9 AddT42Char 
YPTUZG+CIDFont+F9 /CharStrings get begin
/period 17 def
/two 21 def
/underscore 66 def
/a 68 def
/b 69 def
/c 70 def
/e 72 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/y 92 def
end
YPTUZG+CIDFont+F9 /Encoding get
dup 46 /period put
dup 50 /two put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YPTUZG+CIDFont+F9*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 3{/.notdef}rp /two 44{/.notdef}rp /underscore 
/.notdef /a /b /c /.notdef /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
YPTUZG+CIDFont+F9 nf
YPTUZG+CIDFont+F9*1 [6.9468 0 0 -6.9468 0 0 ]msf
-14.9864 -143.38 mo
(measurement_uncertainty_plots2.nb)
[6.75928 4.14024 4.17502 3.61926 4.44731 2.96629 4.23959 6.66828 4.23958 4.44731 2.7787 4.37788 
4.44733 4.4473 3.61926 4.14024 3.058 2.77869 4.17502 1.94235 4.39728 2.7787 4.10558 4.37859 
4.32787 1.94234 4.16875 2.77869 3.61926 4.37788 2.5717 4.44731 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/YPTUZF+CIDFont+F8-Identity-H uf
/YPTUZF+CIDFont+F8 /CIDFont ur
/YPTUZD+CIDFont+F4*1 uf
/YPTUZD+CIDFont+F4 uf
/UGXAAA+CIDFont+F4 uf
/YPTUZA+CIDFont+F3-Identity-H uf
/YPTUZA+CIDFont+F3 /CIDFont ur
/YPTUYZ+CIDFont+F2*1 uf
/YPTUYZ+CIDFont+F2 uf
/ONKBAA+CIDFont+F2 uf
/YPTUZE+CIDFont+F7*1 uf
/YPTUZE+CIDFont+F7 uf
/MZQAAA+CIDFont+F7 uf
/YPTUYY+CIDFont+F1-Identity-H uf
/YPTUYY+CIDFont+F1 /CIDFont ur
/YPTUZG+CIDFont+F9*1 uf
/YPTUZG+CIDFont+F9 uf
/AXNBAA+CIDFont+F9 uf
/YPTUZC+CIDFont+F6-Identity-H uf
/YPTUZC+CIDFont+F6 /CIDFont ur
/YPTUZB+CIDFont+F5-Identity-H uf
/YPTUZB+CIDFont+F5 /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
